{
	"id": "f7e3bdbab70fae94bc9100c459fe43af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"mocks/BusdMock.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n/**\r\n *Submitted for verification at BscScan.com on 2020-09-02\r\n */\r\n\r\npragma solidity 0.8.9;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    constructor() {}\r\n\r\n    function _msgSender() internal view returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract BusdMock is Context, IBEP20, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n    uint8 public _decimals;\r\n    string public _symbol;\r\n    string public _name;\r\n\r\n    constructor() {\r\n        _name = \"BUSD Token\";\r\n        _symbol = \"BUSD\";\r\n        _decimals = 18;\r\n        _totalSupply = 31000000000000000000000000;\r\n        _balances[msg.sender] = _totalSupply;\r\n\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address) {\r\n        return owner();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-totalSupply}.\r\n     */\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {BEP20};\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"BEP20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     */\r\n    function mint(uint256 amount) public onlyOwner returns (bool) {\r\n        _mint(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Burn `amount` tokens and decreasing the total supply.\r\n     */\r\n    function burn(uint256 amount) public returns (bool) {\r\n        _burn(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(\r\n            amount,\r\n            \"BEP20: transfer amount exceeds balance\"\r\n        );\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(\r\n            amount,\r\n            \"BEP20: burn amount exceeds balance\"\r\n        );\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See {_burn} and {_approve}.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(\r\n            account,\r\n            _msgSender(),\r\n            _allowances[account][_msgSender()].sub(\r\n                amount,\r\n                \"BEP20: burn amount exceeds allowance\"\r\n            )\r\n        );\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"mocks/BusdMock.sol": {
				"BusdMock": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mocks/BusdMock.sol\":12279:21465  contract BusdMock is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"mocks/BusdMock.sol\":12617:12885  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"mocks/BusdMock.sol\":10645:10662  address msgSender */\n  0x00\n    /* \"mocks/BusdMock.sol\":10665:10677  _msgSender() */\n  tag_7\n    /* \"mocks/BusdMock.sol\":10665:10675  _msgSender */\n  shl(0x20, tag_8)\n    /* \"mocks/BusdMock.sol\":10665:10677  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"mocks/BusdMock.sol\":10645:10677  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"mocks/BusdMock.sol\":10697:10706  msgSender */\n  dup1\n    /* \"mocks/BusdMock.sol\":10688:10694  _owner */\n  0x00\n  dup1\n    /* \"mocks/BusdMock.sol\":10688:10706  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"mocks/BusdMock.sol\":10755:10764  msgSender */\n  dup1\n    /* \"mocks/BusdMock.sol\":10722:10765  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"mocks/BusdMock.sol\":10751:10752  0 */\n  0x00\n    /* \"mocks/BusdMock.sol\":10722:10765  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"mocks/BusdMock.sol\":10634:10773  {... */\n  pop\n    /* \"mocks/BusdMock.sol\":12642:12662  _name = \"BUSD Token\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4255534420546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"mocks/BusdMock.sol\":12642:12647  _name */\n  0x06\n    /* \"mocks/BusdMock.sol\":12642:12662  _name = \"BUSD Token\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"mocks/BusdMock.sol\":12673:12689  _symbol = \"BUSD\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4255534400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"mocks/BusdMock.sol\":12673:12680  _symbol */\n  0x05\n    /* \"mocks/BusdMock.sol\":12673:12689  _symbol = \"BUSD\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"mocks/BusdMock.sol\":12712:12714  18 */\n  0x12\n    /* \"mocks/BusdMock.sol\":12700:12709  _decimals */\n  0x04\n  0x00\n    /* \"mocks/BusdMock.sol\":12700:12714  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"mocks/BusdMock.sol\":12740:12766  31000000000000000000000000 */\n  0x19a4815e0ad0c67f000000\n    /* \"mocks/BusdMock.sol\":12725:12737  _totalSupply */\n  0x03\n    /* \"mocks/BusdMock.sol\":12725:12766  _totalSupply = 31000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"mocks/BusdMock.sol\":12801:12813  _totalSupply */\n  sload(0x03)\n    /* \"mocks/BusdMock.sol\":12777:12786  _balances */\n  0x01\n    /* \"mocks/BusdMock.sol\":12777:12798  _balances[msg.sender] */\n  0x00\n    /* \"mocks/BusdMock.sol\":12787:12797  msg.sender */\n  caller\n    /* \"mocks/BusdMock.sol\":12777:12798  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"mocks/BusdMock.sol\":12777:12813  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"mocks/BusdMock.sol\":12852:12862  msg.sender */\n  caller\n    /* \"mocks/BusdMock.sol\":12831:12877  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"mocks/BusdMock.sol\":12848:12849  0 */\n  0x00\n    /* \"mocks/BusdMock.sol\":12831:12877  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"mocks/BusdMock.sol\":12864:12876  _totalSupply */\n  sload(0x03)\n    /* \"mocks/BusdMock.sol\":12831:12877  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"mocks/BusdMock.sol\":12279:21465  contract BusdMock is Context, IBEP20, Ownable {... */\n  jump(tag_15)\n    /* \"mocks/BusdMock.sol\":4079:4186  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"mocks/BusdMock.sol\":4124:4139  address payable */\n  0x00\n    /* \"mocks/BusdMock.sol\":4167:4177  msg.sender */\n  caller\n    /* \"mocks/BusdMock.sol\":4152:4178  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"mocks/BusdMock.sol\":4079:4186  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"mocks/BusdMock.sol\":12279:21465  contract BusdMock is Context, IBEP20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_20\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_19)\ntag_20:\n  dup3\n  0x1f\n  lt\n  tag_21\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_21:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_22:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_22)\ntag_23:\ntag_19:\n  pop\n  swap1\n  pop\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n  swap1\n  jump\t// out\ntag_25:\ntag_26:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_26)\ntag_27:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:84   */\ntag_28:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:208   */\ntag_29:\n    /* \"#utility.yul\":177:201   */\n  tag_34\n    /* \"#utility.yul\":195:200   */\n  dup2\n    /* \"#utility.yul\":177:201   */\n  tag_28\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":172:175   */\n  dup3\n    /* \"#utility.yul\":165:202   */\n  mstore\n    /* \"#utility.yul\":90:208   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":214:436   */\ntag_14:\n    /* \"#utility.yul\":307:311   */\n  0x00\n    /* \"#utility.yul\":345:347   */\n  0x20\n    /* \"#utility.yul\":334:343   */\n  dup3\n    /* \"#utility.yul\":330:348   */\n  add\n    /* \"#utility.yul\":322:348   */\n  swap1\n  pop\n    /* \"#utility.yul\":358:429   */\n  tag_36\n    /* \"#utility.yul\":426:427   */\n  0x00\n    /* \"#utility.yul\":415:424   */\n  dup4\n    /* \"#utility.yul\":411:428   */\n  add\n    /* \"#utility.yul\":402:408   */\n  dup5\n    /* \"#utility.yul\":358:429   */\n  tag_29\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":214:436   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":442:622   */\ntag_30:\n    /* \"#utility.yul\":490:567   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":487:488   */\n  0x00\n    /* \"#utility.yul\":480:568   */\n  mstore\n    /* \"#utility.yul\":587:591   */\n  0x22\n    /* \"#utility.yul\":584:585   */\n  0x04\n    /* \"#utility.yul\":577:592   */\n  mstore\n    /* \"#utility.yul\":611:615   */\n  0x24\n    /* \"#utility.yul\":608:609   */\n  0x00\n    /* \"#utility.yul\":601:616   */\n  revert\n    /* \"#utility.yul\":628:948   */\ntag_18:\n    /* \"#utility.yul\":672:678   */\n  0x00\n    /* \"#utility.yul\":709:710   */\n  0x02\n    /* \"#utility.yul\":703:707   */\n  dup3\n    /* \"#utility.yul\":699:711   */\n  div\n    /* \"#utility.yul\":689:711   */\n  swap1\n  pop\n    /* \"#utility.yul\":756:757   */\n  0x01\n    /* \"#utility.yul\":750:754   */\n  dup3\n    /* \"#utility.yul\":746:758   */\n  and\n    /* \"#utility.yul\":777:795   */\n  dup1\n    /* \"#utility.yul\":767:848   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":833:837   */\n  0x7f\n    /* \"#utility.yul\":825:831   */\n  dup3\n    /* \"#utility.yul\":821:838   */\n  and\n    /* \"#utility.yul\":811:838   */\n  swap2\n  pop\n    /* \"#utility.yul\":767:848   */\ntag_39:\n    /* \"#utility.yul\":895:897   */\n  0x20\n    /* \"#utility.yul\":887:893   */\n  dup3\n    /* \"#utility.yul\":884:898   */\n  lt\n    /* \"#utility.yul\":864:882   */\n  dup2\n    /* \"#utility.yul\":861:899   */\n  eq\n    /* \"#utility.yul\":858:942   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":914:932   */\n  tag_41\n  tag_30\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":858:942   */\ntag_40:\n    /* \"#utility.yul\":679:948   */\n  pop\n    /* \"#utility.yul\":628:948   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"mocks/BusdMock.sol\":12279:21465  contract BusdMock is Context, IBEP20, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"mocks/BusdMock.sol\":12279:21465  contract BusdMock is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x32424aa3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"mocks/BusdMock.sol\":13407:13492  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":14594:14748  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":13556:13649  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":15219:15658  function transferFrom(... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":13105:13190  function decimals() external view returns (uint8) {... */\n    tag_7:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":12532:12554  uint8 public _decimals */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":16066:16349  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":17675:17795  function burn(uint256 amount) public returns (bool) {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":13711:13823  function balanceOf(address account) external view returns (uint256) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":11496:11636  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"mocks/BusdMock.sol\":12953:13038  function getOwner() external view returns (address) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":10854:10933  function owner() public view returns (address) {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":13255:13344  function symbol() external view returns (string memory) {... */\n    tag_15:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":17452:17582  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":16851:17234  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":14035:14218  function transfer(address recipient, uint256 amount)... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":12561:12582  string public _symbol */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":12589:12608  string public _name */\n    tag_20:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":14280:14448  function allowance(address owner, address spender)... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":11791:11900  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_22:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"mocks/BusdMock.sol\":13407:13492  function name() external view returns (string memory) {... */\n    tag_27:\n        /* \"mocks/BusdMock.sol\":13446:13459  string memory */\n      0x60\n        /* \"mocks/BusdMock.sol\":13479:13484  _name */\n      0x06\n        /* \"mocks/BusdMock.sol\":13472:13484  return _name */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":13407:13492  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":14594:14748  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_33:\n        /* \"mocks/BusdMock.sol\":14662:14666  bool */\n      0x00\n        /* \"mocks/BusdMock.sol\":14679:14718  _approve(_msgSender(), spender, amount) */\n      tag_112\n        /* \"mocks/BusdMock.sol\":14688:14700  _msgSender() */\n      tag_113\n        /* \"mocks/BusdMock.sol\":14688:14698  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":14688:14700  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"mocks/BusdMock.sol\":14702:14709  spender */\n      dup5\n        /* \"mocks/BusdMock.sol\":14711:14717  amount */\n      dup5\n        /* \"mocks/BusdMock.sol\":14679:14687  _approve */\n      tag_115\n        /* \"mocks/BusdMock.sol\":14679:14718  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_112:\n        /* \"mocks/BusdMock.sol\":14736:14740  true */\n      0x01\n        /* \"mocks/BusdMock.sol\":14729:14740  return true */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":14594:14748  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":13556:13649  function totalSupply() external view returns (uint256) {... */\n    tag_37:\n        /* \"mocks/BusdMock.sol\":13602:13609  uint256 */\n      0x00\n        /* \"mocks/BusdMock.sol\":13629:13641  _totalSupply */\n      sload(0x03)\n        /* \"mocks/BusdMock.sol\":13622:13641  return _totalSupply */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":13556:13649  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":15219:15658  function transferFrom(... */\n    tag_43:\n        /* \"mocks/BusdMock.sol\":15344:15348  bool */\n      0x00\n        /* \"mocks/BusdMock.sol\":15361:15397  _transfer(sender, recipient, amount) */\n      tag_118\n        /* \"mocks/BusdMock.sol\":15371:15377  sender */\n      dup5\n        /* \"mocks/BusdMock.sol\":15379:15388  recipient */\n      dup5\n        /* \"mocks/BusdMock.sol\":15390:15396  amount */\n      dup5\n        /* \"mocks/BusdMock.sol\":15361:15370  _transfer */\n      tag_119\n        /* \"mocks/BusdMock.sol\":15361:15397  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_118:\n        /* \"mocks/BusdMock.sol\":15408:15628  _approve(... */\n      tag_120\n        /* \"mocks/BusdMock.sol\":15431:15437  sender */\n      dup5\n        /* \"mocks/BusdMock.sol\":15452:15464  _msgSender() */\n      tag_121\n        /* \"mocks/BusdMock.sol\":15452:15462  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":15452:15464  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"mocks/BusdMock.sol\":15479:15617  _allowances[sender][_msgSender()].sub(... */\n      tag_122\n        /* \"mocks/BusdMock.sol\":15535:15541  amount */\n      dup6\n        /* \"mocks/BusdMock.sol\":15479:15617  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"mocks/BusdMock.sol\":15479:15490  _allowances */\n      0x02\n        /* \"mocks/BusdMock.sol\":15479:15498  _allowances[sender] */\n      0x00\n        /* \"mocks/BusdMock.sol\":15491:15497  sender */\n      dup12\n        /* \"mocks/BusdMock.sol\":15479:15498  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":15479:15512  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"mocks/BusdMock.sol\":15499:15511  _msgSender() */\n      tag_123\n        /* \"mocks/BusdMock.sol\":15499:15509  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":15499:15511  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"mocks/BusdMock.sol\":15479:15512  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mocks/BusdMock.sol\":15479:15516  _allowances[sender][_msgSender()].sub */\n      tag_124\n      swap1\n        /* \"mocks/BusdMock.sol\":15479:15617  _allowances[sender][_msgSender()].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"mocks/BusdMock.sol\":15408:15416  _approve */\n      tag_115\n        /* \"mocks/BusdMock.sol\":15408:15628  _approve(... */\n      jump\t// in\n    tag_120:\n        /* \"mocks/BusdMock.sol\":15646:15650  true */\n      0x01\n        /* \"mocks/BusdMock.sol\":15639:15650  return true */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":15219:15658  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":13105:13190  function decimals() external view returns (uint8) {... */\n    tag_46:\n        /* \"mocks/BusdMock.sol\":13148:13153  uint8 */\n      0x00\n        /* \"mocks/BusdMock.sol\":13173:13182  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"mocks/BusdMock.sol\":13166:13182  return _decimals */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":13105:13190  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":12532:12554  uint8 public _decimals */\n    tag_50:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":16066:16349  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_54:\n        /* \"mocks/BusdMock.sol\":16164:16168  bool */\n      0x00\n        /* \"mocks/BusdMock.sol\":16186:16319  _approve(... */\n      tag_127\n        /* \"mocks/BusdMock.sol\":16209:16221  _msgSender() */\n      tag_128\n        /* \"mocks/BusdMock.sol\":16209:16219  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":16209:16221  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"mocks/BusdMock.sol\":16236:16243  spender */\n      dup5\n        /* \"mocks/BusdMock.sol\":16258:16308  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_129\n        /* \"mocks/BusdMock.sol\":16297:16307  addedValue */\n      dup6\n        /* \"mocks/BusdMock.sol\":16258:16269  _allowances */\n      0x02\n        /* \"mocks/BusdMock.sol\":16258:16283  _allowances[_msgSender()] */\n      0x00\n        /* \"mocks/BusdMock.sol\":16270:16282  _msgSender() */\n      tag_130\n        /* \"mocks/BusdMock.sol\":16270:16280  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":16270:16282  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"mocks/BusdMock.sol\":16258:16283  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":16258:16292  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"mocks/BusdMock.sol\":16284:16291  spender */\n      dup10\n        /* \"mocks/BusdMock.sol\":16258:16292  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mocks/BusdMock.sol\":16258:16296  _allowances[_msgSender()][spender].add */\n      tag_131\n      swap1\n        /* \"mocks/BusdMock.sol\":16258:16308  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"mocks/BusdMock.sol\":16186:16194  _approve */\n      tag_115\n        /* \"mocks/BusdMock.sol\":16186:16319  _approve(... */\n      jump\t// in\n    tag_127:\n        /* \"mocks/BusdMock.sol\":16337:16341  true */\n      0x01\n        /* \"mocks/BusdMock.sol\":16330:16341  return true */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":16066:16349  function increaseAllowance(address spender, uint256 addedValue)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":17675:17795  function burn(uint256 amount) public returns (bool) {... */\n    tag_59:\n        /* \"mocks/BusdMock.sol\":17721:17725  bool */\n      0x00\n        /* \"mocks/BusdMock.sol\":17738:17765  _burn(_msgSender(), amount) */\n      tag_133\n        /* \"mocks/BusdMock.sol\":17744:17756  _msgSender() */\n      tag_134\n        /* \"mocks/BusdMock.sol\":17744:17754  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":17744:17756  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"mocks/BusdMock.sol\":17758:17764  amount */\n      dup4\n        /* \"mocks/BusdMock.sol\":17738:17743  _burn */\n      tag_135\n        /* \"mocks/BusdMock.sol\":17738:17765  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_133:\n        /* \"mocks/BusdMock.sol\":17783:17787  true */\n      0x01\n        /* \"mocks/BusdMock.sol\":17776:17787  return true */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":17675:17795  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":13711:13823  function balanceOf(address account) external view returns (uint256) {... */\n    tag_64:\n        /* \"mocks/BusdMock.sol\":13770:13777  uint256 */\n      0x00\n        /* \"mocks/BusdMock.sol\":13797:13806  _balances */\n      0x01\n        /* \"mocks/BusdMock.sol\":13797:13815  _balances[account] */\n      0x00\n        /* \"mocks/BusdMock.sol\":13807:13814  account */\n      dup4\n        /* \"mocks/BusdMock.sol\":13797:13815  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mocks/BusdMock.sol\":13790:13815  return _balances[account] */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":13711:13823  function balanceOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":11496:11636  function renounceOwnership() public onlyOwner {... */\n    tag_67:\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      tag_138\n        /* \"mocks/BusdMock.sol\":11076:11086  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11072  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mocks/BusdMock.sol\":11058:11125  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"mocks/BusdMock.sol\":11595:11596  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":11558:11598  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11579:11585  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11558:11598  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mocks/BusdMock.sol\":11626:11627  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":11609:11615  _owner */\n      dup1\n      0x00\n        /* \"mocks/BusdMock.sol\":11609:11628  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":11496:11636  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":12953:13038  function getOwner() external view returns (address) {... */\n    tag_69:\n        /* \"mocks/BusdMock.sol\":12996:13003  address */\n      0x00\n        /* \"mocks/BusdMock.sol\":13023:13030  owner() */\n      tag_144\n        /* \"mocks/BusdMock.sol\":13023:13028  owner */\n      tag_73\n        /* \"mocks/BusdMock.sol\":13023:13030  owner() */\n      jump\t// in\n    tag_144:\n        /* \"mocks/BusdMock.sol\":13016:13030  return owner() */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":12953:13038  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":10854:10933  function owner() public view returns (address) {... */\n    tag_73:\n        /* \"mocks/BusdMock.sol\":10892:10899  address */\n      0x00\n        /* \"mocks/BusdMock.sol\":10919:10925  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":10912:10925  return _owner */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":10854:10933  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":13255:13344  function symbol() external view returns (string memory) {... */\n    tag_76:\n        /* \"mocks/BusdMock.sol\":13296:13309  string memory */\n      0x60\n        /* \"mocks/BusdMock.sol\":13329:13336  _symbol */\n      0x05\n        /* \"mocks/BusdMock.sol\":13322:13336  return _symbol */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_106\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_106\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":13255:13344  function symbol() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":17452:17582  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_80:\n        /* \"mocks/BusdMock.sol\":17508:17512  bool */\n      0x00\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      tag_153\n        /* \"mocks/BusdMock.sol\":11076:11086  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11072  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mocks/BusdMock.sol\":11058:11125  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_141\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"mocks/BusdMock.sol\":17525:17552  _mint(_msgSender(), amount) */\n      tag_157\n        /* \"mocks/BusdMock.sol\":17531:17543  _msgSender() */\n      tag_158\n        /* \"mocks/BusdMock.sol\":17531:17541  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":17531:17543  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"mocks/BusdMock.sol\":17545:17551  amount */\n      dup4\n        /* \"mocks/BusdMock.sol\":17525:17530  _mint */\n      tag_159\n        /* \"mocks/BusdMock.sol\":17525:17552  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_157:\n        /* \"mocks/BusdMock.sol\":17570:17574  true */\n      0x01\n        /* \"mocks/BusdMock.sol\":17563:17574  return true */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":17452:17582  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":16851:17234  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_84:\n        /* \"mocks/BusdMock.sol\":16954:16958  bool */\n      0x00\n        /* \"mocks/BusdMock.sol\":16976:17204  _approve(... */\n      tag_161\n        /* \"mocks/BusdMock.sol\":16999:17011  _msgSender() */\n      tag_162\n        /* \"mocks/BusdMock.sol\":16999:17009  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":16999:17011  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"mocks/BusdMock.sol\":17026:17033  spender */\n      dup5\n        /* \"mocks/BusdMock.sol\":17048:17193  _allowances[_msgSender()][spender].sub(... */\n      tag_163\n        /* \"mocks/BusdMock.sol\":17105:17120  subtractedValue */\n      dup6\n        /* \"mocks/BusdMock.sol\":17048:17193  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"mocks/BusdMock.sol\":17048:17059  _allowances */\n      0x02\n        /* \"mocks/BusdMock.sol\":17048:17073  _allowances[_msgSender()] */\n      0x00\n        /* \"mocks/BusdMock.sol\":17060:17072  _msgSender() */\n      tag_164\n        /* \"mocks/BusdMock.sol\":17060:17070  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":17060:17072  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"mocks/BusdMock.sol\":17048:17073  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":17048:17082  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"mocks/BusdMock.sol\":17074:17081  spender */\n      dup11\n        /* \"mocks/BusdMock.sol\":17048:17082  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mocks/BusdMock.sol\":17048:17086  _allowances[_msgSender()][spender].sub */\n      tag_124\n      swap1\n        /* \"mocks/BusdMock.sol\":17048:17193  _allowances[_msgSender()][spender].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"mocks/BusdMock.sol\":16976:16984  _approve */\n      tag_115\n        /* \"mocks/BusdMock.sol\":16976:17204  _approve(... */\n      jump\t// in\n    tag_161:\n        /* \"mocks/BusdMock.sol\":17222:17226  true */\n      0x01\n        /* \"mocks/BusdMock.sol\":17215:17226  return true */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":16851:17234  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":14035:14218  function transfer(address recipient, uint256 amount)... */\n    tag_88:\n        /* \"mocks/BusdMock.sol\":14124:14128  bool */\n      0x00\n        /* \"mocks/BusdMock.sol\":14146:14188  _transfer(_msgSender(), recipient, amount) */\n      tag_166\n        /* \"mocks/BusdMock.sol\":14156:14168  _msgSender() */\n      tag_167\n        /* \"mocks/BusdMock.sol\":14156:14166  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":14156:14168  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"mocks/BusdMock.sol\":14170:14179  recipient */\n      dup5\n        /* \"mocks/BusdMock.sol\":14181:14187  amount */\n      dup5\n        /* \"mocks/BusdMock.sol\":14146:14155  _transfer */\n      tag_119\n        /* \"mocks/BusdMock.sol\":14146:14188  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_166:\n        /* \"mocks/BusdMock.sol\":14206:14210  true */\n      0x01\n        /* \"mocks/BusdMock.sol\":14199:14210  return true */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":14035:14218  function transfer(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":12561:12582  string public _symbol */\n    tag_91:\n      0x05\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_106\n      jump\t// in\n    tag_168:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_106\n      jump\t// in\n    tag_169:\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_171\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_170)\n    tag_171:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_172:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_172\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":12589:12608  string public _name */\n    tag_94:\n      0x06\n      dup1\n      sload\n      tag_173\n      swap1\n      tag_106\n      jump\t// in\n    tag_173:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_106\n      jump\t// in\n    tag_174:\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_176\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_175)\n    tag_176:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_177:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_177\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":14280:14448  function allowance(address owner, address spender)... */\n    tag_99:\n        /* \"mocks/BusdMock.sol\":14381:14388  uint256 */\n      0x00\n        /* \"mocks/BusdMock.sol\":14413:14424  _allowances */\n      0x02\n        /* \"mocks/BusdMock.sol\":14413:14431  _allowances[owner] */\n      0x00\n        /* \"mocks/BusdMock.sol\":14425:14430  owner */\n      dup5\n        /* \"mocks/BusdMock.sol\":14413:14431  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":14413:14440  _allowances[owner][spender] */\n      0x00\n        /* \"mocks/BusdMock.sol\":14432:14439  spender */\n      dup4\n        /* \"mocks/BusdMock.sol\":14413:14440  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mocks/BusdMock.sol\":14406:14440  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":14280:14448  function allowance(address owner, address spender)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":11791:11900  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_103:\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      tag_180\n        /* \"mocks/BusdMock.sol\":11076:11086  _msgSender */\n      tag_114\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11072  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mocks/BusdMock.sol\":11058:11125  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_141\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"mocks/BusdMock.sol\":11864:11892  _transferOwnership(newOwner) */\n      tag_184\n        /* \"mocks/BusdMock.sol\":11883:11891  newOwner */\n      dup2\n        /* \"mocks/BusdMock.sol\":11864:11882  _transferOwnership */\n      tag_185\n        /* \"mocks/BusdMock.sol\":11864:11892  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_184:\n        /* \"mocks/BusdMock.sol\":11791:11900  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":4079:4186  function _msgSender() internal view returns (address payable) {... */\n    tag_114:\n        /* \"mocks/BusdMock.sol\":4124:4139  address payable */\n      0x00\n        /* \"mocks/BusdMock.sol\":4167:4177  msg.sender */\n      caller\n        /* \"mocks/BusdMock.sol\":4152:4178  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":4079:4186  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":20573:20945  function _approve(... */\n    tag_115:\n        /* \"mocks/BusdMock.sol\":20718:20719  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":20701:20720  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":20701:20706  owner */\n      dup4\n        /* \"mocks/BusdMock.sol\":20701:20720  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mocks/BusdMock.sol\":20693:20761  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"mocks/BusdMock.sol\":20799:20800  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":20780:20801  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":20780:20787  spender */\n      dup3\n        /* \"mocks/BusdMock.sol\":20780:20801  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mocks/BusdMock.sol\":20772:20840  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"mocks/BusdMock.sol\":20883:20889  amount */\n      dup1\n        /* \"mocks/BusdMock.sol\":20853:20864  _allowances */\n      0x02\n        /* \"mocks/BusdMock.sol\":20853:20871  _allowances[owner] */\n      0x00\n        /* \"mocks/BusdMock.sol\":20865:20870  owner */\n      dup6\n        /* \"mocks/BusdMock.sol\":20853:20871  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":20853:20880  _allowances[owner][spender] */\n      0x00\n        /* \"mocks/BusdMock.sol\":20872:20879  spender */\n      dup5\n        /* \"mocks/BusdMock.sol\":20853:20880  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":20853:20889  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":20921:20928  spender */\n      dup2\n        /* \"mocks/BusdMock.sol\":20905:20937  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":20914:20919  owner */\n      dup4\n        /* \"mocks/BusdMock.sol\":20905:20937  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"mocks/BusdMock.sol\":20930:20936  amount */\n      dup4\n        /* \"mocks/BusdMock.sol\":20905:20937  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_194\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mocks/BusdMock.sol\":20573:20945  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":18285:18827  function _transfer(... */\n    tag_119:\n        /* \"mocks/BusdMock.sol\":18435:18436  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":18417:18437  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":18417:18423  sender */\n      dup4\n        /* \"mocks/BusdMock.sol\":18417:18437  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mocks/BusdMock.sol\":18409:18479  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"mocks/BusdMock.sol\":18519:18520  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":18498:18521  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":18498:18507  recipient */\n      dup3\n        /* \"mocks/BusdMock.sol\":18498:18521  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mocks/BusdMock.sol\":18490:18561  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"mocks/BusdMock.sol\":18594:18702  _balances[sender].sub(... */\n      tag_202\n        /* \"mocks/BusdMock.sol\":18630:18636  amount */\n      dup2\n        /* \"mocks/BusdMock.sol\":18594:18702  _balances[sender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"mocks/BusdMock.sol\":18594:18603  _balances */\n      0x01\n        /* \"mocks/BusdMock.sol\":18594:18611  _balances[sender] */\n      0x00\n        /* \"mocks/BusdMock.sol\":18604:18610  sender */\n      dup8\n        /* \"mocks/BusdMock.sol\":18594:18611  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mocks/BusdMock.sol\":18594:18615  _balances[sender].sub */\n      tag_124\n      swap1\n        /* \"mocks/BusdMock.sol\":18594:18702  _balances[sender].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"mocks/BusdMock.sol\":18574:18583  _balances */\n      0x01\n        /* \"mocks/BusdMock.sol\":18574:18591  _balances[sender] */\n      0x00\n        /* \"mocks/BusdMock.sol\":18584:18590  sender */\n      dup6\n        /* \"mocks/BusdMock.sol\":18574:18591  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":18574:18702  _balances[sender] = _balances[sender].sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":18736:18768  _balances[recipient].add(amount) */\n      tag_203\n        /* \"mocks/BusdMock.sol\":18761:18767  amount */\n      dup2\n        /* \"mocks/BusdMock.sol\":18736:18745  _balances */\n      0x01\n        /* \"mocks/BusdMock.sol\":18736:18756  _balances[recipient] */\n      0x00\n        /* \"mocks/BusdMock.sol\":18746:18755  recipient */\n      dup6\n        /* \"mocks/BusdMock.sol\":18736:18756  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mocks/BusdMock.sol\":18736:18760  _balances[recipient].add */\n      tag_131\n      swap1\n        /* \"mocks/BusdMock.sol\":18736:18768  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"mocks/BusdMock.sol\":18713:18722  _balances */\n      0x01\n        /* \"mocks/BusdMock.sol\":18713:18733  _balances[recipient] */\n      0x00\n        /* \"mocks/BusdMock.sol\":18723:18732  recipient */\n      dup5\n        /* \"mocks/BusdMock.sol\":18713:18733  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":18713:18768  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":18801:18810  recipient */\n      dup2\n        /* \"mocks/BusdMock.sol\":18784:18819  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":18793:18799  sender */\n      dup4\n        /* \"mocks/BusdMock.sol\":18784:18819  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"mocks/BusdMock.sol\":18812:18818  amount */\n      dup4\n        /* \"mocks/BusdMock.sol\":18784:18819  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mocks/BusdMock.sol\":18285:18827  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":6145:6371  function sub(... */\n    tag_124:\n        /* \"mocks/BusdMock.sol\":6265:6272  uint256 */\n      0x00\n        /* \"mocks/BusdMock.sol\":6298:6299  a */\n      dup4\n        /* \"mocks/BusdMock.sol\":6293:6294  b */\n      dup4\n        /* \"mocks/BusdMock.sol\":6293:6299  b <= a */\n      gt\n      iszero\n        /* \"mocks/BusdMock.sol\":6301:6313  errorMessage */\n      dup3\n        /* \"mocks/BusdMock.sol\":6285:6314  require(b <= a, errorMessage) */\n      swap1\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n      pop\n        /* \"mocks/BusdMock.sol\":6325:6334  uint256 c */\n      0x00\n        /* \"mocks/BusdMock.sol\":6341:6342  b */\n      dup4\n        /* \"mocks/BusdMock.sol\":6337:6338  a */\n      dup6\n        /* \"mocks/BusdMock.sol\":6337:6342  a - b */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"mocks/BusdMock.sol\":6325:6342  uint256 c = a - b */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":6362:6363  c */\n      dup1\n        /* \"mocks/BusdMock.sol\":6355:6363  return c */\n      swap2\n      pop\n      pop\n        /* \"mocks/BusdMock.sol\":6145:6371  function sub(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":5258:5439  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_131:\n        /* \"mocks/BusdMock.sol\":5316:5323  uint256 */\n      0x00\n        /* \"mocks/BusdMock.sol\":5336:5345  uint256 c */\n      dup1\n        /* \"mocks/BusdMock.sol\":5352:5353  b */\n      dup3\n        /* \"mocks/BusdMock.sol\":5348:5349  a */\n      dup5\n        /* \"mocks/BusdMock.sol\":5348:5353  a + b */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"mocks/BusdMock.sol\":5336:5353  uint256 c = a + b */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":5377:5378  a */\n      dup4\n        /* \"mocks/BusdMock.sol\":5372:5373  c */\n      dup2\n        /* \"mocks/BusdMock.sol\":5372:5378  c >= a */\n      lt\n      iszero\n        /* \"mocks/BusdMock.sol\":5364:5410  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"mocks/BusdMock.sol\":5430:5431  c */\n      dup1\n        /* \"mocks/BusdMock.sol\":5423:5431  return c */\n      swap2\n      pop\n      pop\n        /* \"mocks/BusdMock.sol\":5258:5439  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":19748:20133  function _burn(address account, uint256 amount) internal {... */\n    tag_135:\n        /* \"mocks/BusdMock.sol\":19843:19844  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":19824:19845  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":19824:19831  account */\n      dup3\n        /* \"mocks/BusdMock.sol\":19824:19845  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mocks/BusdMock.sol\":19816:19883  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"mocks/BusdMock.sol\":19917:20022  _balances[account].sub(... */\n      tag_220\n        /* \"mocks/BusdMock.sol\":19954:19960  amount */\n      dup2\n        /* \"mocks/BusdMock.sol\":19917:20022  _balances[account].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"mocks/BusdMock.sol\":19917:19926  _balances */\n      0x01\n        /* \"mocks/BusdMock.sol\":19917:19935  _balances[account] */\n      0x00\n        /* \"mocks/BusdMock.sol\":19927:19934  account */\n      dup7\n        /* \"mocks/BusdMock.sol\":19917:19935  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mocks/BusdMock.sol\":19917:19939  _balances[account].sub */\n      tag_124\n      swap1\n        /* \"mocks/BusdMock.sol\":19917:20022  _balances[account].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"mocks/BusdMock.sol\":19896:19905  _balances */\n      0x01\n        /* \"mocks/BusdMock.sol\":19896:19914  _balances[account] */\n      0x00\n        /* \"mocks/BusdMock.sol\":19906:19913  account */\n      dup5\n        /* \"mocks/BusdMock.sol\":19896:19914  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":19896:20022  _balances[account] = _balances[account].sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":20048:20072  _totalSupply.sub(amount) */\n      tag_221\n        /* \"mocks/BusdMock.sol\":20065:20071  amount */\n      dup2\n        /* \"mocks/BusdMock.sol\":20048:20060  _totalSupply */\n      sload(0x03)\n        /* \"mocks/BusdMock.sol\":20048:20064  _totalSupply.sub */\n      tag_222\n      swap1\n        /* \"mocks/BusdMock.sol\":20048:20072  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"mocks/BusdMock.sol\":20033:20045  _totalSupply */\n      0x03\n        /* \"mocks/BusdMock.sol\":20033:20072  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":20114:20115  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":20088:20125  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":20097:20104  account */\n      dup3\n        /* \"mocks/BusdMock.sol\":20088:20125  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"mocks/BusdMock.sol\":20118:20124  amount */\n      dup4\n        /* \"mocks/BusdMock.sol\":20088:20125  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_223\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mocks/BusdMock.sol\":19748:20133  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":19108:19416  function _mint(address account, uint256 amount) internal {... */\n    tag_159:\n        /* \"mocks/BusdMock.sol\":19203:19204  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":19184:19205  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":19184:19191  account */\n      dup3\n        /* \"mocks/BusdMock.sol\":19184:19205  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mocks/BusdMock.sol\":19176:19241  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"mocks/BusdMock.sol\":19269:19293  _totalSupply.add(amount) */\n      tag_228\n        /* \"mocks/BusdMock.sol\":19286:19292  amount */\n      dup2\n        /* \"mocks/BusdMock.sol\":19269:19281  _totalSupply */\n      sload(0x03)\n        /* \"mocks/BusdMock.sol\":19269:19285  _totalSupply.add */\n      tag_131\n      swap1\n        /* \"mocks/BusdMock.sol\":19269:19293  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"mocks/BusdMock.sol\":19254:19266  _totalSupply */\n      0x03\n        /* \"mocks/BusdMock.sol\":19254:19293  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":19325:19355  _balances[account].add(amount) */\n      tag_229\n        /* \"mocks/BusdMock.sol\":19348:19354  amount */\n      dup2\n        /* \"mocks/BusdMock.sol\":19325:19334  _balances */\n      0x01\n        /* \"mocks/BusdMock.sol\":19325:19343  _balances[account] */\n      0x00\n        /* \"mocks/BusdMock.sol\":19335:19342  account */\n      dup6\n        /* \"mocks/BusdMock.sol\":19325:19343  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mocks/BusdMock.sol\":19325:19347  _balances[account].add */\n      tag_131\n      swap1\n        /* \"mocks/BusdMock.sol\":19325:19355  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"mocks/BusdMock.sol\":19304:19313  _balances */\n      0x01\n        /* \"mocks/BusdMock.sol\":19304:19322  _balances[account] */\n      0x00\n        /* \"mocks/BusdMock.sol\":19314:19321  account */\n      dup5\n        /* \"mocks/BusdMock.sol\":19304:19322  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mocks/BusdMock.sol\":19304:19355  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":19392:19399  account */\n      dup2\n        /* \"mocks/BusdMock.sol\":19371:19408  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":19388:19389  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":19371:19408  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"mocks/BusdMock.sol\":19401:19407  amount */\n      dup4\n        /* \"mocks/BusdMock.sol\":19371:19408  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_230\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mocks/BusdMock.sol\":19108:19416  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":12006:12272  function _transferOwnership(address newOwner) internal {... */\n    tag_185:\n        /* \"mocks/BusdMock.sol\":12114:12115  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":12094:12116  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":12094:12102  newOwner */\n      dup2\n        /* \"mocks/BusdMock.sol\":12094:12116  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mocks/BusdMock.sol\":12072:12182  require(... */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"mocks/BusdMock.sol\":12227:12235  newOwner */\n      dup1\n        /* \"mocks/BusdMock.sol\":12198:12236  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":12219:12225  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":12198:12236  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mocks/BusdMock.sol\":12256:12264  newOwner */\n      dup1\n        /* \"mocks/BusdMock.sol\":12247:12253  _owner */\n      0x00\n      dup1\n        /* \"mocks/BusdMock.sol\":12247:12264  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":12006:12272  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":5714:5850  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_222:\n        /* \"mocks/BusdMock.sol\":5772:5779  uint256 */\n      0x00\n        /* \"mocks/BusdMock.sol\":5799:5842  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_236\n        /* \"mocks/BusdMock.sol\":5803:5804  a */\n      dup4\n        /* \"mocks/BusdMock.sol\":5806:5807  b */\n      dup4\n        /* \"mocks/BusdMock.sol\":5799:5842  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"mocks/BusdMock.sol\":5799:5802  sub */\n      tag_124\n        /* \"mocks/BusdMock.sol\":5799:5842  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_236:\n        /* \"mocks/BusdMock.sol\":5792:5842  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":5714:5850  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_237:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_238:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:594   */\n    tag_239:\n        /* \"#utility.yul\":355:356   */\n      0x00\n        /* \"#utility.yul\":365:478   */\n    tag_282:\n        /* \"#utility.yul\":379:385   */\n      dup4\n        /* \"#utility.yul\":376:377   */\n      dup2\n        /* \"#utility.yul\":373:386   */\n      lt\n        /* \"#utility.yul\":365:478   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      dup1\n        /* \"#utility.yul\":459:462   */\n      dup3\n        /* \"#utility.yul\":455:466   */\n      add\n        /* \"#utility.yul\":449:467   */\n      mload\n        /* \"#utility.yul\":445:446   */\n      dup2\n        /* \"#utility.yul\":440:443   */\n      dup5\n        /* \"#utility.yul\":436:447   */\n      add\n        /* \"#utility.yul\":429:468   */\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":398:399   */\n      dup2\n        /* \"#utility.yul\":394:404   */\n      add\n        /* \"#utility.yul\":389:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:478   */\n      jump(tag_282)\n    tag_284:\n        /* \"#utility.yul\":496:502   */\n      dup4\n        /* \"#utility.yul\":493:494   */\n      dup2\n        /* \"#utility.yul\":490:503   */\n      gt\n        /* \"#utility.yul\":487:588   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":567:573   */\n      dup5\n        /* \"#utility.yul\":562:565   */\n      dup5\n        /* \"#utility.yul\":558:574   */\n      add\n        /* \"#utility.yul\":551:578   */\n      mstore\n        /* \"#utility.yul\":487:588   */\n    tag_285:\n        /* \"#utility.yul\":336:594   */\n      pop\n        /* \"#utility.yul\":287:594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":600:702   */\n    tag_240:\n        /* \"#utility.yul\":641:647   */\n      0x00\n        /* \"#utility.yul\":692:694   */\n      0x1f\n        /* \"#utility.yul\":688:695   */\n      not\n        /* \"#utility.yul\":683:685   */\n      0x1f\n        /* \"#utility.yul\":676:681   */\n      dup4\n        /* \"#utility.yul\":672:686   */\n      add\n        /* \"#utility.yul\":668:696   */\n      and\n        /* \"#utility.yul\":658:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":600:702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:1072   */\n    tag_241:\n        /* \"#utility.yul\":796:799   */\n      0x00\n        /* \"#utility.yul\":824:863   */\n      tag_288\n        /* \"#utility.yul\":857:862   */\n      dup3\n        /* \"#utility.yul\":824:863   */\n      tag_237\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":879:950   */\n      tag_289\n        /* \"#utility.yul\":943:949   */\n      dup2\n        /* \"#utility.yul\":938:941   */\n      dup6\n        /* \"#utility.yul\":879:950   */\n      tag_238\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":872:950   */\n      swap4\n      pop\n        /* \"#utility.yul\":959:1011   */\n      tag_290\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":999:1002   */\n      dup6\n        /* \"#utility.yul\":992:996   */\n      0x20\n        /* \"#utility.yul\":985:990   */\n      dup7\n        /* \"#utility.yul\":981:997   */\n      add\n        /* \"#utility.yul\":959:1011   */\n      tag_239\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1036:1065   */\n      tag_291\n        /* \"#utility.yul\":1058:1064   */\n      dup2\n        /* \"#utility.yul\":1036:1065   */\n      tag_240\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1031:1034   */\n      dup5\n        /* \"#utility.yul\":1027:1066   */\n      add\n        /* \"#utility.yul\":1020:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":800:1072   */\n      pop\n        /* \"#utility.yul\":708:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1391   */\n    tag_29:\n        /* \"#utility.yul\":1191:1195   */\n      0x00\n        /* \"#utility.yul\":1229:1231   */\n      0x20\n        /* \"#utility.yul\":1218:1227   */\n      dup3\n        /* \"#utility.yul\":1214:1232   */\n      add\n        /* \"#utility.yul\":1206:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1287   */\n      dup2\n        /* \"#utility.yul\":1272:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1288   */\n      sub\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1242:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1384   */\n      tag_293\n        /* \"#utility.yul\":1379:1383   */\n      dup2\n        /* \"#utility.yul\":1370:1376   */\n      dup5\n        /* \"#utility.yul\":1306:1384   */\n      tag_241\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1298:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1595   */\n    tag_243:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1724:1850   */\n    tag_245:\n        /* \"#utility.yul\":1761:1768   */\n      0x00\n        /* \"#utility.yul\":1801:1843   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1794:1799   */\n      dup3\n        /* \"#utility.yul\":1790:1844   */\n      and\n        /* \"#utility.yul\":1779:1844   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:1850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:1952   */\n    tag_246:\n        /* \"#utility.yul\":1893:1900   */\n      0x00\n        /* \"#utility.yul\":1922:1946   */\n      tag_299\n        /* \"#utility.yul\":1940:1945   */\n      dup3\n        /* \"#utility.yul\":1922:1946   */\n      tag_245\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1911:1946   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2080   */\n    tag_247:\n        /* \"#utility.yul\":2031:2055   */\n      tag_301\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_246\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2024:2029   */\n      dup2\n        /* \"#utility.yul\":2021:2056   */\n      eq\n        /* \"#utility.yul\":2011:2074   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2067:2068   */\n      dup1\n        /* \"#utility.yul\":2060:2072   */\n      revert\n        /* \"#utility.yul\":2011:2074   */\n    tag_302:\n        /* \"#utility.yul\":1958:2080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2225   */\n    tag_248:\n        /* \"#utility.yul\":2132:2137   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup2\n        /* \"#utility.yul\":2157:2177   */\n      calldataload\n        /* \"#utility.yul\":2148:2177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2186:2219   */\n      tag_304\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2186:2219   */\n      tag_247\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2086:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2308   */\n    tag_249:\n        /* \"#utility.yul\":2268:2275   */\n      0x00\n        /* \"#utility.yul\":2297:2302   */\n      dup2\n        /* \"#utility.yul\":2286:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2436   */\n    tag_250:\n        /* \"#utility.yul\":2387:2411   */\n      tag_307\n        /* \"#utility.yul\":2405:2410   */\n      dup2\n        /* \"#utility.yul\":2387:2411   */\n      tag_249\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2380:2385   */\n      dup2\n        /* \"#utility.yul\":2377:2412   */\n      eq\n        /* \"#utility.yul\":2367:2430   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2423:2424   */\n      dup1\n        /* \"#utility.yul\":2416:2428   */\n      revert\n        /* \"#utility.yul\":2367:2430   */\n    tag_308:\n        /* \"#utility.yul\":2314:2436   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2581   */\n    tag_251:\n        /* \"#utility.yul\":2488:2493   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2575   */\n      tag_310\n        /* \"#utility.yul\":2569:2574   */\n      dup2\n        /* \"#utility.yul\":2542:2575   */\n      tag_250\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2442:2581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:3061   */\n    tag_32:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2712:2714   */\n      0x40\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2691:2698   */\n      dup6\n        /* \"#utility.yul\":2687:2710   */\n      sub\n        /* \"#utility.yul\":2683:2715   */\n      slt\n        /* \"#utility.yul\":2680:2799   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":2718:2797   */\n      tag_313\n      tag_243\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2680:2799   */\n    tag_312:\n        /* \"#utility.yul\":2838:2839   */\n      0x00\n        /* \"#utility.yul\":2863:2916   */\n      tag_314\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup7\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_248\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2853:2916   */\n      swap3\n      pop\n        /* \"#utility.yul\":2809:2926   */\n      pop\n        /* \"#utility.yul\":2965:2967   */\n      0x20\n        /* \"#utility.yul\":2991:3044   */\n      tag_315\n        /* \"#utility.yul\":3036:3043   */\n      dup6\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3016:3025   */\n      dup7\n        /* \"#utility.yul\":3012:3034   */\n      add\n        /* \"#utility.yul\":2991:3044   */\n      tag_251\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2981:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:3054   */\n      pop\n        /* \"#utility.yul\":2587:3061   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3157   */\n    tag_252:\n        /* \"#utility.yul\":3101:3108   */\n      0x00\n        /* \"#utility.yul\":3144:3149   */\n      dup2\n        /* \"#utility.yul\":3137:3150   */\n      iszero\n        /* \"#utility.yul\":3130:3151   */\n      iszero\n        /* \"#utility.yul\":3119:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3067:3157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3163:3272   */\n    tag_253:\n        /* \"#utility.yul\":3244:3265   */\n      tag_318\n        /* \"#utility.yul\":3259:3264   */\n      dup2\n        /* \"#utility.yul\":3244:3265   */\n      tag_252\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3232:3266   */\n      mstore\n        /* \"#utility.yul\":3163:3272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3488   */\n    tag_35:\n        /* \"#utility.yul\":3365:3369   */\n      0x00\n        /* \"#utility.yul\":3403:3405   */\n      0x20\n        /* \"#utility.yul\":3392:3401   */\n      dup3\n        /* \"#utility.yul\":3388:3406   */\n      add\n        /* \"#utility.yul\":3380:3406   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3481   */\n      tag_320\n        /* \"#utility.yul\":3478:3479   */\n      0x00\n        /* \"#utility.yul\":3467:3476   */\n      dup4\n        /* \"#utility.yul\":3463:3480   */\n      add\n        /* \"#utility.yul\":3454:3460   */\n      dup5\n        /* \"#utility.yul\":3416:3481   */\n      tag_253\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3278:3488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3612   */\n    tag_254:\n        /* \"#utility.yul\":3581:3605   */\n      tag_322\n        /* \"#utility.yul\":3599:3604   */\n      dup2\n        /* \"#utility.yul\":3581:3605   */\n      tag_249\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3576:3579   */\n      dup3\n        /* \"#utility.yul\":3569:3606   */\n      mstore\n        /* \"#utility.yul\":3494:3612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3840   */\n    tag_39:\n        /* \"#utility.yul\":3711:3715   */\n      0x00\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup3\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3726:3752   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:3833   */\n      tag_324\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3815:3832   */\n      add\n        /* \"#utility.yul\":3806:3812   */\n      dup5\n        /* \"#utility.yul\":3762:3833   */\n      tag_254\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3618:3840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4465   */\n    tag_42:\n        /* \"#utility.yul\":3923:3929   */\n      0x00\n        /* \"#utility.yul\":3931:3937   */\n      dup1\n        /* \"#utility.yul\":3939:3945   */\n      0x00\n        /* \"#utility.yul\":3988:3990   */\n      0x60\n        /* \"#utility.yul\":3976:3985   */\n      dup5\n        /* \"#utility.yul\":3967:3974   */\n      dup7\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4075   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":3994:4073   */\n      tag_327\n      tag_243\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3956:4075   */\n    tag_326:\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4139:4192   */\n      tag_328\n        /* \"#utility.yul\":4184:4191   */\n      dup7\n        /* \"#utility.yul\":4175:4181   */\n      dup3\n        /* \"#utility.yul\":4164:4173   */\n      dup8\n        /* \"#utility.yul\":4160:4182   */\n      add\n        /* \"#utility.yul\":4139:4192   */\n      tag_248\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4129:4192   */\n      swap4\n      pop\n        /* \"#utility.yul\":4085:4202   */\n      pop\n        /* \"#utility.yul\":4241:4243   */\n      0x20\n        /* \"#utility.yul\":4267:4320   */\n      tag_329\n        /* \"#utility.yul\":4312:4319   */\n      dup7\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4292:4301   */\n      dup8\n        /* \"#utility.yul\":4288:4310   */\n      add\n        /* \"#utility.yul\":4267:4320   */\n      tag_248\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4257:4320   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4330   */\n      pop\n        /* \"#utility.yul\":4369:4371   */\n      0x40\n        /* \"#utility.yul\":4395:4448   */\n      tag_330\n        /* \"#utility.yul\":4440:4447   */\n      dup7\n        /* \"#utility.yul\":4431:4437   */\n      dup3\n        /* \"#utility.yul\":4420:4429   */\n      dup8\n        /* \"#utility.yul\":4416:4438   */\n      add\n        /* \"#utility.yul\":4395:4448   */\n      tag_251\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4385:4448   */\n      swap2\n      pop\n        /* \"#utility.yul\":4340:4458   */\n      pop\n        /* \"#utility.yul\":3846:4465   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4471:4557   */\n    tag_255:\n        /* \"#utility.yul\":4506:4513   */\n      0x00\n        /* \"#utility.yul\":4546:4550   */\n      0xff\n        /* \"#utility.yul\":4539:4544   */\n      dup3\n        /* \"#utility.yul\":4535:4551   */\n      and\n        /* \"#utility.yul\":4524:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:4675   */\n    tag_256:\n        /* \"#utility.yul\":4646:4668   */\n      tag_333\n        /* \"#utility.yul\":4662:4667   */\n      dup2\n        /* \"#utility.yul\":4646:4668   */\n      tag_255\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4641:4644   */\n      dup3\n        /* \"#utility.yul\":4634:4669   */\n      mstore\n        /* \"#utility.yul\":4563:4675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4681:4895   */\n    tag_48:\n        /* \"#utility.yul\":4770:4774   */\n      0x00\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4797:4806   */\n      dup3\n        /* \"#utility.yul\":4793:4811   */\n      add\n        /* \"#utility.yul\":4785:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4888   */\n      tag_335\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4874:4883   */\n      dup4\n        /* \"#utility.yul\":4870:4887   */\n      add\n        /* \"#utility.yul\":4861:4867   */\n      dup5\n        /* \"#utility.yul\":4821:4888   */\n      tag_256\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4681:4895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4901:5230   */\n    tag_58:\n        /* \"#utility.yul\":4960:4966   */\n      0x00\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"#utility.yul\":4997:5006   */\n      dup3\n        /* \"#utility.yul\":4988:4995   */\n      dup5\n        /* \"#utility.yul\":4984:5007   */\n      sub\n        /* \"#utility.yul\":4980:5012   */\n      slt\n        /* \"#utility.yul\":4977:5096   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":5015:5094   */\n      tag_338\n      tag_243\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4977:5096   */\n    tag_337:\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5160:5213   */\n      tag_339\n        /* \"#utility.yul\":5205:5212   */\n      dup5\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5185:5194   */\n      dup6\n        /* \"#utility.yul\":5181:5203   */\n      add\n        /* \"#utility.yul\":5160:5213   */\n      tag_251\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":5150:5213   */\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5223   */\n      pop\n        /* \"#utility.yul\":4901:5230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5236:5565   */\n    tag_63:\n        /* \"#utility.yul\":5295:5301   */\n      0x00\n        /* \"#utility.yul\":5344:5346   */\n      0x20\n        /* \"#utility.yul\":5332:5341   */\n      dup3\n        /* \"#utility.yul\":5323:5330   */\n      dup5\n        /* \"#utility.yul\":5319:5342   */\n      sub\n        /* \"#utility.yul\":5315:5347   */\n      slt\n        /* \"#utility.yul\":5312:5431   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":5350:5429   */\n      tag_342\n      tag_243\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5312:5431   */\n    tag_341:\n        /* \"#utility.yul\":5470:5471   */\n      0x00\n        /* \"#utility.yul\":5495:5548   */\n      tag_343\n        /* \"#utility.yul\":5540:5547   */\n      dup5\n        /* \"#utility.yul\":5531:5537   */\n      dup3\n        /* \"#utility.yul\":5520:5529   */\n      dup6\n        /* \"#utility.yul\":5516:5538   */\n      add\n        /* \"#utility.yul\":5495:5548   */\n      tag_248\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5485:5548   */\n      swap2\n      pop\n        /* \"#utility.yul\":5441:5558   */\n      pop\n        /* \"#utility.yul\":5236:5565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5571:5689   */\n    tag_257:\n        /* \"#utility.yul\":5658:5682   */\n      tag_345\n        /* \"#utility.yul\":5676:5681   */\n      dup2\n        /* \"#utility.yul\":5658:5682   */\n      tag_246\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":5653:5656   */\n      dup3\n        /* \"#utility.yul\":5646:5683   */\n      mstore\n        /* \"#utility.yul\":5571:5689   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5695:5917   */\n    tag_71:\n        /* \"#utility.yul\":5788:5792   */\n      0x00\n        /* \"#utility.yul\":5826:5828   */\n      0x20\n        /* \"#utility.yul\":5815:5824   */\n      dup3\n        /* \"#utility.yul\":5811:5829   */\n      add\n        /* \"#utility.yul\":5803:5829   */\n      swap1\n      pop\n        /* \"#utility.yul\":5839:5910   */\n      tag_347\n        /* \"#utility.yul\":5907:5908   */\n      0x00\n        /* \"#utility.yul\":5896:5905   */\n      dup4\n        /* \"#utility.yul\":5892:5909   */\n      add\n        /* \"#utility.yul\":5883:5889   */\n      dup5\n        /* \"#utility.yul\":5839:5910   */\n      tag_257\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5695:5917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5923:6397   */\n    tag_98:\n        /* \"#utility.yul\":5991:5997   */\n      0x00\n        /* \"#utility.yul\":5999:6005   */\n      dup1\n        /* \"#utility.yul\":6048:6050   */\n      0x40\n        /* \"#utility.yul\":6036:6045   */\n      dup4\n        /* \"#utility.yul\":6027:6034   */\n      dup6\n        /* \"#utility.yul\":6023:6046   */\n      sub\n        /* \"#utility.yul\":6019:6051   */\n      slt\n        /* \"#utility.yul\":6016:6135   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":6054:6133   */\n      tag_350\n      tag_243\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6016:6135   */\n    tag_349:\n        /* \"#utility.yul\":6174:6175   */\n      0x00\n        /* \"#utility.yul\":6199:6252   */\n      tag_351\n        /* \"#utility.yul\":6244:6251   */\n      dup6\n        /* \"#utility.yul\":6235:6241   */\n      dup3\n        /* \"#utility.yul\":6224:6233   */\n      dup7\n        /* \"#utility.yul\":6220:6242   */\n      add\n        /* \"#utility.yul\":6199:6252   */\n      tag_248\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":6189:6252   */\n      swap3\n      pop\n        /* \"#utility.yul\":6145:6262   */\n      pop\n        /* \"#utility.yul\":6301:6303   */\n      0x20\n        /* \"#utility.yul\":6327:6380   */\n      tag_352\n        /* \"#utility.yul\":6372:6379   */\n      dup6\n        /* \"#utility.yul\":6363:6369   */\n      dup3\n        /* \"#utility.yul\":6352:6361   */\n      dup7\n        /* \"#utility.yul\":6348:6370   */\n      add\n        /* \"#utility.yul\":6327:6380   */\n      tag_248\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6317:6380   */\n      swap2\n      pop\n        /* \"#utility.yul\":6272:6390   */\n      pop\n        /* \"#utility.yul\":5923:6397   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6403:6583   */\n    tag_258:\n        /* \"#utility.yul\":6451:6528   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6448:6449   */\n      0x00\n        /* \"#utility.yul\":6441:6529   */\n      mstore\n        /* \"#utility.yul\":6548:6552   */\n      0x22\n        /* \"#utility.yul\":6545:6546   */\n      0x04\n        /* \"#utility.yul\":6538:6553   */\n      mstore\n        /* \"#utility.yul\":6572:6576   */\n      0x24\n        /* \"#utility.yul\":6569:6570   */\n      0x00\n        /* \"#utility.yul\":6562:6577   */\n      revert\n        /* \"#utility.yul\":6589:6909   */\n    tag_106:\n        /* \"#utility.yul\":6633:6639   */\n      0x00\n        /* \"#utility.yul\":6670:6671   */\n      0x02\n        /* \"#utility.yul\":6664:6668   */\n      dup3\n        /* \"#utility.yul\":6660:6672   */\n      div\n        /* \"#utility.yul\":6650:6672   */\n      swap1\n      pop\n        /* \"#utility.yul\":6717:6718   */\n      0x01\n        /* \"#utility.yul\":6711:6715   */\n      dup3\n        /* \"#utility.yul\":6707:6719   */\n      and\n        /* \"#utility.yul\":6738:6756   */\n      dup1\n        /* \"#utility.yul\":6728:6809   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":6794:6798   */\n      0x7f\n        /* \"#utility.yul\":6786:6792   */\n      dup3\n        /* \"#utility.yul\":6782:6799   */\n      and\n        /* \"#utility.yul\":6772:6799   */\n      swap2\n      pop\n        /* \"#utility.yul\":6728:6809   */\n    tag_355:\n        /* \"#utility.yul\":6856:6858   */\n      0x20\n        /* \"#utility.yul\":6848:6854   */\n      dup3\n        /* \"#utility.yul\":6845:6859   */\n      lt\n        /* \"#utility.yul\":6825:6843   */\n      dup2\n        /* \"#utility.yul\":6822:6860   */\n      eq\n        /* \"#utility.yul\":6819:6903   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":6875:6893   */\n      tag_357\n      tag_258\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6819:6903   */\n    tag_356:\n        /* \"#utility.yul\":6640:6909   */\n      pop\n        /* \"#utility.yul\":6589:6909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6915:7097   */\n    tag_259:\n        /* \"#utility.yul\":7055:7089   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7051:7052   */\n      0x00\n        /* \"#utility.yul\":7043:7049   */\n      dup3\n        /* \"#utility.yul\":7039:7053   */\n      add\n        /* \"#utility.yul\":7032:7090   */\n      mstore\n        /* \"#utility.yul\":6915:7097   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7103:7469   */\n    tag_260:\n        /* \"#utility.yul\":7245:7248   */\n      0x00\n        /* \"#utility.yul\":7266:7333   */\n      tag_360\n        /* \"#utility.yul\":7330:7332   */\n      0x20\n        /* \"#utility.yul\":7325:7328   */\n      dup4\n        /* \"#utility.yul\":7266:7333   */\n      tag_238\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":7259:7333   */\n      swap2\n      pop\n        /* \"#utility.yul\":7342:7435   */\n      tag_361\n        /* \"#utility.yul\":7431:7434   */\n      dup3\n        /* \"#utility.yul\":7342:7435   */\n      tag_259\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7460:7462   */\n      0x20\n        /* \"#utility.yul\":7455:7458   */\n      dup3\n        /* \"#utility.yul\":7451:7463   */\n      add\n        /* \"#utility.yul\":7444:7463   */\n      swap1\n      pop\n        /* \"#utility.yul\":7103:7469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7475:7894   */\n    tag_141:\n        /* \"#utility.yul\":7641:7645   */\n      0x00\n        /* \"#utility.yul\":7679:7681   */\n      0x20\n        /* \"#utility.yul\":7668:7677   */\n      dup3\n        /* \"#utility.yul\":7664:7682   */\n      add\n        /* \"#utility.yul\":7656:7682   */\n      swap1\n      pop\n        /* \"#utility.yul\":7728:7737   */\n      dup2\n        /* \"#utility.yul\":7722:7726   */\n      dup2\n        /* \"#utility.yul\":7718:7738   */\n      sub\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7703:7712   */\n      dup4\n        /* \"#utility.yul\":7699:7716   */\n      add\n        /* \"#utility.yul\":7692:7739   */\n      mstore\n        /* \"#utility.yul\":7756:7887   */\n      tag_363\n        /* \"#utility.yul\":7882:7886   */\n      dup2\n        /* \"#utility.yul\":7756:7887   */\n      tag_260\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7748:7887   */\n      swap1\n      pop\n        /* \"#utility.yul\":7475:7894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7900:8123   */\n    tag_261:\n        /* \"#utility.yul\":8040:8074   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8036:8037   */\n      0x00\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8024:8038   */\n      add\n        /* \"#utility.yul\":8017:8075   */\n      mstore\n        /* \"#utility.yul\":8109:8115   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8104:8106   */\n      0x20\n        /* \"#utility.yul\":8096:8102   */\n      dup3\n        /* \"#utility.yul\":8092:8107   */\n      add\n        /* \"#utility.yul\":8085:8116   */\n      mstore\n        /* \"#utility.yul\":7900:8123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8129:8495   */\n    tag_262:\n        /* \"#utility.yul\":8271:8274   */\n      0x00\n        /* \"#utility.yul\":8292:8359   */\n      tag_366\n        /* \"#utility.yul\":8356:8358   */\n      0x24\n        /* \"#utility.yul\":8351:8354   */\n      dup4\n        /* \"#utility.yul\":8292:8359   */\n      tag_238\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8285:8359   */\n      swap2\n      pop\n        /* \"#utility.yul\":8368:8461   */\n      tag_367\n        /* \"#utility.yul\":8457:8460   */\n      dup3\n        /* \"#utility.yul\":8368:8461   */\n      tag_261\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8486:8488   */\n      0x40\n        /* \"#utility.yul\":8481:8484   */\n      dup3\n        /* \"#utility.yul\":8477:8489   */\n      add\n        /* \"#utility.yul\":8470:8489   */\n      swap1\n      pop\n        /* \"#utility.yul\":8129:8495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8501:8920   */\n    tag_190:\n        /* \"#utility.yul\":8667:8671   */\n      0x00\n        /* \"#utility.yul\":8705:8707   */\n      0x20\n        /* \"#utility.yul\":8694:8703   */\n      dup3\n        /* \"#utility.yul\":8690:8708   */\n      add\n        /* \"#utility.yul\":8682:8708   */\n      swap1\n      pop\n        /* \"#utility.yul\":8754:8763   */\n      dup2\n        /* \"#utility.yul\":8748:8752   */\n      dup2\n        /* \"#utility.yul\":8744:8764   */\n      sub\n        /* \"#utility.yul\":8740:8741   */\n      0x00\n        /* \"#utility.yul\":8729:8738   */\n      dup4\n        /* \"#utility.yul\":8725:8742   */\n      add\n        /* \"#utility.yul\":8718:8765   */\n      mstore\n        /* \"#utility.yul\":8782:8913   */\n      tag_369\n        /* \"#utility.yul\":8908:8912   */\n      dup2\n        /* \"#utility.yul\":8782:8913   */\n      tag_262\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8774:8913   */\n      swap1\n      pop\n        /* \"#utility.yul\":8501:8920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8926:9147   */\n    tag_263:\n        /* \"#utility.yul\":9066:9100   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9062:9063   */\n      0x00\n        /* \"#utility.yul\":9054:9060   */\n      dup3\n        /* \"#utility.yul\":9050:9064   */\n      add\n        /* \"#utility.yul\":9043:9101   */\n      mstore\n        /* \"#utility.yul\":9135:9139   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9130:9132   */\n      0x20\n        /* \"#utility.yul\":9122:9128   */\n      dup3\n        /* \"#utility.yul\":9118:9133   */\n      add\n        /* \"#utility.yul\":9111:9140   */\n      mstore\n        /* \"#utility.yul\":8926:9147   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9153:9519   */\n    tag_264:\n        /* \"#utility.yul\":9295:9298   */\n      0x00\n        /* \"#utility.yul\":9316:9383   */\n      tag_372\n        /* \"#utility.yul\":9380:9382   */\n      0x22\n        /* \"#utility.yul\":9375:9378   */\n      dup4\n        /* \"#utility.yul\":9316:9383   */\n      tag_238\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9309:9383   */\n      swap2\n      pop\n        /* \"#utility.yul\":9392:9485   */\n      tag_373\n        /* \"#utility.yul\":9481:9484   */\n      dup3\n        /* \"#utility.yul\":9392:9485   */\n      tag_263\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":9510:9512   */\n      0x40\n        /* \"#utility.yul\":9505:9508   */\n      dup3\n        /* \"#utility.yul\":9501:9513   */\n      add\n        /* \"#utility.yul\":9494:9513   */\n      swap1\n      pop\n        /* \"#utility.yul\":9153:9519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9525:9944   */\n    tag_193:\n        /* \"#utility.yul\":9691:9695   */\n      0x00\n        /* \"#utility.yul\":9729:9731   */\n      0x20\n        /* \"#utility.yul\":9718:9727   */\n      dup3\n        /* \"#utility.yul\":9714:9732   */\n      add\n        /* \"#utility.yul\":9706:9732   */\n      swap1\n      pop\n        /* \"#utility.yul\":9778:9787   */\n      dup2\n        /* \"#utility.yul\":9772:9776   */\n      dup2\n        /* \"#utility.yul\":9768:9788   */\n      sub\n        /* \"#utility.yul\":9764:9765   */\n      0x00\n        /* \"#utility.yul\":9753:9762   */\n      dup4\n        /* \"#utility.yul\":9749:9766   */\n      add\n        /* \"#utility.yul\":9742:9789   */\n      mstore\n        /* \"#utility.yul\":9806:9937   */\n      tag_375\n        /* \"#utility.yul\":9932:9936   */\n      dup2\n        /* \"#utility.yul\":9806:9937   */\n      tag_264\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9798:9937   */\n      swap1\n      pop\n        /* \"#utility.yul\":9525:9944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9950:10174   */\n    tag_265:\n        /* \"#utility.yul\":10090:10124   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10086:10087   */\n      0x00\n        /* \"#utility.yul\":10078:10084   */\n      dup3\n        /* \"#utility.yul\":10074:10088   */\n      add\n        /* \"#utility.yul\":10067:10125   */\n      mstore\n        /* \"#utility.yul\":10159:10166   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10154:10156   */\n      0x20\n        /* \"#utility.yul\":10146:10152   */\n      dup3\n        /* \"#utility.yul\":10142:10157   */\n      add\n        /* \"#utility.yul\":10135:10167   */\n      mstore\n        /* \"#utility.yul\":9950:10174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10180:10546   */\n    tag_266:\n        /* \"#utility.yul\":10322:10325   */\n      0x00\n        /* \"#utility.yul\":10343:10410   */\n      tag_378\n        /* \"#utility.yul\":10407:10409   */\n      0x25\n        /* \"#utility.yul\":10402:10405   */\n      dup4\n        /* \"#utility.yul\":10343:10410   */\n      tag_238\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10336:10410   */\n      swap2\n      pop\n        /* \"#utility.yul\":10419:10512   */\n      tag_379\n        /* \"#utility.yul\":10508:10511   */\n      dup3\n        /* \"#utility.yul\":10419:10512   */\n      tag_265\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10537:10539   */\n      0x40\n        /* \"#utility.yul\":10532:10535   */\n      dup3\n        /* \"#utility.yul\":10528:10540   */\n      add\n        /* \"#utility.yul\":10521:10540   */\n      swap1\n      pop\n        /* \"#utility.yul\":10180:10546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10552:10971   */\n    tag_198:\n        /* \"#utility.yul\":10718:10722   */\n      0x00\n        /* \"#utility.yul\":10756:10758   */\n      0x20\n        /* \"#utility.yul\":10745:10754   */\n      dup3\n        /* \"#utility.yul\":10741:10759   */\n      add\n        /* \"#utility.yul\":10733:10759   */\n      swap1\n      pop\n        /* \"#utility.yul\":10805:10814   */\n      dup2\n        /* \"#utility.yul\":10799:10803   */\n      dup2\n        /* \"#utility.yul\":10795:10815   */\n      sub\n        /* \"#utility.yul\":10791:10792   */\n      0x00\n        /* \"#utility.yul\":10780:10789   */\n      dup4\n        /* \"#utility.yul\":10776:10793   */\n      add\n        /* \"#utility.yul\":10769:10816   */\n      mstore\n        /* \"#utility.yul\":10833:10964   */\n      tag_381\n        /* \"#utility.yul\":10959:10963   */\n      dup2\n        /* \"#utility.yul\":10833:10964   */\n      tag_266\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":10825:10964   */\n      swap1\n      pop\n        /* \"#utility.yul\":10552:10971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10977:11199   */\n    tag_267:\n        /* \"#utility.yul\":11117:11151   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11113:11114   */\n      0x00\n        /* \"#utility.yul\":11105:11111   */\n      dup3\n        /* \"#utility.yul\":11101:11115   */\n      add\n        /* \"#utility.yul\":11094:11152   */\n      mstore\n        /* \"#utility.yul\":11186:11191   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11181:11183   */\n      0x20\n        /* \"#utility.yul\":11173:11179   */\n      dup3\n        /* \"#utility.yul\":11169:11184   */\n      add\n        /* \"#utility.yul\":11162:11192   */\n      mstore\n        /* \"#utility.yul\":10977:11199   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11205:11571   */\n    tag_268:\n        /* \"#utility.yul\":11347:11350   */\n      0x00\n        /* \"#utility.yul\":11368:11435   */\n      tag_384\n        /* \"#utility.yul\":11432:11434   */\n      0x23\n        /* \"#utility.yul\":11427:11430   */\n      dup4\n        /* \"#utility.yul\":11368:11435   */\n      tag_238\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11361:11435   */\n      swap2\n      pop\n        /* \"#utility.yul\":11444:11537   */\n      tag_385\n        /* \"#utility.yul\":11533:11536   */\n      dup3\n        /* \"#utility.yul\":11444:11537   */\n      tag_267\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11562:11564   */\n      0x40\n        /* \"#utility.yul\":11557:11560   */\n      dup3\n        /* \"#utility.yul\":11553:11565   */\n      add\n        /* \"#utility.yul\":11546:11565   */\n      swap1\n      pop\n        /* \"#utility.yul\":11205:11571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11577:11996   */\n    tag_201:\n        /* \"#utility.yul\":11743:11747   */\n      0x00\n        /* \"#utility.yul\":11781:11783   */\n      0x20\n        /* \"#utility.yul\":11770:11779   */\n      dup3\n        /* \"#utility.yul\":11766:11784   */\n      add\n        /* \"#utility.yul\":11758:11784   */\n      swap1\n      pop\n        /* \"#utility.yul\":11830:11839   */\n      dup2\n        /* \"#utility.yul\":11824:11828   */\n      dup2\n        /* \"#utility.yul\":11820:11840   */\n      sub\n        /* \"#utility.yul\":11816:11817   */\n      0x00\n        /* \"#utility.yul\":11805:11814   */\n      dup4\n        /* \"#utility.yul\":11801:11818   */\n      add\n        /* \"#utility.yul\":11794:11841   */\n      mstore\n        /* \"#utility.yul\":11858:11989   */\n      tag_387\n        /* \"#utility.yul\":11984:11988   */\n      dup2\n        /* \"#utility.yul\":11858:11989   */\n      tag_268\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11850:11989   */\n      swap1\n      pop\n        /* \"#utility.yul\":11577:11996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12002:12182   */\n    tag_269:\n        /* \"#utility.yul\":12050:12127   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12047:12048   */\n      0x00\n        /* \"#utility.yul\":12040:12128   */\n      mstore\n        /* \"#utility.yul\":12147:12151   */\n      0x11\n        /* \"#utility.yul\":12144:12145   */\n      0x04\n        /* \"#utility.yul\":12137:12152   */\n      mstore\n        /* \"#utility.yul\":12171:12175   */\n      0x24\n        /* \"#utility.yul\":12168:12169   */\n      0x00\n        /* \"#utility.yul\":12161:12176   */\n      revert\n        /* \"#utility.yul\":12188:12379   */\n    tag_209:\n        /* \"#utility.yul\":12228:12232   */\n      0x00\n        /* \"#utility.yul\":12248:12268   */\n      tag_390\n        /* \"#utility.yul\":12266:12267   */\n      dup3\n        /* \"#utility.yul\":12248:12268   */\n      tag_249\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":12243:12268   */\n      swap2\n      pop\n        /* \"#utility.yul\":12282:12302   */\n      tag_391\n        /* \"#utility.yul\":12300:12301   */\n      dup4\n        /* \"#utility.yul\":12282:12302   */\n      tag_249\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12277:12302   */\n      swap3\n      pop\n        /* \"#utility.yul\":12321:12322   */\n      dup3\n        /* \"#utility.yul\":12318:12319   */\n      dup3\n        /* \"#utility.yul\":12315:12323   */\n      lt\n        /* \"#utility.yul\":12312:12346   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":12326:12344   */\n      tag_393\n      tag_269\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12312:12346   */\n    tag_392:\n        /* \"#utility.yul\":12371:12372   */\n      dup3\n        /* \"#utility.yul\":12368:12369   */\n      dup3\n        /* \"#utility.yul\":12364:12373   */\n      sub\n        /* \"#utility.yul\":12356:12373   */\n      swap1\n      pop\n        /* \"#utility.yul\":12188:12379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12385:12690   */\n    tag_212:\n        /* \"#utility.yul\":12425:12428   */\n      0x00\n        /* \"#utility.yul\":12444:12464   */\n      tag_395\n        /* \"#utility.yul\":12462:12463   */\n      dup3\n        /* \"#utility.yul\":12444:12464   */\n      tag_249\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12439:12464   */\n      swap2\n      pop\n        /* \"#utility.yul\":12478:12498   */\n      tag_396\n        /* \"#utility.yul\":12496:12497   */\n      dup4\n        /* \"#utility.yul\":12478:12498   */\n      tag_249\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12473:12498   */\n      swap3\n      pop\n        /* \"#utility.yul\":12632:12633   */\n      dup3\n        /* \"#utility.yul\":12564:12630   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12560:12634   */\n      sub\n        /* \"#utility.yul\":12557:12558   */\n      dup3\n        /* \"#utility.yul\":12554:12635   */\n      gt\n        /* \"#utility.yul\":12551:12658   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":12638:12656   */\n      tag_398\n      tag_269\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12551:12658   */\n    tag_397:\n        /* \"#utility.yul\":12682:12683   */\n      dup3\n        /* \"#utility.yul\":12679:12680   */\n      dup3\n        /* \"#utility.yul\":12675:12684   */\n      add\n        /* \"#utility.yul\":12668:12684   */\n      swap1\n      pop\n        /* \"#utility.yul\":12385:12690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12696:12873   */\n    tag_270:\n        /* \"#utility.yul\":12836:12865   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":12832:12833   */\n      0x00\n        /* \"#utility.yul\":12824:12830   */\n      dup3\n        /* \"#utility.yul\":12820:12834   */\n      add\n        /* \"#utility.yul\":12813:12866   */\n      mstore\n        /* \"#utility.yul\":12696:12873   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12879:13245   */\n    tag_271:\n        /* \"#utility.yul\":13021:13024   */\n      0x00\n        /* \"#utility.yul\":13042:13109   */\n      tag_401\n        /* \"#utility.yul\":13106:13108   */\n      0x1b\n        /* \"#utility.yul\":13101:13104   */\n      dup4\n        /* \"#utility.yul\":13042:13109   */\n      tag_238\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13035:13109   */\n      swap2\n      pop\n        /* \"#utility.yul\":13118:13211   */\n      tag_402\n        /* \"#utility.yul\":13207:13210   */\n      dup3\n        /* \"#utility.yul\":13118:13211   */\n      tag_270\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":13236:13238   */\n      0x20\n        /* \"#utility.yul\":13231:13234   */\n      dup3\n        /* \"#utility.yul\":13227:13239   */\n      add\n        /* \"#utility.yul\":13220:13239   */\n      swap1\n      pop\n        /* \"#utility.yul\":12879:13245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13251:13670   */\n    tag_215:\n        /* \"#utility.yul\":13417:13421   */\n      0x00\n        /* \"#utility.yul\":13455:13457   */\n      0x20\n        /* \"#utility.yul\":13444:13453   */\n      dup3\n        /* \"#utility.yul\":13440:13458   */\n      add\n        /* \"#utility.yul\":13432:13458   */\n      swap1\n      pop\n        /* \"#utility.yul\":13504:13513   */\n      dup2\n        /* \"#utility.yul\":13498:13502   */\n      dup2\n        /* \"#utility.yul\":13494:13514   */\n      sub\n        /* \"#utility.yul\":13490:13491   */\n      0x00\n        /* \"#utility.yul\":13479:13488   */\n      dup4\n        /* \"#utility.yul\":13475:13492   */\n      add\n        /* \"#utility.yul\":13468:13515   */\n      mstore\n        /* \"#utility.yul\":13532:13663   */\n      tag_404\n        /* \"#utility.yul\":13658:13662   */\n      dup2\n        /* \"#utility.yul\":13532:13663   */\n      tag_271\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13524:13663   */\n      swap1\n      pop\n        /* \"#utility.yul\":13251:13670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13676:13896   */\n    tag_272:\n        /* \"#utility.yul\":13816:13850   */\n      0x42455032303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":13812:13813   */\n      0x00\n        /* \"#utility.yul\":13804:13810   */\n      dup3\n        /* \"#utility.yul\":13800:13814   */\n      add\n        /* \"#utility.yul\":13793:13851   */\n      mstore\n        /* \"#utility.yul\":13885:13888   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13880:13882   */\n      0x20\n        /* \"#utility.yul\":13872:13878   */\n      dup3\n        /* \"#utility.yul\":13868:13883   */\n      add\n        /* \"#utility.yul\":13861:13889   */\n      mstore\n        /* \"#utility.yul\":13676:13896   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13902:14268   */\n    tag_273:\n        /* \"#utility.yul\":14044:14047   */\n      0x00\n        /* \"#utility.yul\":14065:14132   */\n      tag_407\n        /* \"#utility.yul\":14129:14131   */\n      0x21\n        /* \"#utility.yul\":14124:14127   */\n      dup4\n        /* \"#utility.yul\":14065:14132   */\n      tag_238\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":14058:14132   */\n      swap2\n      pop\n        /* \"#utility.yul\":14141:14234   */\n      tag_408\n        /* \"#utility.yul\":14230:14233   */\n      dup3\n        /* \"#utility.yul\":14141:14234   */\n      tag_272\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":14259:14261   */\n      0x40\n        /* \"#utility.yul\":14254:14257   */\n      dup3\n        /* \"#utility.yul\":14250:14262   */\n      add\n        /* \"#utility.yul\":14243:14262   */\n      swap1\n      pop\n        /* \"#utility.yul\":13902:14268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14274:14693   */\n    tag_219:\n        /* \"#utility.yul\":14440:14444   */\n      0x00\n        /* \"#utility.yul\":14478:14480   */\n      0x20\n        /* \"#utility.yul\":14467:14476   */\n      dup3\n        /* \"#utility.yul\":14463:14481   */\n      add\n        /* \"#utility.yul\":14455:14481   */\n      swap1\n      pop\n        /* \"#utility.yul\":14527:14536   */\n      dup2\n        /* \"#utility.yul\":14521:14525   */\n      dup2\n        /* \"#utility.yul\":14517:14537   */\n      sub\n        /* \"#utility.yul\":14513:14514   */\n      0x00\n        /* \"#utility.yul\":14502:14511   */\n      dup4\n        /* \"#utility.yul\":14498:14515   */\n      add\n        /* \"#utility.yul\":14491:14538   */\n      mstore\n        /* \"#utility.yul\":14555:14686   */\n      tag_410\n        /* \"#utility.yul\":14681:14685   */\n      dup2\n        /* \"#utility.yul\":14555:14686   */\n      tag_273\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":14547:14686   */\n      swap1\n      pop\n        /* \"#utility.yul\":14274:14693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14699:14880   */\n    tag_274:\n        /* \"#utility.yul\":14839:14872   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":14835:14836   */\n      0x00\n        /* \"#utility.yul\":14827:14833   */\n      dup3\n        /* \"#utility.yul\":14823:14837   */\n      add\n        /* \"#utility.yul\":14816:14873   */\n      mstore\n        /* \"#utility.yul\":14699:14880   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14886:15252   */\n    tag_275:\n        /* \"#utility.yul\":15028:15031   */\n      0x00\n        /* \"#utility.yul\":15049:15116   */\n      tag_413\n        /* \"#utility.yul\":15113:15115   */\n      0x1f\n        /* \"#utility.yul\":15108:15111   */\n      dup4\n        /* \"#utility.yul\":15049:15116   */\n      tag_238\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":15042:15116   */\n      swap2\n      pop\n        /* \"#utility.yul\":15125:15218   */\n      tag_414\n        /* \"#utility.yul\":15214:15217   */\n      dup3\n        /* \"#utility.yul\":15125:15218   */\n      tag_274\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":15243:15245   */\n      0x20\n        /* \"#utility.yul\":15238:15241   */\n      dup3\n        /* \"#utility.yul\":15234:15246   */\n      add\n        /* \"#utility.yul\":15227:15246   */\n      swap1\n      pop\n        /* \"#utility.yul\":14886:15252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15258:15677   */\n    tag_227:\n        /* \"#utility.yul\":15424:15428   */\n      0x00\n        /* \"#utility.yul\":15462:15464   */\n      0x20\n        /* \"#utility.yul\":15451:15460   */\n      dup3\n        /* \"#utility.yul\":15447:15465   */\n      add\n        /* \"#utility.yul\":15439:15465   */\n      swap1\n      pop\n        /* \"#utility.yul\":15511:15520   */\n      dup2\n        /* \"#utility.yul\":15505:15509   */\n      dup2\n        /* \"#utility.yul\":15501:15521   */\n      sub\n        /* \"#utility.yul\":15497:15498   */\n      0x00\n        /* \"#utility.yul\":15486:15495   */\n      dup4\n        /* \"#utility.yul\":15482:15499   */\n      add\n        /* \"#utility.yul\":15475:15522   */\n      mstore\n        /* \"#utility.yul\":15539:15670   */\n      tag_416\n        /* \"#utility.yul\":15665:15669   */\n      dup2\n        /* \"#utility.yul\":15539:15670   */\n      tag_275\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":15531:15670   */\n      swap1\n      pop\n        /* \"#utility.yul\":15258:15677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15683:15908   */\n    tag_276:\n        /* \"#utility.yul\":15823:15857   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15819:15820   */\n      0x00\n        /* \"#utility.yul\":15811:15817   */\n      dup3\n        /* \"#utility.yul\":15807:15821   */\n      add\n        /* \"#utility.yul\":15800:15858   */\n      mstore\n        /* \"#utility.yul\":15892:15900   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15887:15889   */\n      0x20\n        /* \"#utility.yul\":15879:15885   */\n      dup3\n        /* \"#utility.yul\":15875:15890   */\n      add\n        /* \"#utility.yul\":15868:15901   */\n      mstore\n        /* \"#utility.yul\":15683:15908   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15914:16280   */\n    tag_277:\n        /* \"#utility.yul\":16056:16059   */\n      0x00\n        /* \"#utility.yul\":16077:16144   */\n      tag_419\n        /* \"#utility.yul\":16141:16143   */\n      0x26\n        /* \"#utility.yul\":16136:16139   */\n      dup4\n        /* \"#utility.yul\":16077:16144   */\n      tag_238\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16070:16144   */\n      swap2\n      pop\n        /* \"#utility.yul\":16153:16246   */\n      tag_420\n        /* \"#utility.yul\":16242:16245   */\n      dup3\n        /* \"#utility.yul\":16153:16246   */\n      tag_276\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":16271:16273   */\n      0x40\n        /* \"#utility.yul\":16266:16269   */\n      dup3\n        /* \"#utility.yul\":16262:16274   */\n      add\n        /* \"#utility.yul\":16255:16274   */\n      swap1\n      pop\n        /* \"#utility.yul\":15914:16280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16286:16705   */\n    tag_234:\n        /* \"#utility.yul\":16452:16456   */\n      0x00\n        /* \"#utility.yul\":16490:16492   */\n      0x20\n        /* \"#utility.yul\":16479:16488   */\n      dup3\n        /* \"#utility.yul\":16475:16493   */\n      add\n        /* \"#utility.yul\":16467:16493   */\n      swap1\n      pop\n        /* \"#utility.yul\":16539:16548   */\n      dup2\n        /* \"#utility.yul\":16533:16537   */\n      dup2\n        /* \"#utility.yul\":16529:16549   */\n      sub\n        /* \"#utility.yul\":16525:16526   */\n      0x00\n        /* \"#utility.yul\":16514:16523   */\n      dup4\n        /* \"#utility.yul\":16510:16527   */\n      add\n        /* \"#utility.yul\":16503:16550   */\n      mstore\n        /* \"#utility.yul\":16567:16698   */\n      tag_422\n        /* \"#utility.yul\":16693:16697   */\n      dup2\n        /* \"#utility.yul\":16567:16698   */\n      tag_277\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":16559:16698   */\n      swap1\n      pop\n        /* \"#utility.yul\":16286:16705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n\n    auxdata: 0xa2646970667358221220971e105430aa79ef212c1f1a25d1fb7e94953d00f11eccf9fc531aa17b9540f464736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_355": {
									"entryPoint": null,
									"id": 355,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_503": {
									"entryPoint": null,
									"id": 503,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 578,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:951:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "679:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "689:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "703:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "709:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "699:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "689:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "720:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "750:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "756:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "746:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "746:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "724:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "797:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "811:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "825:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "821:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "777:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "770:26:1"
															},
															"nodeType": "YulIf",
															"src": "767:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "914:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "914:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "914:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "864:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "887:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "895:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "884:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "884:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "861:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:38:1"
															},
															"nodeType": "YulIf",
															"src": "858:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "663:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "672:6:1",
														"type": ""
													}
												],
												"src": "628:320:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024260201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600a81526020017f4255534420546f6b656e00000000000000000000000000000000000000000000815250600690805190602001906200010f9291906200024a565b506040518060400160405280600481526020017f4255534400000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d9291906200024a565b506012600460006101000a81548160ff021916908360ff1602179055506a19a4815e0ad0c67f000000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60035460405162000234919062000315565b60405180910390a362000397565b600033905090565b828054620002589062000361565b90600052602060002090601f0160209004810192826200027c5760008555620002c8565b82601f106200029757805160ff1916838001178555620002c8565b82800160010185558215620002c8579182015b82811115620002c7578251825591602001919060010190620002aa565b5b509050620002d79190620002db565b5090565b5b80821115620002f6576000816000905550600101620002dc565b5090565b6000819050919050565b6200030f81620002fa565b82525050565b60006020820190506200032c600083018462000304565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037a57607f821691505b6020821081141562000391576200039062000332565b5b50919050565b61208680620003a76000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb1461035d578063b09f12661461038d578063d28d8852146103ab578063dd62ed3e146103c9578063f2fde38b146103f95761012c565b8063893d20e8146102a35780638da5cb5b146102c157806395d89b41146102df578063a0712d68146102fd578063a457c2d71461032d5761012c565b806332424aa3116100f457806332424aa3146101eb578063395093511461020957806342966c681461023957806370a0823114610269578063715018a6146102995761012c565b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017f57806323b872dd1461019d578063313ce567146101cd575b600080fd5b610139610415565b6040516101469190611748565b60405180910390f35b61016960048036038101906101649190611803565b6104a7565b604051610176919061185e565b60405180910390f35b6101876104c5565b6040516101949190611888565b60405180910390f35b6101b760048036038101906101b291906118a3565b6104cf565b6040516101c4919061185e565b60405180910390f35b6101d56105a8565b6040516101e29190611912565b60405180910390f35b6101f36105bf565b6040516102009190611912565b60405180910390f35b610223600480360381019061021e9190611803565b6105d2565b604051610230919061185e565b60405180910390f35b610253600480360381019061024e919061192d565b610685565b604051610260919061185e565b60405180910390f35b610283600480360381019061027e919061195a565b6106a1565b6040516102909190611888565b60405180910390f35b6102a16106ea565b005b6102ab61083d565b6040516102b89190611996565b60405180910390f35b6102c961084c565b6040516102d69190611996565b60405180910390f35b6102e7610875565b6040516102f49190611748565b60405180910390f35b6103176004803603810190610312919061192d565b610907565b604051610324919061185e565b60405180910390f35b61034760048036038101906103429190611803565b6109b8565b604051610354919061185e565b60405180910390f35b61037760048036038101906103729190611803565b610a85565b604051610384919061185e565b60405180910390f35b610395610aa3565b6040516103a29190611748565b60405180910390f35b6103b3610b31565b6040516103c09190611748565b60405180910390f35b6103e360048036038101906103de91906119b1565b610bbf565b6040516103f09190611888565b60405180910390f35b610413600480360381019061040e919061195a565b610c46565b005b60606006805461042490611a20565b80601f016020809104026020016040519081016040528092919081815260200182805461045090611a20565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104bb6104b4610ce7565b8484610cef565b6001905092915050565b6000600354905090565b60006104dc848484610eba565b61059d846104e8610ce7565b61059885604051806060016040528060288152602001611fbc60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061054e610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111489092919063ffffffff16565b610cef565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b600061067b6105df610ce7565b8461067685600260006105f0610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ac90919063ffffffff16565b610cef565b6001905092915050565b6000610698610692610ce7565b8361120a565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106f2610ce7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611a9e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061084761084c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461088490611a20565b80601f01602080910402602001604051908101604052809291908181526020018280546108b090611a20565b80156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b5050505050905090565b6000610911610ce7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099590611a9e565b60405180910390fd5b6109af6109a9610ce7565b836113ae565b60019050919050565b6000610a7b6109c5610ce7565b84610a768560405180606001604052806025815260200161200a60259139600260006109ef610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111489092919063ffffffff16565b610cef565b6001905092915050565b6000610a99610a92610ce7565b8484610eba565b6001905092915050565b60058054610ab090611a20565b80601f0160208091040260200160405190810160405280929190818152602001828054610adc90611a20565b8015610b295780601f10610afe57610100808354040283529160200191610b29565b820191906000526020600020905b815481529060010190602001808311610b0c57829003601f168201915b505050505081565b60068054610b3e90611a20565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6a90611a20565b8015610bb75780601f10610b8c57610100808354040283529160200191610bb7565b820191906000526020600020905b815481529060010190602001808311610b9a57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c4e610ce7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd290611a9e565b60405180910390fd5b610ce481611538565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5690611b30565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc690611bc2565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ead9190611888565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2190611c54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9190611ce6565b60405180910390fd5b61100681604051806060016040528060268152602001611fe460269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111489092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ac90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161113b9190611888565b60405180910390a3505050565b6000838311158290611190576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111879190611748565b60405180910390fd5b506000838561119f9190611d35565b9050809150509392505050565b60008082846111bb9190611d69565b905083811015611200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f790611e0b565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561127a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127190611e9d565b60405180910390fd5b6112e68160405180606001604052806022815260200161202f60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111489092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061133e8160035461166590919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113a29190611888565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141590611f09565b60405180910390fd5b611433816003546111ac90919063ffffffff16565b60038190555061148b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ac90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161152c9190611888565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159f90611f9b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006116a783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611148565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116e95780820151818401526020810190506116ce565b838111156116f8576000848401525b50505050565b6000601f19601f8301169050919050565b600061171a826116af565b61172481856116ba565b93506117348185602086016116cb565b61173d816116fe565b840191505092915050565b60006020820190508181036000830152611762818461170f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061179a8261176f565b9050919050565b6117aa8161178f565b81146117b557600080fd5b50565b6000813590506117c7816117a1565b92915050565b6000819050919050565b6117e0816117cd565b81146117eb57600080fd5b50565b6000813590506117fd816117d7565b92915050565b6000806040838503121561181a5761181961176a565b5b6000611828858286016117b8565b9250506020611839858286016117ee565b9150509250929050565b60008115159050919050565b61185881611843565b82525050565b6000602082019050611873600083018461184f565b92915050565b611882816117cd565b82525050565b600060208201905061189d6000830184611879565b92915050565b6000806000606084860312156118bc576118bb61176a565b5b60006118ca868287016117b8565b93505060206118db868287016117b8565b92505060406118ec868287016117ee565b9150509250925092565b600060ff82169050919050565b61190c816118f6565b82525050565b60006020820190506119276000830184611903565b92915050565b6000602082840312156119435761194261176a565b5b6000611951848285016117ee565b91505092915050565b6000602082840312156119705761196f61176a565b5b600061197e848285016117b8565b91505092915050565b6119908161178f565b82525050565b60006020820190506119ab6000830184611987565b92915050565b600080604083850312156119c8576119c761176a565b5b60006119d6858286016117b8565b92505060206119e7858286016117b8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a3857607f821691505b60208210811415611a4c57611a4b6119f1565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a886020836116ba565b9150611a9382611a52565b602082019050919050565b60006020820190508181036000830152611ab781611a7b565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611b1a6024836116ba565b9150611b2582611abe565b604082019050919050565b60006020820190508181036000830152611b4981611b0d565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bac6022836116ba565b9150611bb782611b50565b604082019050919050565b60006020820190508181036000830152611bdb81611b9f565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611c3e6025836116ba565b9150611c4982611be2565b604082019050919050565b60006020820190508181036000830152611c6d81611c31565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611cd06023836116ba565b9150611cdb82611c74565b604082019050919050565b60006020820190508181036000830152611cff81611cc3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d40826117cd565b9150611d4b836117cd565b925082821015611d5e57611d5d611d06565b5b828203905092915050565b6000611d74826117cd565b9150611d7f836117cd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611db457611db3611d06565b5b828201905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000611df5601b836116ba565b9150611e0082611dbf565b602082019050919050565b60006020820190508181036000830152611e2481611de8565b9050919050565b7f42455032303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e876021836116ba565b9150611e9282611e2b565b604082019050919050565b60006020820190508181036000830152611eb681611e7a565b9050919050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611ef3601f836116ba565b9150611efe82611ebd565b602082019050919050565b60006020820190508181036000830152611f2281611ee6565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f856026836116ba565b9150611f9082611f29565b604082019050919050565b60006020820190508181036000830152611fb481611f78565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220971e105430aa79ef212c1f1a25d1fb7e94953d00f11eccf9fc531aa17b9540f464736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x242 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4255534420546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x24A JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4255534400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x24A JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x19A4815E0AD0C67F000000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH3 0x234 SWAP2 SWAP1 PUSH3 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x397 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x258 SWAP1 PUSH3 0x361 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x27C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2C8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x297 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2AA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2D7 SWAP2 SWAP1 PUSH3 0x2DB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2DC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x30F DUP2 PUSH3 0x2FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x32C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x37A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x391 JUMPI PUSH3 0x390 PUSH3 0x332 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2086 DUP1 PUSH3 0x3A7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F9 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x32D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x299 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x6EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B3 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH2 0xC46 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB PUSH2 0x4B4 PUSH2 0xCE7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC DUP5 DUP5 DUP5 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x59D DUP5 PUSH2 0x4E8 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x598 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FBC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x54E PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1148 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B PUSH2 0x5DF PUSH2 0xCE7 JUMP JUMPDEST DUP5 PUSH2 0x676 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x5F0 PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 PUSH2 0x692 PUSH2 0xCE7 JUMP JUMPDEST DUP4 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F2 PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x847 PUSH2 0x84C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x884 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x911 PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AF PUSH2 0x9A9 PUSH2 0xCE7 JUMP JUMPDEST DUP4 PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B PUSH2 0x9C5 PUSH2 0xCE7 JUMP JUMPDEST DUP5 PUSH2 0xA76 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EF PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1148 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 PUSH2 0xA92 PUSH2 0xCE7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0xAB0 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADC SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB29 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB29 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xB3E SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6A SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4E PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0x1538 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD56 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1006 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE4 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1148 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x109B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x119F SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x1D69 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP1 PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x127A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1271 SWAP1 PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x202F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1148 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x133E DUP2 PUSH1 0x3 SLOAD PUSH2 0x1665 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13A2 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1433 DUP2 PUSH1 0x3 SLOAD PUSH2 0x11AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x148B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16CE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16F8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171A DUP3 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x1724 DUP2 DUP6 PUSH2 0x16BA JUMP JUMPDEST SWAP4 POP PUSH2 0x1734 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x173D DUP2 PUSH2 0x16FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1762 DUP2 DUP5 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179A DUP3 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AA DUP2 PUSH2 0x178F JUMP JUMPDEST DUP2 EQ PUSH2 0x17B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C7 DUP2 PUSH2 0x17A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E0 DUP2 PUSH2 0x17CD JUMP JUMPDEST DUP2 EQ PUSH2 0x17EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17FD DUP2 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1828 DUP6 DUP3 DUP7 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1839 DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1858 DUP2 PUSH2 0x1843 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1873 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x184F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1882 DUP2 PUSH2 0x17CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1879 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18BC JUMPI PUSH2 0x18BB PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CA DUP7 DUP3 DUP8 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18DB DUP7 DUP3 DUP8 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18EC DUP7 DUP3 DUP8 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190C DUP2 PUSH2 0x18F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1927 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1903 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1942 PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1951 DUP5 DUP3 DUP6 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x196F PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x197E DUP5 DUP3 DUP6 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1990 DUP2 PUSH2 0x178F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C8 JUMPI PUSH2 0x19C7 PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D6 DUP6 DUP3 DUP7 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E7 DUP6 DUP3 DUP7 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4B PUSH2 0x19F1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A88 PUSH1 0x20 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1A93 DUP3 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB7 DUP2 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1A PUSH1 0x24 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B25 DUP3 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B49 DUP2 PUSH2 0x1B0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAC PUSH1 0x22 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB7 DUP3 PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BDB DUP2 PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3E PUSH1 0x25 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C49 DUP3 PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C6D DUP2 PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 PUSH1 0x23 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDB DUP3 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFF DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D40 DUP3 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4B DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D5E JUMPI PUSH2 0x1D5D PUSH2 0x1D06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 DUP3 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7F DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DB4 JUMPI PUSH2 0x1DB3 PUSH2 0x1D06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF5 PUSH1 0x1B DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E00 DUP3 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E24 DUP2 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 PUSH1 0x21 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E92 DUP3 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB6 DUP2 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF3 PUSH1 0x1F DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFE DUP3 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F22 DUP2 PUSH2 0x1EE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F85 PUSH1 0x26 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1F90 DUP3 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB4 DUP2 PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 SWAP8 0x1E LT SLOAD ADDRESS 0xAA PUSH26 0xEF212C1F1A25D1FB7E94953D00F11ECCF9FC531AA17B9540F464 PUSH20 0x6F6C634300080900330000000000000000000000 ",
							"sourceMap": "12279:9186:0:-:0;;;12617:268;;;;;;;;;;10645:17;10665:12;:10;;;:12;;:::i;:::-;10645:32;;10697:9;10688:6;;:18;;;;;;;;;;;;;;;;;;10755:9;10722:43;;10751:1;10722:43;;;;;;;;;;;;10634:139;12642:20;;;;;;;;;;;;;;;;;:5;:20;;;;;;;;;;;;:::i;:::-;;12673:16;;;;;;;;;;;;;;;;;:7;:16;;;;;;;;;;;;:::i;:::-;;12712:2;12700:9;;:14;;;;;;;;;;;;;;;;;;12740:26;12725:12;:41;;;;12801:12;;12777:9;:21;12787:10;12777:21;;;;;;;;;;;;;;;:36;;;;12852:10;12831:46;;12848:1;12831:46;;;12864:12;;12831:46;;;;;;:::i;:::-;;;;;;;;12279:9186;;4079:107;4124:15;4167:10;4152:26;;4079:107;:::o;12279:9186::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:320;672:6;709:1;703:4;699:12;689:22;;756:1;750:4;746:12;777:18;767:81;;833:4;825:6;821:17;811:27;;767:81;895:2;887:6;884:14;864:18;861:38;858:84;;;914:18;;:::i;:::-;858:84;679:269;628:320;;;:::o;12279:9186:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_947": {
									"entryPoint": 3311,
									"id": 947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_902": {
									"entryPoint": 4618,
									"id": 902,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_decimals_462": {
									"entryPoint": 1471,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_855": {
									"entryPoint": 5038,
									"id": 855,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 3303,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_name_466": {
									"entryPoint": 2865,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_symbol_464": {
									"entryPoint": 2723,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_438": {
									"entryPoint": 5432,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_809": {
									"entryPoint": 3770,
									"id": 809,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_155": {
									"entryPoint": 4524,
									"id": 155,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_599": {
									"entryPoint": 3007,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_619": {
									"entryPoint": 1191,
									"id": 619,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_562": {
									"entryPoint": 1697,
									"id": 562,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_749": {
									"entryPoint": 1669,
									"id": 749,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_522": {
									"entryPoint": 1448,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_713": {
									"entryPoint": 2488,
									"id": 713,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_513": {
									"entryPoint": 2109,
									"id": 513,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_684": {
									"entryPoint": 1490,
									"id": 684,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_732": {
									"entryPoint": 2311,
									"id": 732,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_540": {
									"entryPoint": 1045,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_364": {
									"entryPoint": 2124,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_399": {
									"entryPoint": 1770,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_172": {
									"entryPoint": 5733,
									"id": 172,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_200": {
									"entryPoint": 4424,
									"id": 200,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_531": {
									"entryPoint": 2165,
									"id": 531,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_549": {
									"entryPoint": 1221,
									"id": 549,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_656": {
									"entryPoint": 1231,
									"id": 656,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_412": {
									"entryPoint": 3142,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_582": {
									"entryPoint": 2693,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5835,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
									"entryPoint": 7138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 7977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 7615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3": {
									"entryPoint": 7869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
									"entryPoint": 7284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16708:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "336:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "350:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "440:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "445:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "436:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "436:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "464:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "455:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "455:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "449:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "429:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "429:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "376:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "387:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "389:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "398:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "394:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "389:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "369:3:1",
																"statements": []
															},
															"src": "365:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "496:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "490:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:1"
															},
															"nodeType": "YulIf",
															"src": "487:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "318:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "323:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "328:6:1",
														"type": ""
													}
												],
												"src": "287:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "658:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "641:6:1",
														"type": ""
													}
												],
												"src": "600:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "857:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "824:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "814:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "872:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "879:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "985:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "999:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "959:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1031:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1036:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "781:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "788:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "796:3:1",
														"type": ""
													}
												],
												"src": "708:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1214:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1206:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1272:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1379:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1306:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1191:4:1",
														"type": ""
													}
												],
												"src": "1078:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1447:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1430:6:1",
														"type": ""
													}
												],
												"src": "1397:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1478:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1601:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1779:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1761:7:1",
														"type": ""
													}
												],
												"src": "1724:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1911:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1940:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1922:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1911:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1893:7:1",
														"type": ""
													}
												],
												"src": "1856:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2058:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2060:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2060:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2049:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2031:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2031:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2021:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:43:1"
															},
															"nodeType": "YulIf",
															"src": "2011:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:1",
														"type": ""
													}
												],
												"src": "1958:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2148:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2157:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2148:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2186:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2116:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2124:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2132:5:1",
														"type": ""
													}
												],
												"src": "2086:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2286:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2297:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2286:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2258:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2268:7:1",
														"type": ""
													}
												],
												"src": "2231:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2414:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2423:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2416:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2416:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2416:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2405:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2387:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:43:1"
															},
															"nodeType": "YulIf",
															"src": "2367:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2350:5:1",
														"type": ""
													}
												],
												"src": "2314:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2542:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:1",
														"type": ""
													}
												],
												"src": "2442:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2670:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2716:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2718:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2718:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2718:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2691:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:1"
															},
															"nodeType": "YulIf",
															"src": "2680:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2809:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2824:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2828:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2936:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2951:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2955:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2981:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3016:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3027:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3012:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3012:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3036:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2991:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2981:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2632:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2643:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2655:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2663:6:1",
														"type": ""
													}
												],
												"src": "2587:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3109:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3119:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3144:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3137:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3119:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3091:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3101:7:1",
														"type": ""
													}
												],
												"src": "3067:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3259:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3244:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3217:3:1",
														"type": ""
													}
												],
												"src": "3163:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3380:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3392:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3388:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3454:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3478:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3416:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3342:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3354:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3365:4:1",
														"type": ""
													}
												],
												"src": "3278:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3559:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3599:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3581:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3547:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:1",
														"type": ""
													}
												],
												"src": "3494:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3726:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3830:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3762:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3688:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3700:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3711:4:1",
														"type": ""
													}
												],
												"src": "3618:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3992:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3994:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3994:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:1"
															},
															"nodeType": "YulIf",
															"src": "3956:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4085:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4100:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4104:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4129:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4164:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4175:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4160:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4160:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4184:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4139:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4129:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4212:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4227:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4231:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4257:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4292:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4303:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4288:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4288:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4312:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4267:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4257:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4340:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4355:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4359:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4385:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4420:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4431:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4416:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4395:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4385:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3900:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3911:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3923:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3931:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3939:6:1",
														"type": ""
													}
												],
												"src": "3846:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4539:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4524:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4496:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4506:7:1",
														"type": ""
													}
												],
												"src": "4471:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4641:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4662:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4646:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4612:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4619:3:1",
														"type": ""
													}
												],
												"src": "4563:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4785:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4861:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4821:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4747:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4759:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4770:4:1",
														"type": ""
													}
												],
												"src": "4681:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4967:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5013:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5015:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5015:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5015:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:32:1"
															},
															"nodeType": "YulIf",
															"src": "4977:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5106:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5121:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5125:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5150:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5185:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5196:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5181:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5181:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5205:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5160:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5150:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4937:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4948:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4960:6:1",
														"type": ""
													}
												],
												"src": "4901:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5302:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5348:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5350:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5350:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5350:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5323:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5332:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5319:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5344:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5315:32:1"
															},
															"nodeType": "YulIf",
															"src": "5312:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5441:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5456:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5470:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5460:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5485:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5520:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5531:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5516:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5516:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5540:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5495:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5495:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5485:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5272:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5283:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5295:6:1",
														"type": ""
													}
												],
												"src": "5236:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5636:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5653:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5676:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5658:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5658:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5646:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5646:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5624:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5631:3:1",
														"type": ""
													}
												],
												"src": "5571:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5793:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5803:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5826:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5811:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5811:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5803:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5896:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5907:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5892:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5839:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5839:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5839:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5765:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5777:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5788:4:1",
														"type": ""
													}
												],
												"src": "5695:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6006:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6052:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6054:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6054:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6054:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6027:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6036:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6023:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6019:32:1"
															},
															"nodeType": "YulIf",
															"src": "6016:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6145:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6160:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6174:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6164:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6189:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6224:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6235:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6220:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6244:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6199:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6199:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6189:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6272:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6287:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6301:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6291:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6352:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6363:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6348:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6348:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6372:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6327:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6327:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6317:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5968:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5979:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5991:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5999:6:1",
														"type": ""
													}
												],
												"src": "5923:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6431:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6448:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6451:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6441:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6441:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6441:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6545:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6548:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6538:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6538:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6538:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6569:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6572:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6562:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6562:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6403:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6640:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6650:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6664:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6681:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6711:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6717:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6707:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6707:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6685:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6758:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6772:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6786:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6794:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6782:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6782:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6772:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6738:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:26:1"
															},
															"nodeType": "YulIf",
															"src": "6728:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6861:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6875:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6875:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6875:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6825:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6848:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6856:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6845:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6845:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6822:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6822:38:1"
															},
															"nodeType": "YulIf",
															"src": "6819:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6624:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6633:6:1",
														"type": ""
													}
												],
												"src": "6589:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7021:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7043:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7039:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7055:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7013:6:1",
														"type": ""
													}
												],
												"src": "6915:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7249:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7259:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7325:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7266:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7266:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7259:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7431:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7342:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7444:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7455:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7460:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7451:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7444:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7237:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7245:3:1",
														"type": ""
													}
												],
												"src": "7103:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7646:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7656:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7668:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7664:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7656:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7703:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7714:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7699:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7722:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7728:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7718:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7692:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7748:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7882:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7756:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7756:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7748:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7626:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7641:4:1",
														"type": ""
													}
												],
												"src": "7475:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8006:117:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8036:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8024:14:1"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8040:34:1",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8017:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8017:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8096:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8104:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8092:15:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8109:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8085:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8085:31:1"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7998:6:1",
														"type": ""
													}
												],
												"src": "7900:223:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8275:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8285:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8351:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8356:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8292:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8292:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8285:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8457:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "8368:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8368:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8368:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8470:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8481:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8486:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8477:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8470:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8263:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8271:3:1",
														"type": ""
													}
												],
												"src": "8129:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8672:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8682:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8694:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8705:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8690:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8690:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8682:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8740:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8725:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8748:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8754:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8744:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8744:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8718:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8718:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8774:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8908:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8782:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8774:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8652:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8667:4:1",
														"type": ""
													}
												],
												"src": "8501:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9032:115:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9054:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9062:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9050:14:1"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9066:34:1",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9043:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9043:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9043:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9122:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9130:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9118:15:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9135:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9111:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9111:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9111:29:1"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9024:6:1",
														"type": ""
													}
												],
												"src": "8926:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9299:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9309:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9375:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9316:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9316:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9309:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9481:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "9392:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9392:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9392:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9494:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9505:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9510:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9501:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9501:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9494:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9287:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9295:3:1",
														"type": ""
													}
												],
												"src": "9153:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9696:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9706:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9718:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9729:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9714:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9714:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9706:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9764:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9749:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9772:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9778:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9768:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9742:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9742:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9798:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9932:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9806:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9806:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9798:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9676:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9691:4:1",
														"type": ""
													}
												],
												"src": "9525:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10056:118:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10078:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10086:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10074:14:1"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10090:34:1",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10067:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10067:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10067:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10146:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10154:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10142:15:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10159:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10135:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10135:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10048:6:1",
														"type": ""
													}
												],
												"src": "9950:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10326:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10336:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10402:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10407:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10343:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10336:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10508:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "10419:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10419:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10419:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10521:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10532:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10537:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10528:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10528:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10521:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10314:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10322:3:1",
														"type": ""
													}
												],
												"src": "10180:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10723:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10733:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10745:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10756:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10741:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10741:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10733:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10780:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10791:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10776:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10776:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10799:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10805:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10795:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10795:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10769:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10769:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10825:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10959:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10833:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10833:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10825:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10703:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10718:4:1",
														"type": ""
													}
												],
												"src": "10552:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11083:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11105:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11113:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11101:14:1"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11117:34:1",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11094:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11094:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11173:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11181:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11169:15:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11186:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11162:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11162:30:1"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11075:6:1",
														"type": ""
													}
												],
												"src": "10977:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11351:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11361:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11427:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11432:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11368:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11368:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11361:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11533:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "11444:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11444:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11444:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11546:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11557:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11562:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11553:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11553:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11546:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11339:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11347:3:1",
														"type": ""
													}
												],
												"src": "11205:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11748:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11758:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11770:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11781:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11766:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11766:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11758:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11805:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11816:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11801:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11801:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11824:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11830:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11820:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11820:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11794:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11794:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11794:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11850:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11984:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11858:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11858:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11850:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11728:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11743:4:1",
														"type": ""
													}
												],
												"src": "11577:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12030:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12047:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12050:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12040:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12040:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12144:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12147:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12137:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12137:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12137:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12168:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12171:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12161:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12161:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12161:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12002:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12233:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12243:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12266:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12248:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12248:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12243:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12277:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12300:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12282:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12282:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12277:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12324:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12326:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12326:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12326:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12318:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12321:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12315:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12315:8:1"
															},
															"nodeType": "YulIf",
															"src": "12312:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12356:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12368:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12371:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12364:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12356:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12219:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12222:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12228:4:1",
														"type": ""
													}
												],
												"src": "12188:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12429:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12439:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12462:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12444:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12444:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12439:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12473:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12496:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12478:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12478:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12473:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12636:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12638:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12638:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12638:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12557:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12564:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12632:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12560:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12554:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12554:81:1"
															},
															"nodeType": "YulIf",
															"src": "12551:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12668:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12679:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12682:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12675:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12675:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12668:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12416:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12419:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12425:3:1",
														"type": ""
													}
												],
												"src": "12385:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12802:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12824:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12832:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12820:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12820:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12836:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12813:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12813:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12813:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12794:6:1",
														"type": ""
													}
												],
												"src": "12696:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13025:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13035:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13101:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13106:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13042:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13042:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13035:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13207:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "13118:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13118:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13118:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13220:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13231:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13227:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13227:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13220:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13013:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13021:3:1",
														"type": ""
													}
												],
												"src": "12879:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13422:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13432:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13444:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13455:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13440:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13440:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13432:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13479:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13490:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13475:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13498:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13504:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13494:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13468:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13468:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13524:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13658:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13532:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13532:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13524:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13402:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13417:4:1",
														"type": ""
													}
												],
												"src": "13251:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13782:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13804:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13812:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13800:14:1"
																	},
																	{
																		"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13816:34:1",
																		"type": "",
																		"value": "BEP20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13793:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13793:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13872:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13880:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13868:15:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13885:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13861:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13861:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13861:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13774:6:1",
														"type": ""
													}
												],
												"src": "13676:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14048:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14058:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14124:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14129:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14065:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14065:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14058:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14230:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																	"nodeType": "YulIdentifier",
																	"src": "14141:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14141:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14141:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14243:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14254:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14259:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14250:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14250:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14243:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14036:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14044:3:1",
														"type": ""
													}
												],
												"src": "13902:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14445:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14455:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14467:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14478:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14463:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14463:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14455:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14502:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14513:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14498:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14498:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14521:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14527:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14517:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14491:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14547:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14681:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14555:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14555:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14547:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14425:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14440:4:1",
														"type": ""
													}
												],
												"src": "14274:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14805:75:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14827:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14835:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14823:14:1"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14839:33:1",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14816:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14816:57:1"
														}
													]
												},
												"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14797:6:1",
														"type": ""
													}
												],
												"src": "14699:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15032:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15042:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15108:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15113:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15049:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15049:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15042:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15214:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																	"nodeType": "YulIdentifier",
																	"src": "15125:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15125:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15125:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15227:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15238:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15243:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15234:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15234:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15227:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15020:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15028:3:1",
														"type": ""
													}
												],
												"src": "14886:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15429:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15439:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15451:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15462:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15447:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15447:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15439:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15486:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15497:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15482:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15482:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15505:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15511:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15501:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15475:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15475:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15475:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15531:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15665:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15539:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15539:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15531:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15409:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15424:4:1",
														"type": ""
													}
												],
												"src": "15258:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15789:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15811:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15819:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15807:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15823:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15800:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15800:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15800:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15879:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15887:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15875:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15875:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15892:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15868:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15868:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15781:6:1",
														"type": ""
													}
												],
												"src": "15683:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16060:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16070:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16136:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16141:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16077:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16077:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16070:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16242:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "16153:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16153:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16153:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16255:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16266:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16271:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16262:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16262:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16255:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16048:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16056:3:1",
														"type": ""
													}
												],
												"src": "15914:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16457:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16467:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16490:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16475:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16475:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16467:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16514:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16525:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16510:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16533:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16539:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16529:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16503:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16503:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16503:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16559:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16693:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16567:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16567:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16559:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16437:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16452:4:1",
														"type": ""
													}
												],
												"src": "16286:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb1461035d578063b09f12661461038d578063d28d8852146103ab578063dd62ed3e146103c9578063f2fde38b146103f95761012c565b8063893d20e8146102a35780638da5cb5b146102c157806395d89b41146102df578063a0712d68146102fd578063a457c2d71461032d5761012c565b806332424aa3116100f457806332424aa3146101eb578063395093511461020957806342966c681461023957806370a0823114610269578063715018a6146102995761012c565b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017f57806323b872dd1461019d578063313ce567146101cd575b600080fd5b610139610415565b6040516101469190611748565b60405180910390f35b61016960048036038101906101649190611803565b6104a7565b604051610176919061185e565b60405180910390f35b6101876104c5565b6040516101949190611888565b60405180910390f35b6101b760048036038101906101b291906118a3565b6104cf565b6040516101c4919061185e565b60405180910390f35b6101d56105a8565b6040516101e29190611912565b60405180910390f35b6101f36105bf565b6040516102009190611912565b60405180910390f35b610223600480360381019061021e9190611803565b6105d2565b604051610230919061185e565b60405180910390f35b610253600480360381019061024e919061192d565b610685565b604051610260919061185e565b60405180910390f35b610283600480360381019061027e919061195a565b6106a1565b6040516102909190611888565b60405180910390f35b6102a16106ea565b005b6102ab61083d565b6040516102b89190611996565b60405180910390f35b6102c961084c565b6040516102d69190611996565b60405180910390f35b6102e7610875565b6040516102f49190611748565b60405180910390f35b6103176004803603810190610312919061192d565b610907565b604051610324919061185e565b60405180910390f35b61034760048036038101906103429190611803565b6109b8565b604051610354919061185e565b60405180910390f35b61037760048036038101906103729190611803565b610a85565b604051610384919061185e565b60405180910390f35b610395610aa3565b6040516103a29190611748565b60405180910390f35b6103b3610b31565b6040516103c09190611748565b60405180910390f35b6103e360048036038101906103de91906119b1565b610bbf565b6040516103f09190611888565b60405180910390f35b610413600480360381019061040e919061195a565b610c46565b005b60606006805461042490611a20565b80601f016020809104026020016040519081016040528092919081815260200182805461045090611a20565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104bb6104b4610ce7565b8484610cef565b6001905092915050565b6000600354905090565b60006104dc848484610eba565b61059d846104e8610ce7565b61059885604051806060016040528060288152602001611fbc60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061054e610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111489092919063ffffffff16565b610cef565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b600061067b6105df610ce7565b8461067685600260006105f0610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ac90919063ffffffff16565b610cef565b6001905092915050565b6000610698610692610ce7565b8361120a565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106f2610ce7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611a9e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061084761084c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461088490611a20565b80601f01602080910402602001604051908101604052809291908181526020018280546108b090611a20565b80156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b5050505050905090565b6000610911610ce7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099590611a9e565b60405180910390fd5b6109af6109a9610ce7565b836113ae565b60019050919050565b6000610a7b6109c5610ce7565b84610a768560405180606001604052806025815260200161200a60259139600260006109ef610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111489092919063ffffffff16565b610cef565b6001905092915050565b6000610a99610a92610ce7565b8484610eba565b6001905092915050565b60058054610ab090611a20565b80601f0160208091040260200160405190810160405280929190818152602001828054610adc90611a20565b8015610b295780601f10610afe57610100808354040283529160200191610b29565b820191906000526020600020905b815481529060010190602001808311610b0c57829003601f168201915b505050505081565b60068054610b3e90611a20565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6a90611a20565b8015610bb75780601f10610b8c57610100808354040283529160200191610bb7565b820191906000526020600020905b815481529060010190602001808311610b9a57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c4e610ce7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd290611a9e565b60405180910390fd5b610ce481611538565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5690611b30565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc690611bc2565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ead9190611888565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2190611c54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9190611ce6565b60405180910390fd5b61100681604051806060016040528060268152602001611fe460269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111489092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061109b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ac90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161113b9190611888565b60405180910390a3505050565b6000838311158290611190576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111879190611748565b60405180910390fd5b506000838561119f9190611d35565b9050809150509392505050565b60008082846111bb9190611d69565b905083811015611200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f790611e0b565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561127a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127190611e9d565b60405180910390fd5b6112e68160405180606001604052806022815260200161202f60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111489092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061133e8160035461166590919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113a29190611888565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561141e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141590611f09565b60405180910390fd5b611433816003546111ac90919063ffffffff16565b60038190555061148b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111ac90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161152c9190611888565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159f90611f9b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006116a783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611148565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116e95780820151818401526020810190506116ce565b838111156116f8576000848401525b50505050565b6000601f19601f8301169050919050565b600061171a826116af565b61172481856116ba565b93506117348185602086016116cb565b61173d816116fe565b840191505092915050565b60006020820190508181036000830152611762818461170f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061179a8261176f565b9050919050565b6117aa8161178f565b81146117b557600080fd5b50565b6000813590506117c7816117a1565b92915050565b6000819050919050565b6117e0816117cd565b81146117eb57600080fd5b50565b6000813590506117fd816117d7565b92915050565b6000806040838503121561181a5761181961176a565b5b6000611828858286016117b8565b9250506020611839858286016117ee565b9150509250929050565b60008115159050919050565b61185881611843565b82525050565b6000602082019050611873600083018461184f565b92915050565b611882816117cd565b82525050565b600060208201905061189d6000830184611879565b92915050565b6000806000606084860312156118bc576118bb61176a565b5b60006118ca868287016117b8565b93505060206118db868287016117b8565b92505060406118ec868287016117ee565b9150509250925092565b600060ff82169050919050565b61190c816118f6565b82525050565b60006020820190506119276000830184611903565b92915050565b6000602082840312156119435761194261176a565b5b6000611951848285016117ee565b91505092915050565b6000602082840312156119705761196f61176a565b5b600061197e848285016117b8565b91505092915050565b6119908161178f565b82525050565b60006020820190506119ab6000830184611987565b92915050565b600080604083850312156119c8576119c761176a565b5b60006119d6858286016117b8565b92505060206119e7858286016117b8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a3857607f821691505b60208210811415611a4c57611a4b6119f1565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a886020836116ba565b9150611a9382611a52565b602082019050919050565b60006020820190508181036000830152611ab781611a7b565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611b1a6024836116ba565b9150611b2582611abe565b604082019050919050565b60006020820190508181036000830152611b4981611b0d565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bac6022836116ba565b9150611bb782611b50565b604082019050919050565b60006020820190508181036000830152611bdb81611b9f565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611c3e6025836116ba565b9150611c4982611be2565b604082019050919050565b60006020820190508181036000830152611c6d81611c31565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611cd06023836116ba565b9150611cdb82611c74565b604082019050919050565b60006020820190508181036000830152611cff81611cc3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d40826117cd565b9150611d4b836117cd565b925082821015611d5e57611d5d611d06565b5b828203905092915050565b6000611d74826117cd565b9150611d7f836117cd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611db457611db3611d06565b5b828201905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000611df5601b836116ba565b9150611e0082611dbf565b602082019050919050565b60006020820190508181036000830152611e2481611de8565b9050919050565b7f42455032303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e876021836116ba565b9150611e9282611e2b565b604082019050919050565b60006020820190508181036000830152611eb681611e7a565b9050919050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611ef3601f836116ba565b9150611efe82611ebd565b602082019050919050565b60006020820190508181036000830152611f2281611ee6565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f856026836116ba565b9150611f9082611f29565b604082019050919050565b60006020820190508181036000830152611fb481611f78565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220971e105430aa79ef212c1f1a25d1fb7e94953d00f11eccf9fc531aa17b9540f464736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F9 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x32D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x299 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x6EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x185E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B3 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH2 0xC46 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB PUSH2 0x4B4 PUSH2 0xCE7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC DUP5 DUP5 DUP5 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x59D DUP5 PUSH2 0x4E8 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x598 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FBC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x54E PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1148 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67B PUSH2 0x5DF PUSH2 0xCE7 JUMP JUMPDEST DUP5 PUSH2 0x676 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x5F0 PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 PUSH2 0x692 PUSH2 0xCE7 JUMP JUMPDEST DUP4 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F2 PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x847 PUSH2 0x84C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x884 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x911 PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AF PUSH2 0x9A9 PUSH2 0xCE7 JUMP JUMPDEST DUP4 PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B PUSH2 0x9C5 PUSH2 0xCE7 JUMP JUMPDEST DUP5 PUSH2 0xA76 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x200A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EF PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1148 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 PUSH2 0xA92 PUSH2 0xCE7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0xAB0 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADC SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB29 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAFE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB29 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0xB3E SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6A SWAP1 PUSH2 0x1A20 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4E PUSH2 0xCE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0x1538 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD56 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1006 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FE4 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1148 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x109B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x119F SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x1D69 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP1 PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x127A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1271 SWAP1 PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x202F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1148 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x133E DUP2 PUSH1 0x3 SLOAD PUSH2 0x1665 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13A2 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x141E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1415 SWAP1 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1433 DUP2 PUSH1 0x3 SLOAD PUSH2 0x11AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x148B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11AC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16CE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16F8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171A DUP3 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x1724 DUP2 DUP6 PUSH2 0x16BA JUMP JUMPDEST SWAP4 POP PUSH2 0x1734 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x173D DUP2 PUSH2 0x16FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1762 DUP2 DUP5 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179A DUP3 PUSH2 0x176F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AA DUP2 PUSH2 0x178F JUMP JUMPDEST DUP2 EQ PUSH2 0x17B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C7 DUP2 PUSH2 0x17A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E0 DUP2 PUSH2 0x17CD JUMP JUMPDEST DUP2 EQ PUSH2 0x17EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17FD DUP2 PUSH2 0x17D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1828 DUP6 DUP3 DUP7 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1839 DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1858 DUP2 PUSH2 0x1843 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1873 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x184F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1882 DUP2 PUSH2 0x17CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1879 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18BC JUMPI PUSH2 0x18BB PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18CA DUP7 DUP3 DUP8 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18DB DUP7 DUP3 DUP8 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18EC DUP7 DUP3 DUP8 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190C DUP2 PUSH2 0x18F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1927 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1903 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1942 PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1951 DUP5 DUP3 DUP6 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x196F PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x197E DUP5 DUP3 DUP6 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1990 DUP2 PUSH2 0x178F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C8 JUMPI PUSH2 0x19C7 PUSH2 0x176A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D6 DUP6 DUP3 DUP7 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E7 DUP6 DUP3 DUP7 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A38 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4B PUSH2 0x19F1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A88 PUSH1 0x20 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1A93 DUP3 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB7 DUP2 PUSH2 0x1A7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1A PUSH1 0x24 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1B25 DUP3 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B49 DUP2 PUSH2 0x1B0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAC PUSH1 0x22 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB7 DUP3 PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BDB DUP2 PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3E PUSH1 0x25 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C49 DUP3 PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C6D DUP2 PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD0 PUSH1 0x23 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDB DUP3 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFF DUP2 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D40 DUP3 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4B DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D5E JUMPI PUSH2 0x1D5D PUSH2 0x1D06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 DUP3 PUSH2 0x17CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7F DUP4 PUSH2 0x17CD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1DB4 JUMPI PUSH2 0x1DB3 PUSH2 0x1D06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF5 PUSH1 0x1B DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E00 DUP3 PUSH2 0x1DBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E24 DUP2 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 PUSH1 0x21 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E92 DUP3 PUSH2 0x1E2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB6 DUP2 PUSH2 0x1E7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF3 PUSH1 0x1F DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFE DUP3 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F22 DUP2 PUSH2 0x1EE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F85 PUSH1 0x26 DUP4 PUSH2 0x16BA JUMP JUMPDEST SWAP2 POP PUSH2 0x1F90 DUP3 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB4 DUP2 PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 SWAP8 0x1E LT SLOAD ADDRESS 0xAA PUSH26 0xEF212C1F1A25D1FB7E94953D00F11ECCF9FC531AA17B9540F464 PUSH20 0x6F6C634300080900330000000000000000000000 ",
							"sourceMap": "12279:9186:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13407:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14594:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13556:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15219:439;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13105:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12532:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16066:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17675:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13711:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11496:140;;;:::i;:::-;;12953:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10854:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13255:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17452:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16851:383;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14035:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12561:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12589:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14280:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11791:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13407:85;13446:13;13479:5;13472:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13407:85;:::o;14594:154::-;14662:4;14679:39;14688:12;:10;:12::i;:::-;14702:7;14711:6;14679:8;:39::i;:::-;14736:4;14729:11;;14594:154;;;;:::o;13556:93::-;13602:7;13629:12;;13622:19;;13556:93;:::o;15219:439::-;15344:4;15361:36;15371:6;15379:9;15390:6;15361:9;:36::i;:::-;15408:220;15431:6;15452:12;:10;:12::i;:::-;15479:138;15535:6;15479:138;;;;;;;;;;;;;;;;;:11;:19;15491:6;15479:19;;;;;;;;;;;;;;;:33;15499:12;:10;:12::i;:::-;15479:33;;;;;;;;;;;;;;;;:37;;:138;;;;;:::i;:::-;15408:8;:220::i;:::-;15646:4;15639:11;;15219:439;;;;;:::o;13105:85::-;13148:5;13173:9;;;;;;;;;;;13166:16;;13105:85;:::o;12532:22::-;;;;;;;;;;;;;:::o;16066:283::-;16164:4;16186:133;16209:12;:10;:12::i;:::-;16236:7;16258:50;16297:10;16258:11;:25;16270:12;:10;:12::i;:::-;16258:25;;;;;;;;;;;;;;;:34;16284:7;16258:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;16186:8;:133::i;:::-;16337:4;16330:11;;16066:283;;;;:::o;17675:120::-;17721:4;17738:27;17744:12;:10;:12::i;:::-;17758:6;17738:5;:27::i;:::-;17783:4;17776:11;;17675:120;;;:::o;13711:112::-;13770:7;13797:9;:18;13807:7;13797:18;;;;;;;;;;;;;;;;13790:25;;13711:112;;;:::o;11496:140::-;11076:12;:10;:12::i;:::-;11066:22;;:6;;;;;;;;;;:22;;;11058:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;11595:1:::1;11558:40;;11579:6;::::0;::::1;;;;;;;;11558:40;;;;;;;;;;;;11626:1;11609:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;11496:140::o:0;12953:85::-;12996:7;13023;:5;:7::i;:::-;13016:14;;12953:85;:::o;10854:79::-;10892:7;10919:6;;;;;;;;;;;10912:13;;10854:79;:::o;13255:89::-;13296:13;13329:7;13322:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13255:89;:::o;17452:130::-;17508:4;11076:12;:10;:12::i;:::-;11066:22;;:6;;;;;;;;;;:22;;;11058:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;17525:27:::1;17531:12;:10;:12::i;:::-;17545:6;17525:5;:27::i;:::-;17570:4;17563:11;;17452:130:::0;;;:::o;16851:383::-;16954:4;16976:228;16999:12;:10;:12::i;:::-;17026:7;17048:145;17105:15;17048:145;;;;;;;;;;;;;;;;;:11;:25;17060:12;:10;:12::i;:::-;17048:25;;;;;;;;;;;;;;;:34;17074:7;17048:34;;;;;;;;;;;;;;;;:38;;:145;;;;;:::i;:::-;16976:8;:228::i;:::-;17222:4;17215:11;;16851:383;;;;:::o;14035:183::-;14124:4;14146:42;14156:12;:10;:12::i;:::-;14170:9;14181:6;14146:9;:42::i;:::-;14206:4;14199:11;;14035:183;;;;:::o;12561:21::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12589:19::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14280:168::-;14381:7;14413:11;:18;14425:5;14413:18;;;;;;;;;;;;;;;:27;14432:7;14413:27;;;;;;;;;;;;;;;;14406:34;;14280:168;;;;:::o;11791:109::-;11076:12;:10;:12::i;:::-;11066:22;;:6;;;;;;;;;;:22;;;11058:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;11864:28:::1;11883:8;11864:18;:28::i;:::-;11791:109:::0;:::o;4079:107::-;4124:15;4167:10;4152:26;;4079:107;:::o;20573:372::-;20718:1;20701:19;;:5;:19;;;;20693:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20799:1;20780:21;;:7;:21;;;;20772:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20883:6;20853:11;:18;20865:5;20853:18;;;;;;;;;;;;;;;:27;20872:7;20853:27;;;;;;;;;;;;;;;:36;;;;20921:7;20905:32;;20914:5;20905:32;;;20930:6;20905:32;;;;;;:::i;:::-;;;;;;;;20573:372;;;:::o;18285:542::-;18435:1;18417:20;;:6;:20;;;;18409:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;18519:1;18498:23;;:9;:23;;;;18490:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;18594:108;18630:6;18594:108;;;;;;;;;;;;;;;;;:9;:17;18604:6;18594:17;;;;;;;;;;;;;;;;:21;;:108;;;;;:::i;:::-;18574:9;:17;18584:6;18574:17;;;;;;;;;;;;;;;:128;;;;18736:32;18761:6;18736:9;:20;18746:9;18736:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;18713:9;:20;18723:9;18713:20;;;;;;;;;;;;;;;:55;;;;18801:9;18784:35;;18793:6;18784:35;;;18812:6;18784:35;;;;;;:::i;:::-;;;;;;;;18285:542;;;:::o;6145:226::-;6265:7;6298:1;6293;:6;;6301:12;6285:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6325:9;6341:1;6337;:5;;;;:::i;:::-;6325:17;;6362:1;6355:8;;;6145:226;;;;;:::o;5258:181::-;5316:7;5336:9;5352:1;5348;:5;;;;:::i;:::-;5336:17;;5377:1;5372;:6;;5364:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;5430:1;5423:8;;;5258:181;;;;:::o;19748:385::-;19843:1;19824:21;;:7;:21;;;;19816:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;19917:105;19954:6;19917:105;;;;;;;;;;;;;;;;;:9;:18;19927:7;19917:18;;;;;;;;;;;;;;;;:22;;:105;;;;;:::i;:::-;19896:9;:18;19906:7;19896:18;;;;;;;;;;;;;;;:126;;;;20048:24;20065:6;20048:12;;:16;;:24;;;;:::i;:::-;20033:12;:39;;;;20114:1;20088:37;;20097:7;20088:37;;;20118:6;20088:37;;;;;;:::i;:::-;;;;;;;;19748:385;;:::o;19108:308::-;19203:1;19184:21;;:7;:21;;;;19176:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;19269:24;19286:6;19269:12;;:16;;:24;;;;:::i;:::-;19254:12;:39;;;;19325:30;19348:6;19325:9;:18;19335:7;19325:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;19304:9;:18;19314:7;19304:18;;;;;;;;;;;;;;;:51;;;;19392:7;19371:37;;19388:1;19371:37;;;19401:6;19371:37;;;;;;:::i;:::-;;;;;;;;19108:308;;:::o;12006:266::-;12114:1;12094:22;;:8;:22;;;;12072:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;12227:8;12198:38;;12219:6;;;;;;;;;;12198:38;;;;;;;;;;;;12256:8;12247:6;;:17;;;;;;;;;;;;;;;;;;12006:266;:::o;5714:136::-;5772:7;5799:43;5803:1;5806;5799:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;5792:50;;5714:136;;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:::-;5295:6;5344:2;5332:9;5323:7;5319:23;5315:32;5312:119;;;5350:79;;:::i;:::-;5312:119;5470:1;5495:53;5540:7;5531:6;5520:9;5516:22;5495:53;:::i;:::-;5485:63;;5441:117;5236:329;;;;:::o;5571:118::-;5658:24;5676:5;5658:24;:::i;:::-;5653:3;5646:37;5571:118;;:::o;5695:222::-;5788:4;5826:2;5815:9;5811:18;5803:26;;5839:71;5907:1;5896:9;5892:17;5883:6;5839:71;:::i;:::-;5695:222;;;;:::o;5923:474::-;5991:6;5999;6048:2;6036:9;6027:7;6023:23;6019:32;6016:119;;;6054:79;;:::i;:::-;6016:119;6174:1;6199:53;6244:7;6235:6;6224:9;6220:22;6199:53;:::i;:::-;6189:63;;6145:117;6301:2;6327:53;6372:7;6363:6;6352:9;6348:22;6327:53;:::i;:::-;6317:63;;6272:118;5923:474;;;;;:::o;6403:180::-;6451:77;6448:1;6441:88;6548:4;6545:1;6538:15;6572:4;6569:1;6562:15;6589:320;6633:6;6670:1;6664:4;6660:12;6650:22;;6717:1;6711:4;6707:12;6738:18;6728:81;;6794:4;6786:6;6782:17;6772:27;;6728:81;6856:2;6848:6;6845:14;6825:18;6822:38;6819:84;;;6875:18;;:::i;:::-;6819:84;6640:269;6589:320;;;:::o;6915:182::-;7055:34;7051:1;7043:6;7039:14;7032:58;6915:182;:::o;7103:366::-;7245:3;7266:67;7330:2;7325:3;7266:67;:::i;:::-;7259:74;;7342:93;7431:3;7342:93;:::i;:::-;7460:2;7455:3;7451:12;7444:19;;7103:366;;;:::o;7475:419::-;7641:4;7679:2;7668:9;7664:18;7656:26;;7728:9;7722:4;7718:20;7714:1;7703:9;7699:17;7692:47;7756:131;7882:4;7756:131;:::i;:::-;7748:139;;7475:419;;;:::o;7900:223::-;8040:34;8036:1;8028:6;8024:14;8017:58;8109:6;8104:2;8096:6;8092:15;8085:31;7900:223;:::o;8129:366::-;8271:3;8292:67;8356:2;8351:3;8292:67;:::i;:::-;8285:74;;8368:93;8457:3;8368:93;:::i;:::-;8486:2;8481:3;8477:12;8470:19;;8129:366;;;:::o;8501:419::-;8667:4;8705:2;8694:9;8690:18;8682:26;;8754:9;8748:4;8744:20;8740:1;8729:9;8725:17;8718:47;8782:131;8908:4;8782:131;:::i;:::-;8774:139;;8501:419;;;:::o;8926:221::-;9066:34;9062:1;9054:6;9050:14;9043:58;9135:4;9130:2;9122:6;9118:15;9111:29;8926:221;:::o;9153:366::-;9295:3;9316:67;9380:2;9375:3;9316:67;:::i;:::-;9309:74;;9392:93;9481:3;9392:93;:::i;:::-;9510:2;9505:3;9501:12;9494:19;;9153:366;;;:::o;9525:419::-;9691:4;9729:2;9718:9;9714:18;9706:26;;9778:9;9772:4;9768:20;9764:1;9753:9;9749:17;9742:47;9806:131;9932:4;9806:131;:::i;:::-;9798:139;;9525:419;;;:::o;9950:224::-;10090:34;10086:1;10078:6;10074:14;10067:58;10159:7;10154:2;10146:6;10142:15;10135:32;9950:224;:::o;10180:366::-;10322:3;10343:67;10407:2;10402:3;10343:67;:::i;:::-;10336:74;;10419:93;10508:3;10419:93;:::i;:::-;10537:2;10532:3;10528:12;10521:19;;10180:366;;;:::o;10552:419::-;10718:4;10756:2;10745:9;10741:18;10733:26;;10805:9;10799:4;10795:20;10791:1;10780:9;10776:17;10769:47;10833:131;10959:4;10833:131;:::i;:::-;10825:139;;10552:419;;;:::o;10977:222::-;11117:34;11113:1;11105:6;11101:14;11094:58;11186:5;11181:2;11173:6;11169:15;11162:30;10977:222;:::o;11205:366::-;11347:3;11368:67;11432:2;11427:3;11368:67;:::i;:::-;11361:74;;11444:93;11533:3;11444:93;:::i;:::-;11562:2;11557:3;11553:12;11546:19;;11205:366;;;:::o;11577:419::-;11743:4;11781:2;11770:9;11766:18;11758:26;;11830:9;11824:4;11820:20;11816:1;11805:9;11801:17;11794:47;11858:131;11984:4;11858:131;:::i;:::-;11850:139;;11577:419;;;:::o;12002:180::-;12050:77;12047:1;12040:88;12147:4;12144:1;12137:15;12171:4;12168:1;12161:15;12188:191;12228:4;12248:20;12266:1;12248:20;:::i;:::-;12243:25;;12282:20;12300:1;12282:20;:::i;:::-;12277:25;;12321:1;12318;12315:8;12312:34;;;12326:18;;:::i;:::-;12312:34;12371:1;12368;12364:9;12356:17;;12188:191;;;;:::o;12385:305::-;12425:3;12444:20;12462:1;12444:20;:::i;:::-;12439:25;;12478:20;12496:1;12478:20;:::i;:::-;12473:25;;12632:1;12564:66;12560:74;12557:1;12554:81;12551:107;;;12638:18;;:::i;:::-;12551:107;12682:1;12679;12675:9;12668:16;;12385:305;;;;:::o;12696:177::-;12836:29;12832:1;12824:6;12820:14;12813:53;12696:177;:::o;12879:366::-;13021:3;13042:67;13106:2;13101:3;13042:67;:::i;:::-;13035:74;;13118:93;13207:3;13118:93;:::i;:::-;13236:2;13231:3;13227:12;13220:19;;12879:366;;;:::o;13251:419::-;13417:4;13455:2;13444:9;13440:18;13432:26;;13504:9;13498:4;13494:20;13490:1;13479:9;13475:17;13468:47;13532:131;13658:4;13532:131;:::i;:::-;13524:139;;13251:419;;;:::o;13676:220::-;13816:34;13812:1;13804:6;13800:14;13793:58;13885:3;13880:2;13872:6;13868:15;13861:28;13676:220;:::o;13902:366::-;14044:3;14065:67;14129:2;14124:3;14065:67;:::i;:::-;14058:74;;14141:93;14230:3;14141:93;:::i;:::-;14259:2;14254:3;14250:12;14243:19;;13902:366;;;:::o;14274:419::-;14440:4;14478:2;14467:9;14463:18;14455:26;;14527:9;14521:4;14517:20;14513:1;14502:9;14498:17;14491:47;14555:131;14681:4;14555:131;:::i;:::-;14547:139;;14274:419;;;:::o;14699:181::-;14839:33;14835:1;14827:6;14823:14;14816:57;14699:181;:::o;14886:366::-;15028:3;15049:67;15113:2;15108:3;15049:67;:::i;:::-;15042:74;;15125:93;15214:3;15125:93;:::i;:::-;15243:2;15238:3;15234:12;15227:19;;14886:366;;;:::o;15258:419::-;15424:4;15462:2;15451:9;15447:18;15439:26;;15511:9;15505:4;15501:20;15497:1;15486:9;15482:17;15475:47;15539:131;15665:4;15539:131;:::i;:::-;15531:139;;15258:419;;;:::o;15683:225::-;15823:34;15819:1;15811:6;15807:14;15800:58;15892:8;15887:2;15879:6;15875:15;15868:33;15683:225;:::o;15914:366::-;16056:3;16077:67;16141:2;16136:3;16077:67;:::i;:::-;16070:74;;16153:93;16242:3;16153:93;:::i;:::-;16271:2;16266:3;16262:12;16255:19;;15914:366;;;:::o;16286:419::-;16452:4;16490:2;16479:9;16475:18;16467:26;;16539:9;16533:4;16529:20;16525:1;16514:9;16510:17;16503:47;16567:131;16693:4;16567:131;:::i;:::-;16559:139;;16286:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1665200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "2494",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"burn(uint256)": "infinite",
								"decimals()": "2591",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2580",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30402",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30779"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12617,
									"end": 12885,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10645,
									"end": 10662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 10665,
									"end": 10675,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 10665,
									"end": 10675,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10665,
									"end": 10675,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10645,
									"end": 10677,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10645,
									"end": 10677,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10697,
									"end": 10706,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10694,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10688,
									"end": 10694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10755,
									"end": 10764,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10751,
									"end": 10752,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 10634,
									"end": 10773,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "PUSH",
									"source": 0,
									"value": "4255534420546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12647,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12642,
									"end": 12662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "PUSH",
									"source": 0,
									"value": "4255534400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12680,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12673,
									"end": 12689,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12712,
									"end": 12714,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12700,
									"end": 12709,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12700,
									"end": 12709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12700,
									"end": 12714,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12740,
									"end": 12766,
									"name": "PUSH",
									"source": 0,
									"value": "19A4815E0AD0C67F000000"
								},
								{
									"begin": 12725,
									"end": 12737,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12725,
									"end": 12766,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12725,
									"end": 12766,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12725,
									"end": 12766,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12725,
									"end": 12766,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12801,
									"end": 12813,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12801,
									"end": 12813,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12786,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12787,
									"end": 12797,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12777,
									"end": 12798,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12813,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12777,
									"end": 12813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12862,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12848,
									"end": 12849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 12864,
									"end": 12876,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12864,
									"end": 12876,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12831,
									"end": 12877,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4079,
									"end": 4186,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 4079,
									"end": 4186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4139,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4167,
									"end": 4177,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4152,
									"end": 4178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4152,
									"end": 4178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4079,
									"end": 4186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4079,
									"end": 4186,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 90,
									"end": 208,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 90,
									"end": 208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 177,
									"end": 201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 195,
									"end": 200,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 177,
									"end": 201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 177,
									"end": 201,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 177,
									"end": 201,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 177,
									"end": 201,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 172,
									"end": 175,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 165,
									"end": 202,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 90,
									"end": 208,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 90,
									"end": 208,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 90,
									"end": 208,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 214,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 214,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 307,
									"end": 311,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 330,
									"end": 348,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 322,
									"end": 348,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 322,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 358,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 426,
									"end": 427,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 424,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 411,
									"end": 428,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 402,
									"end": 408,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 358,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 358,
									"end": 429,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 358,
									"end": 429,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 358,
									"end": 429,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 214,
									"end": 436,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 214,
									"end": 436,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 436,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 214,
									"end": 436,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 214,
									"end": 436,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 442,
									"end": 622,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 442,
									"end": 622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 490,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 487,
									"end": 488,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 480,
									"end": 568,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 587,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 584,
									"end": 585,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 577,
									"end": 592,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 611,
									"end": 615,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 608,
									"end": 609,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 616,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 628,
									"end": 948,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 628,
									"end": 948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 672,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 709,
									"end": 710,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 703,
									"end": 707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 699,
									"end": 711,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 689,
									"end": 711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 756,
									"end": 757,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 754,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 746,
									"end": 758,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 777,
									"end": 795,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 767,
									"end": 848,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 767,
									"end": 848,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 825,
									"end": 831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 821,
									"end": 838,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 811,
									"end": 838,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 811,
									"end": 838,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 767,
									"end": 848,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 767,
									"end": 848,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 895,
									"end": 897,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 887,
									"end": 893,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 884,
									"end": 898,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 864,
									"end": 882,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 861,
									"end": 899,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 858,
									"end": 942,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 858,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 858,
									"end": 942,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 858,
									"end": 942,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 858,
									"end": 942,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 679,
									"end": 948,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 948,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 948,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 948,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 948,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12279,
									"end": 21465,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220971e105430aa79ef212c1f1a25d1fb7e94953d00f11eccf9fc531aa17b9540f464736f6c63430008090033",
									".code": [
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "B09F1266"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "D28D8852"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "32424AA3"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "32424AA3"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 21465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13459,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13479,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13407,
											"end": 13492,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14679,
											"end": 14718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14688,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14688,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14688,
											"end": 14700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14688,
											"end": 14700,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 14688,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14702,
											"end": 14709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14711,
											"end": 14717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14679,
											"end": 14687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14679,
											"end": 14718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14679,
											"end": 14718,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14679,
											"end": 14718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14736,
											"end": 14740,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14729,
											"end": 14740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14729,
											"end": 14740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14748,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13602,
											"end": 13609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13629,
											"end": 13641,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13629,
											"end": 13641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13622,
											"end": 13641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13622,
											"end": 13641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13556,
											"end": 13649,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15344,
											"end": 15348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15361,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15371,
											"end": 15377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15388,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15390,
											"end": 15396,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15361,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15361,
											"end": 15397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15361,
											"end": 15397,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15361,
											"end": 15397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15431,
											"end": 15437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15452,
											"end": 15464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15452,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15452,
											"end": 15464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15452,
											"end": 15464,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15452,
											"end": 15464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15535,
											"end": 15541,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15490,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15491,
											"end": 15497,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15479,
											"end": 15498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15499,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 15499,
											"end": 15509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15499,
											"end": 15511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15499,
											"end": 15511,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 15499,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 15479,
											"end": 15516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15479,
											"end": 15617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15408,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15408,
											"end": 15628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15408,
											"end": 15628,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15408,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15650,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15219,
											"end": 15658,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13148,
											"end": 13153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13173,
											"end": 13182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13190,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12532,
											"end": 12554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16164,
											"end": 16168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16186,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 16209,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 16209,
											"end": 16219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16209,
											"end": 16221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16209,
											"end": 16221,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 16209,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16236,
											"end": 16243,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16297,
											"end": 16307,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16269,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16270,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16270,
											"end": 16280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16270,
											"end": 16282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16270,
											"end": 16282,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16270,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16258,
											"end": 16283,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16284,
											"end": 16291,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16258,
											"end": 16296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16258,
											"end": 16308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16258,
											"end": 16308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16258,
											"end": 16308,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16258,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16186,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16186,
											"end": 16319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16186,
											"end": 16319,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 16186,
											"end": 16319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16337,
											"end": 16341,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16330,
											"end": 16341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16330,
											"end": 16341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16066,
											"end": 16349,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17721,
											"end": 17725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17738,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17744,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17744,
											"end": 17754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 17744,
											"end": 17756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17744,
											"end": 17756,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17744,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17758,
											"end": 17764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17738,
											"end": 17743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17738,
											"end": 17765,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17738,
											"end": 17765,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17738,
											"end": 17765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17783,
											"end": 17787,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17776,
											"end": 17787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17776,
											"end": 17787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17675,
											"end": 17795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13770,
											"end": 13777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13797,
											"end": 13806,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13807,
											"end": 13814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13790,
											"end": 13815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11076,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12996,
											"end": 13003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13023,
											"end": 13030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13023,
											"end": 13028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13023,
											"end": 13030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13023,
											"end": 13030,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13023,
											"end": 13030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13016,
											"end": 13030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13016,
											"end": 13030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 13038,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10892,
											"end": 10899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13309,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13329,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13344,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17508,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11076,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17525,
											"end": 17552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17531,
											"end": 17543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17531,
											"end": 17541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 17531,
											"end": 17543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17531,
											"end": 17543,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17531,
											"end": 17543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17545,
											"end": 17551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17525,
											"end": 17530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 17525,
											"end": 17552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17525,
											"end": 17552,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17525,
											"end": 17552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17570,
											"end": 17574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17563,
											"end": 17574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17452,
											"end": 17582,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16954,
											"end": 16958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16976,
											"end": 17204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 16999,
											"end": 17011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 16999,
											"end": 17009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16999,
											"end": 17011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16999,
											"end": 17011,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 16999,
											"end": 17011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17026,
											"end": 17033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 17105,
											"end": 17120,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17060,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17060,
											"end": 17070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 17060,
											"end": 17072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17060,
											"end": 17072,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 17060,
											"end": 17072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17074,
											"end": 17081,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17048,
											"end": 17086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 17048,
											"end": 17193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16976,
											"end": 16984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16976,
											"end": 17204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16976,
											"end": 17204,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 16976,
											"end": 17204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17226,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17215,
											"end": 17226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17215,
											"end": 17226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 17234,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14124,
											"end": 14128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14146,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 14156,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14156,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 14156,
											"end": 14168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14156,
											"end": 14168,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14156,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14170,
											"end": 14179,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14181,
											"end": 14187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14146,
											"end": 14188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14146,
											"end": 14188,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 14146,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14206,
											"end": 14210,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14199,
											"end": 14210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14199,
											"end": 14210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14218,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12582,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12589,
											"end": 12608,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14381,
											"end": 14388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14424,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14425,
											"end": 14430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14432,
											"end": 14439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14406,
											"end": 14440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14406,
											"end": 14440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14280,
											"end": 14448,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11076,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11883,
											"end": 11891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 11864,
											"end": 11892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11864,
											"end": 11892,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11864,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4079,
											"end": 4186,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4079,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4177,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4186,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20573,
											"end": 20945,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20573,
											"end": 20945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20718,
											"end": 20719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20701,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20701,
											"end": 20720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20701,
											"end": 20720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20693,
											"end": 20761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20799,
											"end": 20800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20780,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20780,
											"end": 20801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20780,
											"end": 20787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20780,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20780,
											"end": 20801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20780,
											"end": 20801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20780,
											"end": 20801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 20772,
											"end": 20840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 20889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20864,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20865,
											"end": 20870,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20872,
											"end": 20879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20853,
											"end": 20880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20889,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20921,
											"end": 20928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20914,
											"end": 20919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20930,
											"end": 20936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20573,
											"end": 20945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20573,
											"end": 20945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20573,
											"end": 20945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20573,
											"end": 20945,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18285,
											"end": 18827,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 18285,
											"end": 18827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18435,
											"end": 18436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18417,
											"end": 18437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18417,
											"end": 18437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18423,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18417,
											"end": 18437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18437,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 18409,
											"end": 18479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18519,
											"end": 18520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18498,
											"end": 18521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18498,
											"end": 18521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18498,
											"end": 18521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18521,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18498,
											"end": 18521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 18490,
											"end": 18561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18630,
											"end": 18636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18604,
											"end": 18610,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 18594,
											"end": 18615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18594,
											"end": 18702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18583,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18584,
											"end": 18590,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18574,
											"end": 18591,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18702,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18574,
											"end": 18702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 18761,
											"end": 18767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18745,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18746,
											"end": 18755,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18736,
											"end": 18760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18736,
											"end": 18768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18736,
											"end": 18768,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 18736,
											"end": 18768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18723,
											"end": 18732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18713,
											"end": 18733,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18768,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18713,
											"end": 18768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18801,
											"end": 18810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18793,
											"end": 18799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18812,
											"end": 18818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18819,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18285,
											"end": 18827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18285,
											"end": 18827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18285,
											"end": 18827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18285,
											"end": 18827,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6145,
											"end": 6371,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6145,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6265,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6293,
											"end": 6299,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6293,
											"end": 6299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6301,
											"end": 6313,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6285,
											"end": 6314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6325,
											"end": 6342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6325,
											"end": 6342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6362,
											"end": 6363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 6363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6371,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6371,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5258,
											"end": 5439,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5258,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19748,
											"end": 20133,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 19748,
											"end": 20133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19843,
											"end": 19844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19824,
											"end": 19845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19824,
											"end": 19845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19824,
											"end": 19831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19824,
											"end": 19845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19824,
											"end": 19845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19824,
											"end": 19845,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19824,
											"end": 19845,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 19816,
											"end": 19883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 19954,
											"end": 19960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "PUSH data",
											"source": 0,
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19926,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19927,
											"end": 19934,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 19917,
											"end": 19939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 19917,
											"end": 20022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19905,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19906,
											"end": 19913,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19896,
											"end": 19914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 20022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 20022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 20022,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 20022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20048,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 20065,
											"end": 20071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20048,
											"end": 20060,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20048,
											"end": 20060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20048,
											"end": 20064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20048,
											"end": 20064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20048,
											"end": 20072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20048,
											"end": 20072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20048,
											"end": 20072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20048,
											"end": 20072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20048,
											"end": 20072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20048,
											"end": 20072,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 20048,
											"end": 20072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20033,
											"end": 20045,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20033,
											"end": 20072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20033,
											"end": 20072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20033,
											"end": 20072,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20033,
											"end": 20072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20097,
											"end": 20104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20118,
											"end": 20124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20125,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19748,
											"end": 20133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19748,
											"end": 20133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19748,
											"end": 20133,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19108,
											"end": 19416,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 19108,
											"end": 19416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19203,
											"end": 19204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19184,
											"end": 19205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19184,
											"end": 19205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19184,
											"end": 19205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19205,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19184,
											"end": 19205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 19176,
											"end": 19241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 19286,
											"end": 19292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19281,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19269,
											"end": 19281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 19269,
											"end": 19285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19269,
											"end": 19293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19269,
											"end": 19293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19269,
											"end": 19293,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 19269,
											"end": 19293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19254,
											"end": 19266,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19254,
											"end": 19293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19254,
											"end": 19293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19254,
											"end": 19293,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19254,
											"end": 19293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 19348,
											"end": 19354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19334,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19335,
											"end": 19342,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 19325,
											"end": 19347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19325,
											"end": 19355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19325,
											"end": 19355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19325,
											"end": 19355,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 19325,
											"end": 19355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19313,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19314,
											"end": 19321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19304,
											"end": 19322,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19304,
											"end": 19355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19388,
											"end": 19389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19401,
											"end": 19407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19371,
											"end": 19408,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19416,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12006,
											"end": 12272,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 12006,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12114,
											"end": 12115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12247,
											"end": 12253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12006,
											"end": 12272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12006,
											"end": 12272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5714,
											"end": 5850,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 5714,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5772,
											"end": 5779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5806,
											"end": 5807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 5842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 5842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5850,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 386,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 455,
											"end": 466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 449,
											"end": 467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 429,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 493,
											"end": 494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 503,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 562,
											"end": 565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 558,
											"end": 574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 588,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 336,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 672,
											"end": 686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 658,
											"end": 696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 872,
											"end": 950,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 872,
											"end": 950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1002,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 981,
											"end": 997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2072,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2412,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3150,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3151,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 4184,
											"end": 4191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 4662,
											"end": 4667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5106,
											"end": 5223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5236,
											"end": 5565,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5236,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5332,
											"end": 5341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5330,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5342,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5347,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5431,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 5312,
											"end": 5431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 5350,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5350,
											"end": 5429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5429,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 5350,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 5312,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5540,
											"end": 5547,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5529,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5495,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5548,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5565,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5571,
											"end": 5689,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 5571,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 5676,
											"end": 5681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 5658,
											"end": 5682,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5658,
											"end": 5682,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 5658,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5695,
											"end": 5917,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5695,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5803,
											"end": 5829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5803,
											"end": 5829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5907,
											"end": 5908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 5839,
											"end": 5910,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5839,
											"end": 5910,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5839,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5917,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 5997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6034,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6046,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6051,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6054,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 6016,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6244,
											"end": 6251,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6235,
											"end": 6241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6233,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 6372,
											"end": 6379,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6363,
											"end": 6369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6352,
											"end": 6361,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 6327,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 6397,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6403,
											"end": 6583,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6403,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6528,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6448,
											"end": 6449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6441,
											"end": 6529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6552,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6538,
											"end": 6553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6576,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6569,
											"end": 6570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6577,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6671,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6672,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 6728,
											"end": 6809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6798,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6786,
											"end": 6792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6799,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6809,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 6728,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6856,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6859,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6860,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6819,
											"end": 6903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6903,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6819,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6909,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7051,
											"end": 7052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7097,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7325,
											"end": 7328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7266,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7431,
											"end": 7434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7342,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7668,
											"end": 7677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7738,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 7756,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7894,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7900,
											"end": 8123,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 7900,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8074,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8024,
											"end": 8038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8115,
											"name": "PUSH",
											"source": 1,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8104,
											"end": 8106,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 8123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 8123,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8271,
											"end": 8274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 8356,
											"end": 8358,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8351,
											"end": 8354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 8292,
											"end": 8359,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8292,
											"end": 8359,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 8292,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8368,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 8457,
											"end": 8460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8368,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 8368,
											"end": 8461,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8368,
											"end": 8461,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 8368,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8488,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8470,
											"end": 8489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8470,
											"end": 8489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8495,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8694,
											"end": 8703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8690,
											"end": 8708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8744,
											"end": 8764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8725,
											"end": 8742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8718,
											"end": 8765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8782,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 8908,
											"end": 8912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8782,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 8782,
											"end": 8913,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8782,
											"end": 8913,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 8782,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8920,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8926,
											"end": 9147,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 8926,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9100,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9062,
											"end": 9063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9050,
											"end": 9064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9043,
											"end": 9101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9139,
											"name": "PUSH",
											"source": 1,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9130,
											"end": 9132,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9122,
											"end": 9128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9111,
											"end": 9140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8926,
											"end": 9147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8926,
											"end": 9147,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9153,
											"end": 9519,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 9153,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9295,
											"end": 9298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9316,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 9380,
											"end": 9382,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9375,
											"end": 9378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9316,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9316,
											"end": 9383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9316,
											"end": 9383,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 9316,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 9383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 9383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 9481,
											"end": 9484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 9392,
											"end": 9485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9392,
											"end": 9485,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 9392,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9505,
											"end": 9508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9501,
											"end": 9513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9519,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9525,
											"end": 9944,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 9525,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9729,
											"end": 9731,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9718,
											"end": 9727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9714,
											"end": 9732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9706,
											"end": 9732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9706,
											"end": 9732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9778,
											"end": 9787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9753,
											"end": 9762,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9742,
											"end": 9789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9932,
											"end": 9936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 9806,
											"end": 9937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9806,
											"end": 9937,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9806,
											"end": 9937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9944,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9950,
											"end": 10174,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 9950,
											"end": 10174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10090,
											"end": 10124,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10086,
											"end": 10087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10154,
											"end": 10156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10146,
											"end": 10152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10135,
											"end": 10167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 10174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 10174,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10322,
											"end": 10325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10343,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 10407,
											"end": 10409,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 10402,
											"end": 10405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10343,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10343,
											"end": 10410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10343,
											"end": 10410,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 10343,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10336,
											"end": 10410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 10508,
											"end": 10511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 10419,
											"end": 10512,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10419,
											"end": 10512,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 10419,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10537,
											"end": 10539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10532,
											"end": 10535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10521,
											"end": 10540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10521,
											"end": 10540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10546,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10756,
											"end": 10758,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10745,
											"end": 10754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10733,
											"end": 10759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10733,
											"end": 10759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10805,
											"end": 10814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10789,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10776,
											"end": 10793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10769,
											"end": 10816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 10833,
											"end": 10964,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10833,
											"end": 10964,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 10833,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10971,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10977,
											"end": 11199,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 10977,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11117,
											"end": 11151,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11113,
											"end": 11114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11101,
											"end": 11115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11094,
											"end": 11152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11186,
											"end": 11191,
											"name": "PUSH",
											"source": 1,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11181,
											"end": 11183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11169,
											"end": 11184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10977,
											"end": 11199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10977,
											"end": 11199,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11205,
											"end": 11571,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 11205,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11347,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 11432,
											"end": 11434,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 11427,
											"end": 11430,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11368,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 11368,
											"end": 11435,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11368,
											"end": 11435,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 11368,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11361,
											"end": 11435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11361,
											"end": 11435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11444,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 11533,
											"end": 11536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11444,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 11444,
											"end": 11537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11444,
											"end": 11537,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 11444,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11562,
											"end": 11564,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11557,
											"end": 11560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11553,
											"end": 11565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11546,
											"end": 11565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11546,
											"end": 11565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11571,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11571,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11577,
											"end": 11996,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 11577,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 11747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11781,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11770,
											"end": 11779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11766,
											"end": 11784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11824,
											"end": 11828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11816,
											"end": 11817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 11814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11801,
											"end": 11818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11858,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 11984,
											"end": 11988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11858,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 11858,
											"end": 11989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11858,
											"end": 11989,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 11858,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11577,
											"end": 11996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11577,
											"end": 11996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11577,
											"end": 11996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11577,
											"end": 11996,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12002,
											"end": 12182,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 12002,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12050,
											"end": 12127,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12047,
											"end": 12048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12151,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 12144,
											"end": 12145,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12137,
											"end": 12152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12171,
											"end": 12175,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12168,
											"end": 12169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12161,
											"end": 12176,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12188,
											"end": 12379,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 12188,
											"end": 12379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12248,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 12266,
											"end": 12267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12248,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 12248,
											"end": 12268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12248,
											"end": 12268,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 12248,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12282,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 12300,
											"end": 12301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12282,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 12282,
											"end": 12302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12282,
											"end": 12302,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 12282,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12277,
											"end": 12302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12321,
											"end": 12322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12318,
											"end": 12319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12323,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 12312,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12326,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 12326,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 12326,
											"end": 12344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12326,
											"end": 12344,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 12326,
											"end": 12344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12346,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 12312,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12371,
											"end": 12372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12364,
											"end": 12373,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12356,
											"end": 12373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12356,
											"end": 12373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12188,
											"end": 12379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12188,
											"end": 12379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12188,
											"end": 12379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12188,
											"end": 12379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12188,
											"end": 12379,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12385,
											"end": 12690,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 12385,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12425,
											"end": 12428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12444,
											"end": 12464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 12462,
											"end": 12463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12444,
											"end": 12464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 12444,
											"end": 12464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12444,
											"end": 12464,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 12444,
											"end": 12464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12439,
											"end": 12464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12439,
											"end": 12464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12478,
											"end": 12498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 12496,
											"end": 12497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12478,
											"end": 12498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 12478,
											"end": 12498,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12478,
											"end": 12498,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 12478,
											"end": 12498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12473,
											"end": 12498,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12473,
											"end": 12498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12632,
											"end": 12633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12564,
											"end": 12630,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12560,
											"end": 12634,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12554,
											"end": 12635,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12658,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 12551,
											"end": 12658,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12638,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 12638,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 12638,
											"end": 12656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12638,
											"end": 12656,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 12638,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12658,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 12551,
											"end": 12658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12682,
											"end": 12683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12679,
											"end": 12680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12675,
											"end": 12684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12668,
											"end": 12684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12668,
											"end": 12684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12690,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12385,
											"end": 12690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12696,
											"end": 12873,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 12696,
											"end": 12873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 12865,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 12832,
											"end": 12833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12824,
											"end": 12830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12820,
											"end": 12834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12813,
											"end": 12866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12696,
											"end": 12873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12696,
											"end": 12873,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12879,
											"end": 13245,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 12879,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13021,
											"end": 13024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13042,
											"end": 13109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 13106,
											"end": 13108,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 13101,
											"end": 13104,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13042,
											"end": 13109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 13042,
											"end": 13109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13042,
											"end": 13109,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 13042,
											"end": 13109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13118,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 13207,
											"end": 13210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13118,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 13118,
											"end": 13211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13118,
											"end": 13211,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 13118,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13236,
											"end": 13238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13231,
											"end": 13234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13227,
											"end": 13239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 13245,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13251,
											"end": 13670,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 13251,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13417,
											"end": 13421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13455,
											"end": 13457,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13440,
											"end": 13458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13432,
											"end": 13458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13432,
											"end": 13458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13504,
											"end": 13513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13494,
											"end": 13514,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13490,
											"end": 13491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13479,
											"end": 13488,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13475,
											"end": 13492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13468,
											"end": 13515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 13658,
											"end": 13662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 13532,
											"end": 13663,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13532,
											"end": 13663,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 13532,
											"end": 13663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13524,
											"end": 13663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13524,
											"end": 13663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13251,
											"end": 13670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13251,
											"end": 13670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13251,
											"end": 13670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13251,
											"end": 13670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13676,
											"end": 13896,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 13676,
											"end": 13896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13850,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 13812,
											"end": 13813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13800,
											"end": 13814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13885,
											"end": 13888,
											"name": "PUSH",
											"source": 1,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13880,
											"end": 13882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13872,
											"end": 13878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 13883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13861,
											"end": 13889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13896,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14044,
											"end": 14047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 14129,
											"end": 14131,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 14124,
											"end": 14127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 14065,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14058,
											"end": 14132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14058,
											"end": 14132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 14230,
											"end": 14233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 14141,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14259,
											"end": 14261,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14254,
											"end": 14257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14243,
											"end": 14262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14243,
											"end": 14262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 14268,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14274,
											"end": 14693,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 14274,
											"end": 14693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14440,
											"end": 14444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14478,
											"end": 14480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14467,
											"end": 14476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14455,
											"end": 14481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14455,
											"end": 14481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14527,
											"end": 14536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14521,
											"end": 14525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14517,
											"end": 14537,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14513,
											"end": 14514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14502,
											"end": 14511,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14491,
											"end": 14538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14555,
											"end": 14686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 14681,
											"end": 14685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14555,
											"end": 14686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 14555,
											"end": 14686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14555,
											"end": 14686,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 14555,
											"end": 14686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14547,
											"end": 14686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14547,
											"end": 14686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14274,
											"end": 14693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14274,
											"end": 14693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14274,
											"end": 14693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14274,
											"end": 14693,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14699,
											"end": 14880,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 14699,
											"end": 14880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14839,
											"end": 14872,
											"name": "PUSH",
											"source": 1,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 14835,
											"end": 14836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14827,
											"end": 14833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14823,
											"end": 14837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14816,
											"end": 14873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14699,
											"end": 14880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14699,
											"end": 14880,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14886,
											"end": 15252,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 14886,
											"end": 15252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15028,
											"end": 15031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15049,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 15113,
											"end": 15115,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15108,
											"end": 15111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15049,
											"end": 15116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 15049,
											"end": 15116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15049,
											"end": 15116,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 15049,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15042,
											"end": 15116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15042,
											"end": 15116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15125,
											"end": 15218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 15214,
											"end": 15217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15125,
											"end": 15218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 15125,
											"end": 15218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15125,
											"end": 15218,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 15125,
											"end": 15218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15243,
											"end": 15245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15238,
											"end": 15241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15234,
											"end": 15246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15227,
											"end": 15246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15227,
											"end": 15246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14886,
											"end": 15252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14886,
											"end": 15252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14886,
											"end": 15252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14886,
											"end": 15252,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15258,
											"end": 15677,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 15258,
											"end": 15677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15424,
											"end": 15428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15462,
											"end": 15464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15451,
											"end": 15460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15439,
											"end": 15465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15439,
											"end": 15465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15511,
											"end": 15520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15505,
											"end": 15509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15501,
											"end": 15521,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15497,
											"end": 15498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15482,
											"end": 15499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15539,
											"end": 15670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 15665,
											"end": 15669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15539,
											"end": 15670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 15539,
											"end": 15670,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15539,
											"end": 15670,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 15539,
											"end": 15670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15531,
											"end": 15670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15531,
											"end": 15670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15677,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15683,
											"end": 15908,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 15683,
											"end": 15908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15823,
											"end": 15857,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15819,
											"end": 15820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15811,
											"end": 15817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15807,
											"end": 15821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15800,
											"end": 15858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15892,
											"end": 15900,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15887,
											"end": 15889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15879,
											"end": 15885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15875,
											"end": 15890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15683,
											"end": 15908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15683,
											"end": 15908,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15914,
											"end": 16280,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 15914,
											"end": 16280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16056,
											"end": 16059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16077,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 16141,
											"end": 16143,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 16136,
											"end": 16139,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16077,
											"end": 16144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 16077,
											"end": 16144,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16077,
											"end": 16144,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 16077,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16153,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 16242,
											"end": 16245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16153,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 16153,
											"end": 16246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16153,
											"end": 16246,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 16153,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16271,
											"end": 16273,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16266,
											"end": 16269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16262,
											"end": 16274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16255,
											"end": 16274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16255,
											"end": 16274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15914,
											"end": 16280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15914,
											"end": 16280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15914,
											"end": 16280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15914,
											"end": 16280,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16286,
											"end": 16705,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 16286,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16452,
											"end": 16456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16490,
											"end": 16492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16479,
											"end": 16488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16475,
											"end": 16493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16467,
											"end": 16493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16467,
											"end": 16493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16539,
											"end": 16548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16533,
											"end": 16537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16525,
											"end": 16526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16514,
											"end": 16523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16510,
											"end": 16527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16503,
											"end": 16550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16567,
											"end": 16698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 16693,
											"end": 16697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16567,
											"end": 16698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 16567,
											"end": 16698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16567,
											"end": 16698,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 16567,
											"end": 16698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16559,
											"end": 16698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16559,
											"end": 16698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16705,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mocks/BusdMock.sol\":\"BusdMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mocks/BusdMock.sol\":{\"keccak256\":\"0xe864718eb4020b1b7975b76556836aa00effe9d5de234994cce7c06f0b23efee\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://412de1e995b7975b5751f790fa43a1b9e19cb491142cf9e8cc513c8f827f1d7d\",\"dweb:/ipfs/QmNSe8MBL1B4oAaCyo9xeEuSe3WQzbLzRuqjPucetbSyN3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mocks/BusdMock.sol\":3875:4422  contract Context {... */\n  mstore(0x40, 0x80)\n    /* \"mocks/BusdMock.sol\":4055:4071  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"mocks/BusdMock.sol\":3875:4422  contract Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"mocks/BusdMock.sol\":3875:4422  contract Context {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ccbc9d1db63b5b66f5a4791d6255b549b5c684611d2fb8344cb19aea2bb856364736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212204ccbc9d1db63b5b66f5a4791d6255b549b5c684611d2fb8344cb19aea2bb856364736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xCB 0xC9 0xD1 0xDB PUSH4 0xB5B66F5A SELFBALANCE SWAP2 0xD6 0x25 JUMPDEST SLOAD SWAP12 0x5C PUSH9 0x4611D2FB8344CB19AE LOG2 0xBB DUP6 PUSH4 0x64736F6C PUSH4 0x43000809 STOP CALLER ",
							"sourceMap": "3875:547:0:-:0;;;4055:16;;;;;;;;;;3875:547;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212204ccbc9d1db63b5b66f5a4791d6255b549b5c684611d2fb8344cb19aea2bb856364736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xCB 0xC9 0xD1 0xDB PUSH4 0xB5B66F5A SELFBALANCE SWAP2 0xD6 0x25 JUMPDEST SLOAD SWAP12 0x5C PUSH9 0x4611D2FB8344CB19AE LOG2 0xBB DUP6 PUSH4 0x64736F6C PUSH4 0x43000809 STOP CALLER ",
							"sourceMap": "3875:547:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3875,
									"end": 4422,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3875,
									"end": 4422,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3875,
									"end": 4422,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4055,
									"end": 4071,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3875,
									"end": 4422,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3875,
									"end": 4422,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3875,
									"end": 4422,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3875,
									"end": 4422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3875,
									"end": 4422,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3875,
									"end": 4422,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3875,
									"end": 4422,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ccbc9d1db63b5b66f5a4791d6255b549b5c684611d2fb8344cb19aea2bb856364736f6c63430008090033",
									".code": [
										{
											"begin": 3875,
											"end": 4422,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3875,
											"end": 4422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3875,
											"end": 4422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 4422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4422,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mocks/BusdMock.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mocks/BusdMock.sol\":{\"keccak256\":\"0xe864718eb4020b1b7975b76556836aa00effe9d5de234994cce7c06f0b23efee\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://412de1e995b7975b5751f790fa43a1b9e19cb491142cf9e8cc513c8f827f1d7d\",\"dweb:/ipfs/QmNSe8MBL1B4oAaCyo9xeEuSe3WQzbLzRuqjPucetbSyN3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mocks/BusdMock.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mocks/BusdMock.sol\":{\"keccak256\":\"0xe864718eb4020b1b7975b76556836aa00effe9d5de234994cce7c06f0b23efee\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://412de1e995b7975b5751f790fa43a1b9e19cb491142cf9e8cc513c8f827f1d7d\",\"dweb:/ipfs/QmNSe8MBL1B4oAaCyo9xeEuSe3WQzbLzRuqjPucetbSyN3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mocks/BusdMock.sol\":10338:12275  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"mocks/BusdMock.sol\":10620:10773  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"mocks/BusdMock.sol\":10645:10662  address msgSender */\n  0x00\n    /* \"mocks/BusdMock.sol\":10665:10677  _msgSender() */\n  tag_6\n    /* \"mocks/BusdMock.sol\":10665:10675  _msgSender */\n  shl(0x20, tag_7)\n    /* \"mocks/BusdMock.sol\":10665:10677  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"mocks/BusdMock.sol\":10645:10677  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"mocks/BusdMock.sol\":10697:10706  msgSender */\n  dup1\n    /* \"mocks/BusdMock.sol\":10688:10694  _owner */\n  0x00\n  dup1\n    /* \"mocks/BusdMock.sol\":10688:10706  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"mocks/BusdMock.sol\":10755:10764  msgSender */\n  dup1\n    /* \"mocks/BusdMock.sol\":10722:10765  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"mocks/BusdMock.sol\":10751:10752  0 */\n  0x00\n    /* \"mocks/BusdMock.sol\":10722:10765  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"mocks/BusdMock.sol\":10634:10773  {... */\n  pop\n    /* \"mocks/BusdMock.sol\":10338:12275  contract Ownable is Context {... */\n  jump(tag_8)\n    /* \"mocks/BusdMock.sol\":4079:4186  function _msgSender() internal view returns (address payable) {... */\ntag_7:\n    /* \"mocks/BusdMock.sol\":4124:4139  address payable */\n  0x00\n    /* \"mocks/BusdMock.sol\":4167:4177  msg.sender */\n  caller\n    /* \"mocks/BusdMock.sol\":4152:4178  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"mocks/BusdMock.sol\":4079:4186  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"mocks/BusdMock.sol\":10338:12275  contract Ownable is Context {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"mocks/BusdMock.sol\":10338:12275  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"mocks/BusdMock.sol\":11496:11636  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"mocks/BusdMock.sol\":10854:10933  function owner() public view returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mocks/BusdMock.sol\":11791:11900  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"mocks/BusdMock.sol\":11496:11636  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      tag_17\n        /* \"mocks/BusdMock.sol\":11076:11086  _msgSender */\n      tag_18\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      jump\t// in\n    tag_17:\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11072  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mocks/BusdMock.sol\":11058:11125  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"mocks/BusdMock.sol\":11595:11596  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":11558:11598  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11579:11585  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11558:11598  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mocks/BusdMock.sol\":11626:11627  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":11609:11615  _owner */\n      dup1\n      0x00\n        /* \"mocks/BusdMock.sol\":11609:11628  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":11496:11636  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":10854:10933  function owner() public view returns (address) {... */\n    tag_9:\n        /* \"mocks/BusdMock.sol\":10892:10899  address */\n      0x00\n        /* \"mocks/BusdMock.sol\":10919:10925  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":10912:10925  return _owner */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":10854:10933  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":11791:11900  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_15:\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      tag_25\n        /* \"mocks/BusdMock.sol\":11076:11086  _msgSender */\n      tag_18\n        /* \"mocks/BusdMock.sol\":11076:11088  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11072  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":11066:11088  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mocks/BusdMock.sol\":11058:11125  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"mocks/BusdMock.sol\":11864:11892  _transferOwnership(newOwner) */\n      tag_29\n        /* \"mocks/BusdMock.sol\":11883:11891  newOwner */\n      dup2\n        /* \"mocks/BusdMock.sol\":11864:11882  _transferOwnership */\n      tag_30\n        /* \"mocks/BusdMock.sol\":11864:11892  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"mocks/BusdMock.sol\":11791:11900  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":4079:4186  function _msgSender() internal view returns (address payable) {... */\n    tag_18:\n        /* \"mocks/BusdMock.sol\":4124:4139  address payable */\n      0x00\n        /* \"mocks/BusdMock.sol\":4167:4177  msg.sender */\n      caller\n        /* \"mocks/BusdMock.sol\":4152:4178  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"mocks/BusdMock.sol\":4079:4186  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"mocks/BusdMock.sol\":12006:12272  function _transferOwnership(address newOwner) internal {... */\n    tag_30:\n        /* \"mocks/BusdMock.sol\":12114:12115  0 */\n      0x00\n        /* \"mocks/BusdMock.sol\":12094:12116  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":12094:12102  newOwner */\n      dup2\n        /* \"mocks/BusdMock.sol\":12094:12116  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mocks/BusdMock.sol\":12072:12182  require(... */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"mocks/BusdMock.sol\":12227:12235  newOwner */\n      dup1\n        /* \"mocks/BusdMock.sol\":12198:12236  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":12219:12225  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mocks/BusdMock.sol\":12198:12236  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mocks/BusdMock.sol\":12256:12264  newOwner */\n      dup1\n        /* \"mocks/BusdMock.sol\":12247:12253  _owner */\n      0x00\n      dup1\n        /* \"mocks/BusdMock.sol\":12247:12264  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"mocks/BusdMock.sol\":12006:12272  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_36:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_37:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_52\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_36\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_38:\n        /* \"#utility.yul\":328:352   */\n      tag_54\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_37\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_56\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_38\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_40:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_42:\n        /* \"#utility.yul\":993:1017   */\n      tag_61\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_37\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_62:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_43:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_64\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_42\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_14:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_67\n      tag_40\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1269:1388   */\n    tag_66:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_68\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_43\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_44:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1885   */\n    tag_45:\n        /* \"#utility.yul\":1843:1877   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1703:1885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2257   */\n    tag_46:\n        /* \"#utility.yul\":2033:2036   */\n      0x00\n        /* \"#utility.yul\":2054:2121   */\n      tag_72\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2113:2116   */\n      dup4\n        /* \"#utility.yul\":2054:2121   */\n      tag_44\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2047:2121   */\n      swap2\n      pop\n        /* \"#utility.yul\":2130:2223   */\n      tag_73\n        /* \"#utility.yul\":2219:2222   */\n      dup3\n        /* \"#utility.yul\":2130:2223   */\n      tag_45\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2248:2250   */\n      0x20\n        /* \"#utility.yul\":2243:2246   */\n      dup3\n        /* \"#utility.yul\":2239:2251   */\n      add\n        /* \"#utility.yul\":2232:2251   */\n      swap1\n      pop\n        /* \"#utility.yul\":1891:2257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2263:2682   */\n    tag_21:\n        /* \"#utility.yul\":2429:2433   */\n      0x00\n        /* \"#utility.yul\":2467:2469   */\n      0x20\n        /* \"#utility.yul\":2456:2465   */\n      dup3\n        /* \"#utility.yul\":2452:2470   */\n      add\n        /* \"#utility.yul\":2444:2470   */\n      swap1\n      pop\n        /* \"#utility.yul\":2516:2525   */\n      dup2\n        /* \"#utility.yul\":2510:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2526   */\n      sub\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2491:2500   */\n      dup4\n        /* \"#utility.yul\":2487:2504   */\n      add\n        /* \"#utility.yul\":2480:2527   */\n      mstore\n        /* \"#utility.yul\":2544:2675   */\n      tag_75\n        /* \"#utility.yul\":2670:2674   */\n      dup2\n        /* \"#utility.yul\":2544:2675   */\n      tag_46\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2536:2675   */\n      swap1\n      pop\n        /* \"#utility.yul\":2263:2682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2688:2913   */\n    tag_47:\n        /* \"#utility.yul\":2828:2862   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2824:2825   */\n      0x00\n        /* \"#utility.yul\":2816:2822   */\n      dup3\n        /* \"#utility.yul\":2812:2826   */\n      add\n        /* \"#utility.yul\":2805:2863   */\n      mstore\n        /* \"#utility.yul\":2897:2905   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2892:2894   */\n      0x20\n        /* \"#utility.yul\":2884:2890   */\n      dup3\n        /* \"#utility.yul\":2880:2895   */\n      add\n        /* \"#utility.yul\":2873:2906   */\n      mstore\n        /* \"#utility.yul\":2688:2913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2919:3285   */\n    tag_48:\n        /* \"#utility.yul\":3061:3064   */\n      0x00\n        /* \"#utility.yul\":3082:3149   */\n      tag_78\n        /* \"#utility.yul\":3146:3148   */\n      0x26\n        /* \"#utility.yul\":3141:3144   */\n      dup4\n        /* \"#utility.yul\":3082:3149   */\n      tag_44\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3075:3149   */\n      swap2\n      pop\n        /* \"#utility.yul\":3158:3251   */\n      tag_79\n        /* \"#utility.yul\":3247:3250   */\n      dup3\n        /* \"#utility.yul\":3158:3251   */\n      tag_47\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3276:3278   */\n      0x40\n        /* \"#utility.yul\":3271:3274   */\n      dup3\n        /* \"#utility.yul\":3267:3279   */\n      add\n        /* \"#utility.yul\":3260:3279   */\n      swap1\n      pop\n        /* \"#utility.yul\":2919:3285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3291:3710   */\n    tag_35:\n        /* \"#utility.yul\":3457:3461   */\n      0x00\n        /* \"#utility.yul\":3495:3497   */\n      0x20\n        /* \"#utility.yul\":3484:3493   */\n      dup3\n        /* \"#utility.yul\":3480:3498   */\n      add\n        /* \"#utility.yul\":3472:3498   */\n      swap1\n      pop\n        /* \"#utility.yul\":3544:3553   */\n      dup2\n        /* \"#utility.yul\":3538:3542   */\n      dup2\n        /* \"#utility.yul\":3534:3554   */\n      sub\n        /* \"#utility.yul\":3530:3531   */\n      0x00\n        /* \"#utility.yul\":3519:3528   */\n      dup4\n        /* \"#utility.yul\":3515:3532   */\n      add\n        /* \"#utility.yul\":3508:3555   */\n      mstore\n        /* \"#utility.yul\":3572:3703   */\n      tag_81\n        /* \"#utility.yul\":3698:3702   */\n      dup2\n        /* \"#utility.yul\":3572:3703   */\n      tag_48\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3564:3703   */\n      swap1\n      pop\n        /* \"#utility.yul\":3291:3710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cc6eb2ad88745ea668b6bddb33e6f060134b4592258c46c6bad227db09886f7164736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_355": {
									"entryPoint": null,
									"id": 355,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 196,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6105db806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b604051610065919061041d565b60405180910390f35b61008860048036038101906100839190610469565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104f3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104f3565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031690610585565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610407826103dc565b9050919050565b610417816103fc565b82525050565b6000602082019050610432600083018461040e565b92915050565b600080fd5b610446816103fc565b811461045157600080fd5b50565b6000813590506104638161043d565b92915050565b60006020828403121561047f5761047e610438565b5b600061048d84828501610454565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006104dd602083610496565b91506104e8826104a7565b602082019050919050565b6000602082019050818103600083015261050c816104d0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061056f602683610496565b915061057a82610513565b604082019050919050565b6000602082019050818103600083015261059e81610562565b905091905056fea2646970667358221220cc6eb2ad88745ea668b6bddb33e6f060134b4592258c46c6bad227db09886f7164736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5DB DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 DUP3 PUSH2 0x3DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x432 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x446 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP2 EQ PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x463 DUP2 PUSH2 0x43D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47F JUMPI PUSH2 0x47E PUSH2 0x438 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48D DUP5 DUP3 DUP6 ADD PUSH2 0x454 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD PUSH1 0x20 DUP4 PUSH2 0x496 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8 DUP3 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50C DUP2 PUSH2 0x4D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56F PUSH1 0x26 DUP4 PUSH2 0x496 JUMP JUMPDEST SWAP2 POP PUSH2 0x57A DUP3 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x59E DUP2 PUSH2 0x562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH15 0xB2AD88745EA668B6BDDB33E6F06013 0x4B GASLIMIT SWAP3 0x25 DUP13 CHAINID 0xC6 0xBA 0xD2 0x27 0xDB MULMOD DUP9 PUSH16 0x7164736F6C6343000809003300000000 ",
							"sourceMap": "10338:1937:0:-:0;;;10620:153;;;;;;;;;;10645:17;10665:12;:10;;;:12;;:::i;:::-;10645:32;;10697:9;10688:6;;:18;;;;;;;;;;;;;;;;;;10755:9;10722:43;;10751:1;10722:43;;;;;;;;;;;;10634:139;10338:1937;;4079:107;4124:15;4167:10;4152:26;;4079:107;:::o;10338:1937::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_116": {
									"entryPoint": 679,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_438": {
									"entryPoint": 687,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_364": {
									"entryPoint": 477,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_399": {
									"entryPoint": 138,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_412": {
									"entryPoint": 518,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3713:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:1",
														"type": ""
													}
												],
												"src": "593:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:1"
															},
															"nodeType": "YulIf",
															"src": "973:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:1",
														"type": ""
													}
												],
												"src": "920:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:1",
														"type": ""
													}
												],
												"src": "1048:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:1"
															},
															"nodeType": "YulIf",
															"src": "1269:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:1",
														"type": ""
													}
												],
												"src": "1193:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1596:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1612:11:1",
														"type": ""
													}
												],
												"src": "1528:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1801:6:1",
														"type": ""
													}
												],
												"src": "1703:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2037:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2047:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2113:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2054:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2047:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2219:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "2130:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2130:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2232:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2243:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2239:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2232:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2025:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2033:3:1",
														"type": ""
													}
												],
												"src": "1891:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2434:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2444:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2456:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2467:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2444:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2510:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2516:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2506:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2480:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2536:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2670:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2544:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2536:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2414:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2429:4:1",
														"type": ""
													}
												],
												"src": "2263:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2794:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2816:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2824:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2828:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2805:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2884:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2892:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2897:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2873:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2786:6:1",
														"type": ""
													}
												],
												"src": "2688:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3075:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3141:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3082:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3075:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3247:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3158:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3260:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3260:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3053:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3061:3:1",
														"type": ""
													}
												],
												"src": "2919:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3462:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3472:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3484:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3495:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3472:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3519:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3530:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3538:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3544:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3534:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3508:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3564:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3698:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3572:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3564:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3442:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3457:4:1",
														"type": ""
													}
												],
												"src": "3291:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b604051610065919061041d565b60405180910390f35b61008860048036038101906100839190610469565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104f3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104f3565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031690610585565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610407826103dc565b9050919050565b610417816103fc565b82525050565b6000602082019050610432600083018461040e565b92915050565b600080fd5b610446816103fc565b811461045157600080fd5b50565b6000813590506104638161043d565b92915050565b60006020828403121561047f5761047e610438565b5b600061048d84828501610454565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006104dd602083610496565b91506104e8826104a7565b602082019050919050565b6000602082019050818103600083015261050c816104d0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061056f602683610496565b915061057a82610513565b604082019050919050565b6000602082019050818103600083015261059e81610562565b905091905056fea2646970667358221220cc6eb2ad88745ea668b6bddb33e6f060134b4592258c46c6bad227db09886f7164736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 DUP3 PUSH2 0x3DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x432 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x446 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP2 EQ PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x463 DUP2 PUSH2 0x43D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47F JUMPI PUSH2 0x47E PUSH2 0x438 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x48D DUP5 DUP3 DUP6 ADD PUSH2 0x454 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD PUSH1 0x20 DUP4 PUSH2 0x496 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E8 DUP3 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50C DUP2 PUSH2 0x4D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56F PUSH1 0x26 DUP4 PUSH2 0x496 JUMP JUMPDEST SWAP2 POP PUSH2 0x57A DUP3 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x59E DUP2 PUSH2 0x562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH15 0xB2AD88745EA668B6BDDB33E6F06013 0x4B GASLIMIT SWAP3 0x25 DUP13 CHAINID 0xC6 0xBA 0xD2 0x27 0xDB MULMOD DUP9 PUSH16 0x7164736F6C6343000809003300000000 ",
							"sourceMap": "10338:1937:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11496:140;;;:::i;:::-;;10854:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11791:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11496:140;11076:12;:10;:12::i;:::-;11066:22;;:6;;;;;;;;;;:22;;;11058:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;11595:1:::1;11558:40;;11579:6;::::0;::::1;;;;;;;;11558:40;;;;;;;;;;;;11626:1;11609:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;11496:140::o:0;10854:79::-;10892:7;10919:6;;;;;;;;;;;10912:13;;10854:79;:::o;11791:109::-;11076:12;:10;:12::i;:::-;11066:22;;:6;;;;;;;;;;:22;;;11058:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;11864:28:::1;11883:8;11864:18;:28::i;:::-;11791:109:::0;:::o;4079:107::-;4124:15;4167:10;4152:26;;4079:107;:::o;12006:266::-;12114:1;12094:22;;:8;:22;;;;12072:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;12227:8;12198:38;;12219:6;;;;;;;;;;12198:38;;;;;;;;;;;;12256:8;12247:6;;:17;;;;;;;;;;;;;;;;;;12006:266;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:182::-;1843:34;1839:1;1831:6;1827:14;1820:58;1703:182;:::o;1891:366::-;2033:3;2054:67;2118:2;2113:3;2054:67;:::i;:::-;2047:74;;2130:93;2219:3;2130:93;:::i;:::-;2248:2;2243:3;2239:12;2232:19;;1891:366;;;:::o;2263:419::-;2429:4;2467:2;2456:9;2452:18;2444:26;;2516:9;2510:4;2506:20;2502:1;2491:9;2487:17;2480:47;2544:131;2670:4;2544:131;:::i;:::-;2536:139;;2263:419;;;:::o;2688:225::-;2828:34;2824:1;2816:6;2812:14;2805:58;2897:8;2892:2;2884:6;2880:15;2873:33;2688:225;:::o;2919:366::-;3061:3;3082:67;3146:2;3141:3;3082:67;:::i;:::-;3075:74;;3158:93;3247:3;3158:93;:::i;:::-;3276:2;3271:3;3267:12;3260:19;;2919:366;;;:::o;3291:419::-;3457:4;3495:2;3484:9;3480:18;3472:26;;3544:9;3538:4;3534:20;3530:1;3519:9;3515:17;3508:47;3572:131;3698:4;3572:131;:::i;:::-;3564:139;;3291:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "299800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2522",
								"renounceOwnership()": "30269",
								"transferOwnership(address)": "30691"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10338,
									"end": 12275,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10620,
									"end": 10773,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10645,
									"end": 10662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 10665,
									"end": 10675,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 10665,
									"end": 10675,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10665,
									"end": 10675,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 10665,
									"end": 10677,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10645,
									"end": 10677,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10645,
									"end": 10677,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10697,
									"end": 10706,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10694,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10688,
									"end": 10694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10755,
									"end": 10764,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10751,
									"end": 10752,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10722,
									"end": 10765,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 10634,
									"end": 10773,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4079,
									"end": 4186,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 4079,
									"end": 4186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4139,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4167,
									"end": 4177,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4152,
									"end": 4178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4152,
									"end": 4178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4079,
									"end": 4186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4079,
									"end": 4186,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10338,
									"end": 12275,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc6eb2ad88745ea668b6bddb33e6f060134b4592258c46c6bad227db09886f7164736f6c63430008090033",
									".code": [
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10338,
											"end": 12275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11076,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11579,
											"end": 11585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11598,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11496,
											"end": 11636,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10892,
											"end": 10899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10854,
											"end": 10933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11076,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11076,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11066,
											"end": 11088,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11058,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11883,
											"end": 11891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11864,
											"end": 11892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11864,
											"end": 11892,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11864,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11900,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4079,
											"end": 4186,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4079,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4177,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4186,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12006,
											"end": 12272,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12006,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12114,
											"end": 12115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 12072,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12227,
											"end": 12235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12219,
											"end": 12225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12198,
											"end": 12236,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12256,
											"end": 12264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12247,
											"end": 12253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12247,
											"end": 12264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12006,
											"end": 12272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12006,
											"end": 12272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2239,
											"end": 2251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2670,
											"end": 2674,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2905,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2873,
											"end": 2906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3141,
											"end": 3144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3247,
											"end": 3250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3554,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mocks/BusdMock.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mocks/BusdMock.sol\":{\"keccak256\":\"0xe864718eb4020b1b7975b76556836aa00effe9d5de234994cce7c06f0b23efee\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://412de1e995b7975b5751f790fa43a1b9e19cb491142cf9e8cc513c8f827f1d7d\",\"dweb:/ipfs/QmNSe8MBL1B4oAaCyo9xeEuSe3WQzbLzRuqjPucetbSyN3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mocks/BusdMock.sol\":5003:9827  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"mocks/BusdMock.sol\":5003:9827  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c1111260fc06a183731dda4e910bd78893c84a7f2e7a3b645807f7b050c0aa0c64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1111260fc06a183731dda4e910bd78893c84a7f2e7a3b645807f7b050c0aa0c64736f6c63430008090033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 GT SLT PUSH1 0xFC MOD LOG1 DUP4 PUSH20 0x1DDA4E910BD78893C84A7F2E7A3B645807F7B050 0xC0 0xAA 0xC PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "5003:4824:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1111260fc06a183731dda4e910bd78893c84a7f2e7a3b645807f7b050c0aa0c64736f6c63430008090033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 GT SLT PUSH1 0xFC MOD LOG1 DUP4 PUSH20 0x1DDA4E910BD78893C84A7F2E7A3B645807F7B050 0xC0 0xAA 0xC PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "5003:4824:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5003,
									"end": 9827,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1111260fc06a183731dda4e910bd78893c84a7f2e7a3b645807f7b050c0aa0c64736f6c63430008090033",
									".code": [
										{
											"begin": 5003,
											"end": 9827,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 9827,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 9827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 9827,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5003,
											"end": 9827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 9827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 9827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 9827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 9827,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mocks/BusdMock.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mocks/BusdMock.sol\":{\"keccak256\":\"0xe864718eb4020b1b7975b76556836aa00effe9d5de234994cce7c06f0b23efee\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://412de1e995b7975b5751f790fa43a1b9e19cb491142cf9e8cc513c8f827f1d7d\",\"dweb:/ipfs/QmNSe8MBL1B4oAaCyo9xeEuSe3WQzbLzRuqjPucetbSyN3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"mocks/BusdMock.sol": {
				"ast": {
					"absolutePath": "mocks/BusdMock.sol",
					"exportedSymbols": {
						"BusdMock": [
							978
						],
						"Context": [
							128
						],
						"IBEP20": [
							100
						],
						"Ownable": [
							439
						],
						"SafeMath": [
							322
						]
					},
					"id": 979,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "111:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nameLocation": "147:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "161:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "244:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "255:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "281:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:9:0"
									},
									"scope": 100,
									"src": "235:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "298:53:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "366:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "400:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "400:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:7:0"
									},
									"scope": 100,
									"src": "357:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "415:51:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "481:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "513:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:15:0"
									},
									"scope": 100,
									"src": "472:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "536:49:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "600:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "604:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "630:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "629:15:0"
									},
									"scope": 100,
									"src": "591:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "653:54:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "722:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:9:0"
									},
									"scope": 100,
									"src": "713:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "773:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "862:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "880:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "912:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:9:0"
									},
									"scope": 100,
									"src": "853:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "929:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1159:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1176:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1168:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1195:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1187:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1239:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1239:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:6:0"
									},
									"scope": 100,
									"src": "1150:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1253:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1538:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1556:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1548:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1631:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1630:9:0"
									},
									"scope": 100,
									"src": "1529:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1648:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2351:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2343:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:0"
									},
									"scope": 100,
									"src": "2309:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2391:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2710:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2741:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2733:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2766:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2758:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2794:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2786:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2722:85:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2826:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2826:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2825:6:0"
									},
									"scope": 100,
									"src": "2701:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2840:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nameLocation": "3015:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3040:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3024:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3062:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3046:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3074:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3066:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:57:0"
									},
									"src": "3009:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3089:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nameLocation": "3252:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3287:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3271:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3303:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3345:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3337:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3260:97:0"
									},
									"src": "3246:112:0"
								}
							],
							"scope": 979,
							"src": "137:3224:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 128,
							"linearizedBaseContracts": [
								128
							],
							"name": "Context",
							"nameLocation": "3884:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "4069:2:0",
										"statements": []
									},
									"id": 104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4066:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4069:0:0"
									},
									"scope": 128,
									"src": "4055:16:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "4141:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4167:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4167:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4159:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4159:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4159:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 108,
												"id": 114,
												"nodeType": "Return",
												"src": "4152:26:0"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4088:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4098:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4124:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4124:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4123:17:0"
									},
									"scope": 128,
									"src": "4079:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "4251:168:0",
										"statements": [
											{
												"expression": {
													"id": 121,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "4262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$128",
														"typeString": "contract Context"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "4262:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 123,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4403:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4403:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 125,
												"nodeType": "Return",
												"src": "4396:15:0"
											}
										]
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4203:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4211:2:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "4237:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4237:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4236:14:0"
									},
									"scope": 128,
									"src": "4194:225:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 979,
							"src": "3875:547:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "4426:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 322,
							"linearizedBaseContracts": [
								322
							],
							"name": "SafeMath",
							"nameLocation": "5011:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "5325:114:0",
										"statements": [
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "5344:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 154,
														"src": "5336:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5336:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 141,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "5348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 142,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "5352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5348:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5336:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "5372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 147,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "5377:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5372:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5380:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5364:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "5364:46:0"
											},
											{
												"expression": {
													"id": 152,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "5430:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 138,
												"id": 153,
												"nodeType": "Return",
												"src": "5423:8:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "5027:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5267:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5279:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5271:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5290:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5282:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5270:22:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:9:0"
									},
									"scope": 322,
									"src": "5258:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "5781:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5803:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 167,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5806:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5809:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 165,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															172,
															200
														],
														"referencedDeclaration": 200,
														"src": "5799:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5799:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 170,
												"nodeType": "Return",
												"src": "5792:50:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5447:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5723:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5735:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5727:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5746:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5738:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5726:22:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5772:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5771:9:0"
									},
									"scope": 322,
									"src": "5714:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "6274:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 185,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "6293:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 186,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "6298:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 188,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6301:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6285:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6285:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "6285:29:0"
											},
											{
												"assignments": [
													192
												],
												"declarations": [
													{
														"constant": false,
														"id": 192,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "6333:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "6325:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 196,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 193,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6337:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 194,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "6341:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6337:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6325:17:0"
											},
											{
												"expression": {
													"id": 197,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "6362:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 183,
												"id": 198,
												"nodeType": "Return",
												"src": "6355:8:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "5858:281:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "6154:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6176:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6168:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6196:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6188:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6222:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6208:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6208:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6157:84:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "6265:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:9:0"
									},
									"scope": 322,
									"src": "6145:226:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "6689:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 210,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "6925:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6930:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6925:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 216,
												"nodeType": "IfStatement",
												"src": "6921:47:0",
												"trueBody": {
													"id": 215,
													"nodeType": "Block",
													"src": "6933:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6955:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 209,
															"id": 214,
															"nodeType": "Return",
															"src": "6948:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "6988:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 234,
														"src": "6980:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 219,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "6992:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 220,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "6996:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6980:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 224,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "7016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 225,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "7020:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7016:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 227,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "7025:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7016:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7028:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7008:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7008:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "7008:56:0"
											},
											{
												"expression": {
													"id": 232,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 218,
													"src": "7084:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 233,
												"nodeType": "Return",
												"src": "7077:8:0"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "6379:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "6631:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6643:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "6635:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6654:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "6646:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6634:22:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "6680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6679:9:0"
									},
									"scope": 322,
									"src": "6622:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "7628:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7650:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 247,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "7653:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7656:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 245,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															252,
															280
														],
														"referencedDeclaration": 280,
														"src": "7646:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7646:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 250,
												"nodeType": "Return",
												"src": "7639:46:0"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "7101:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "7570:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7582:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "7574:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7593:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "7585:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7573:22:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "7619:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7618:9:0"
									},
									"scope": 322,
									"src": "7561:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "8310:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 265,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "8396:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8400:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8396:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 268,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8403:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8388:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "8388:28:0"
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "8435:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 279,
														"src": "8427:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 273,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "8439:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 274,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "8443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8439:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8427:17:0"
											},
											{
												"expression": {
													"id": 277,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 272,
													"src": "8551:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 278,
												"nodeType": "Return",
												"src": "8544:8:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "7701:474:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "8190:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8212:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "8204:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8232:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "8224:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8258:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "8244:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8244:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8193:84:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "8301:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8300:9:0"
									},
									"scope": 322,
									"src": "8181:379:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "9084:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "9106:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 292,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "9109:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9112:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 290,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															297,
															321
														],
														"referencedDeclaration": 321,
														"src": "9102:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9102:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 289,
												"id": 295,
												"nodeType": "Return",
												"src": "9095:44:0"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "8568:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "9026:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9038:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "9030:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9049:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "9041:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9029:22:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "9075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9074:9:0"
									},
									"scope": 322,
									"src": "9017:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "9753:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "9772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9777:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9772:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 313,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "9780:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9764:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "9764:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 316,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "9811:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 317,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9815:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9811:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 308,
												"id": 319,
												"nodeType": "Return",
												"src": "9804:12:0"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "9155:463:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "9633:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9655:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "9647:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9675:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "9667:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9701:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "9687:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9687:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9636:84:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "9744:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9743:9:0"
									},
									"scope": 322,
									"src": "9624:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 979,
							"src": "5003:4824:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 324,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 128,
										"src": "10358:7:0"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "10358:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "9831:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 439,
							"linearizedBaseContracts": [
								439,
								128
							],
							"name": "Ownable",
							"nameLocation": "10347:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "10389:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 439,
									"src": "10373:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 326,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10373:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 333,
									"name": "OwnershipTransferred",
									"nameLocation": "10410:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "10457:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "10441:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10497:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "10481:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10430:82:0"
									},
									"src": "10404:109:0"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "10634:139:0",
										"statements": [
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "10653:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "10645:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10645:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 339,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "10665:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10665:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10645:32:0"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 342,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "10688:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 343,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "10697:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10688:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "10688:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10751:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10743:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 347,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10743:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10743:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "10755:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 346,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "10722:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10722:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "EmitStatement",
												"src": "10717:48:0"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "10521:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 355,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10631:2:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10634:0:0"
									},
									"scope": 439,
									"src": "10620:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "10901:32:0",
										"statements": [
											{
												"expression": {
													"id": 361,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 327,
													"src": "10919:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 360,
												"id": 362,
												"nodeType": "Return",
												"src": "10912:13:0"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "10781:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "10863:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10868:2:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "10892:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10891:9:0"
									},
									"scope": 439,
									"src": "10854:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "11047:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "11066:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 369,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "11076:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11076:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11066:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11090:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11058:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "11058:67:0"
											},
											{
												"id": 375,
												"nodeType": "PlaceholderStatement",
												"src": "11136:1:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "10941:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 377,
									"name": "onlyOwner",
									"nameLocation": "11035:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11044:2:0"
									},
									"src": "11026:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "11542:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 384,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "11579:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11595:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11587:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11587:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11587:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 383,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "11558:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11558:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "EmitStatement",
												"src": "11553:45:0"
											},
											{
												"expression": {
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 391,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "11609:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11626:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11618:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11618:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11609:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "11609:19:0"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "11153:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 380,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "11532:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11532:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "11505:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11522:2:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11542:0:0"
									},
									"scope": 439,
									"src": "11496:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "11853:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "11883:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 407,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "11864:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11864:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "11864:28:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "11644:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 404,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "11843:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11843:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "11800:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "11826:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "11818:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11817:18:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11853:0:0"
									},
									"scope": 439,
									"src": "11791:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "12061:211:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 419,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "12094:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12114:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12106:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 420,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12106:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12106:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12094:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12131:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12072:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12072:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "12072:110:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 429,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "12219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "12227:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 428,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "12198:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12198:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "EmitStatement",
												"src": "12193:43:0"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "12247:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 434,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "12256:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12247:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "12247:17:0"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "11908:92:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "12015:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "12042:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "12034:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12033:18:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12061:0:0"
									},
									"scope": 439,
									"src": "12006:266:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 979,
							"src": "10338:1937:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 440,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 128,
										"src": "12300:7:0"
									},
									"id": 441,
									"nodeType": "InheritanceSpecifier",
									"src": "12300:7:0"
								},
								{
									"baseName": {
										"id": 442,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12309:6:0"
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "12309:6:0"
								},
								{
									"baseName": {
										"id": 444,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 439,
										"src": "12317:7:0"
									},
									"id": 445,
									"nodeType": "InheritanceSpecifier",
									"src": "12317:7:0"
								}
							],
							"canonicalName": "BusdMock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 978,
							"linearizedBaseContracts": [
								978,
								439,
								100,
								128
							],
							"name": "BusdMock",
							"nameLocation": "12288:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 448,
									"libraryName": {
										"id": 446,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 322,
										"src": "12338:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "12332:27:0",
									"typeName": {
										"id": 447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12351:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12403:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 978,
									"src": "12367:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 451,
										"keyType": {
											"id": 449,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12375:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12367:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 450,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12386:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 458,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12477:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 978,
									"src": "12421:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 457,
										"keyType": {
											"id": 453,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12429:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12421:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 456,
											"keyType": {
												"id": 454,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12448:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12440:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 455,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12459:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 460,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12513:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 978,
									"src": "12497:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12497:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "32424aa3",
									"id": 462,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "12545:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 978,
									"src": "12532:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 461,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "12532:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b09f1266",
									"id": 464,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12575:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 978,
									"src": "12561:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 463,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12561:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d28d8852",
									"id": 466,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12603:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 978,
									"src": "12589:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 465,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12589:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "12631:254:0",
										"statements": [
											{
												"expression": {
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 469,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "12642:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4255534420546f6b656e",
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12650:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_16049baf3e8137898ee94c7192d51db32de57f2b58e83c6f4141f893547534ae",
															"typeString": "literal_string \"BUSD Token\""
														},
														"value": "BUSD Token"
													},
													"src": "12642:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "12642:20:0"
											},
											{
												"expression": {
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 473,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "12673:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "42555344",
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12683:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_54c512ac779647672b8d02e2fe2dc10f79bbf19f719d887221696215fd24e9f1",
															"typeString": "literal_string \"BUSD\""
														},
														"value": "BUSD"
													},
													"src": "12673:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "12673:16:0"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "12700:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12712:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "12700:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "12700:14:0"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 481,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "12725:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3331303030303030303030303030303030303030303030303030",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12740:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31000000000000000000000000_by_1",
															"typeString": "int_const 31000000000000000000000000"
														},
														"value": "31000000000000000000000000"
													},
													"src": "12725:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "12725:41:0"
											},
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 485,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "12777:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 488,
														"indexExpression": {
															"expression": {
																"id": 486,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12787:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12787:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12777:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 489,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "12801:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12777:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "12777:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12840:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12840:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 497,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12852:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12852:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "12864:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 492,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "12831:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12831:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "EmitStatement",
												"src": "12826:51:0"
											}
										]
									},
									"id": 503,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12628:2:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12631:0:0"
									},
									"scope": 978,
									"src": "12617:268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "13005:33:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 509,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "13023:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13023:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 508,
												"id": 511,
												"nodeType": "Return",
												"src": "13016:14:0"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "12893:54:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "12962:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12970:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "12996:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12995:9:0"
									},
									"scope": 978,
									"src": "12953:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "13155:35:0",
										"statements": [
											{
												"expression": {
													"id": 519,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "13173:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 518,
												"id": 520,
												"nodeType": "Return",
												"src": "13166:16:0"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "13046:53:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13114:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13122:2:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "13148:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 516,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13148:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13147:7:0"
									},
									"scope": 978,
									"src": "13105:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										19
									],
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "13311:33:0",
										"statements": [
											{
												"expression": {
													"id": 528,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "13329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 527,
												"id": 529,
												"nodeType": "Return",
												"src": "13322:14:0"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "13198:51:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13264:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13270:2:0"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "13296:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 525,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:15:0"
									},
									"scope": 978,
									"src": "13255:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "13461:31:0",
										"statements": [
											{
												"expression": {
													"id": 537,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 466,
													"src": "13479:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 536,
												"id": 538,
												"nodeType": "Return",
												"src": "13472:12:0"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "13352:49:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "13416:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13420:2:0"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "13446:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 534,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13446:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13445:15:0"
									},
									"scope": 978,
									"src": "13407:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "13611:38:0",
										"statements": [
											{
												"expression": {
													"id": 546,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "13629:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 547,
												"nodeType": "Return",
												"src": "13622:19:0"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "13500:50:0",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13565:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13576:2:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "13602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13601:9:0"
									},
									"scope": 978,
									"src": "13556:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "13779:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 557,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "13797:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 559,
													"indexExpression": {
														"id": 558,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "13807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13797:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 556,
												"id": 560,
												"nodeType": "Return",
												"src": "13790:25:0"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "13657:48:0",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13720:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13738:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "13730:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13729:17:0"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "13770:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13769:9:0"
									},
									"scope": 978,
									"src": "13711:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "14135:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 573,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "14156:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14156:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 575,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "14170:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "14181:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 572,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "14146:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14146:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "14146:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14206:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 571,
												"id": 580,
												"nodeType": "Return",
												"src": "14199:11:0"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "13831:198:0",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14044:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "14061:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "14053:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14080:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "14072:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14052:35:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "14124:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14123:6:0"
									},
									"scope": 978,
									"src": "14035:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "14395:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 592,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "14413:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "14425:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14413:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 596,
													"indexExpression": {
														"id": 595,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "14432:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14413:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 597,
												"nodeType": "Return",
												"src": "14406:34:0"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "14226:48:0",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14289:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14307:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "14299:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "14314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14298:32:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "14381:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14380:9:0"
									},
									"scope": 978,
									"src": "14280:168:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "14668:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 610,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "14688:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14688:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 612,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "14702:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "14711:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 609,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "14679:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14679:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "14679:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14736:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 617,
												"nodeType": "Return",
												"src": "14729:11:0"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "14456:132:0",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14603:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14619:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "14611:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14636:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "14628:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14610:33:0"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "14662:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14662:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14661:6:0"
									},
									"scope": 978,
									"src": "14594:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "15350:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "15371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "15379:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "15390:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "15361:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15361:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "15361:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "15431:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 639,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "15452:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15452:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 648,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "15535:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15560:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 641,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "15479:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 643,
																		"indexExpression": {
																			"id": 642,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 622,
																			"src": "15491:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15479:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 646,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 644,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 116,
																			"src": "15499:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15499:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15479:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 200,
																"src": "15479:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15479:138:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "15408:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15408:220:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "15408:220:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 630,
												"id": 654,
												"nodeType": "Return",
												"src": "15639:11:0"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "14756:457:0",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15228:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "15259:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "15251:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "15284:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "15276:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15312:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "15304:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15240:85:0"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "15344:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15344:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15343:6:0"
									},
									"scope": 978,
									"src": "15219:439:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "16175:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 667,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "16209:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16209:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 669,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "16236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 677,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "16297:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 670,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "16258:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 673,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 671,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 116,
																				"src": "16270:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16270:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16258:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 675,
																	"indexExpression": {
																		"id": 674,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "16284:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16258:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 155,
																"src": "16258:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16258:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 666,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16186:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16186:133:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "16186:133:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16337:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 665,
												"id": 682,
												"nodeType": "Return",
												"src": "16330:11:0"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "15666:394:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "16075:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "16093:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "16118:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "16110:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16092:37:0"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "16164:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 663,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16164:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16163:6:0"
									},
									"scope": 978,
									"src": "16066:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "16965:269:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "16999:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16999:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 697,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "17026:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 705,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "17105:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17139:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 698,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "17048:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 701,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 699,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 116,
																				"src": "17060:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17060:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17048:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 703,
																	"indexExpression": {
																		"id": 702,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "17074:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17048:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 200,
																"src": "17048:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17048:145:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "16976:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16976:228:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "16976:228:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17222:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 693,
												"id": 711,
												"nodeType": "Return",
												"src": "17215:11:0"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "16357:488:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "16860:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "16878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "16903:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "16895:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16877:42:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "16954:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16954:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16953:6:0"
									},
									"scope": 978,
									"src": "16851:383:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "17514:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 724,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "17531:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17531:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 726,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "17545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "17525:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17525:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "17525:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17570:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 722,
												"id": 730,
												"nodeType": "Return",
												"src": "17563:11:0"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "17242:204:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 718,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "17489:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17489:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "17461:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17474:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "17466:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17465:16:0"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "17508:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17508:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17507:6:0"
									},
									"scope": 978,
									"src": "17452:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "17727:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 741,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "17744:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17744:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 743,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "17758:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "17738:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17738:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "17738:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 739,
												"id": 747,
												"nodeType": "Return",
												"src": "17776:11:0"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "17590:79:0",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "17684:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17697:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17689:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17688:16:0"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "17721:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17721:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17720:6:0"
									},
									"scope": 978,
									"src": "17675:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "18398:429:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 760,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "18417:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18435:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18427:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 761,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18427:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18427:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18417:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18439:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18409:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "18409:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 770,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "18498:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18519:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18511:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 771,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18511:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18511:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18498:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18523:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18490:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "18490:71:0"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 779,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "18574:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 781,
														"indexExpression": {
															"id": 780,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "18584:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18574:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 786,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "18630:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18651:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 782,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "18594:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 784,
																"indexExpression": {
																	"id": 783,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "18604:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18594:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 200,
															"src": "18594:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18594:108:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18574:128:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "18574:128:0"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 791,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "18713:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 793,
														"indexExpression": {
															"id": 792,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "18723:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18713:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 798,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "18761:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 794,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "18736:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 796,
																"indexExpression": {
																	"id": 795,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "18746:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18736:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "18736:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18736:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18713:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "18713:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 803,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "18793:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 804,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "18801:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 805,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "18812:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "18784:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18784:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "EmitStatement",
												"src": "18779:40:0"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "17803:476:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "18294:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "18322:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "18314:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18347:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "18339:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18375:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "18367:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18303:85:0"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18398:0:0"
									},
									"scope": 978,
									"src": "18285:542:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "19165:251:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 818,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "19184:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19203:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19195:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 819,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19195:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19195:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19184:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19207:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19176:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "19176:65:0"
											},
											{
												"expression": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 827,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "19254:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 830,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "19286:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 828,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "19269:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "19269:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19269:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19254:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "19254:39:0"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 834,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "19304:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 836,
														"indexExpression": {
															"id": 835,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "19314:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19304:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 841,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "19348:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 837,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "19325:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 839,
																"indexExpression": {
																	"id": 838,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "19335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19325:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 155,
															"src": "19325:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19325:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19304:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "19304:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19388:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19380:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 846,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19380:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19380:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "19392:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "19401:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "19371:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19371:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "EmitStatement",
												"src": "19366:42:0"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "18835:267:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "19117:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19131:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "19123:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19148:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "19140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19122:33:0"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19165:0:0"
									},
									"scope": 978,
									"src": "19108:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "19805:328:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 864,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "19824:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19843:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19835:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 865,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19835:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19835:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19824:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19847:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19816:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19816:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "19816:67:0"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 873,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "19896:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 875,
														"indexExpression": {
															"id": 874,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "19906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19896:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 880,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "19954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19975:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 876,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "19917:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 878,
																"indexExpression": {
																	"id": 877,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "19927:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19917:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 200,
															"src": "19917:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19917:105:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19896:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "19896:126:0"
											},
											{
												"expression": {
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 885,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "20033:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 888,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "20065:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 886,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "20048:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 172,
															"src": "20048:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20048:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20033:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "20033:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 893,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "20097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20114:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20106:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 894,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20106:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20106:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "20118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "20088:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20088:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "EmitStatement",
												"src": "20083:42:0"
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "19424:318:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19757:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "19763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "19780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19762:33:0"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19805:0:0"
									},
									"scope": 978,
									"src": "19748:385:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "20682:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 913,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "20701:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20718:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20710:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 914,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20710:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20710:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20701:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20722:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 912,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20693:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "20693:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 923,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "20780:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20799:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20791:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 924,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20791:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20791:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20780:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20803:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 922,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20772:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "20772:68:0"
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 932,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "20853:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 935,
															"indexExpression": {
																"id": 933,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "20865:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20853:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 936,
														"indexExpression": {
															"id": 934,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "20872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20853:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "20883:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20853:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "20853:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 941,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "20914:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "20921:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "20930:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 940,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "20905:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20905:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "EmitStatement",
												"src": "20900:37:0"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "20141:426:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20582:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20609:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "20601:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20633:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "20625:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20659:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "20651:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20590:82:0"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20682:0:0"
									},
									"scope": 978,
									"src": "20573:372:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "21192:270:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "21209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "21218:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 955,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "21203:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21203:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "21203:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "21259:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 962,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "21281:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21281:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 971,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "21365:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21390:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 964,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "21308:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 966,
																		"indexExpression": {
																			"id": 965,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "21320:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21308:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 969,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 967,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 116,
																			"src": "21329:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21329:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21308:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 200,
																"src": "21308:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21308:135:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 960,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "21236:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21236:218:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "21236:218:0"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "20953:172:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "21140:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21158:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "21150:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21175:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "21167:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21149:33:0"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21192:0:0"
									},
									"scope": 978,
									"src": "21131:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 979,
							"src": "12279:9186:0",
							"usedErrors": []
						}
					],
					"src": "111:21356:0"
				},
				"id": 0
			}
		}
	}
}